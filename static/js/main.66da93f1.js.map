{"version":3,"file":"static/js/main.66da93f1.js","mappings":"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","sources":["../node_modules/automation-events/build/es5/bundle.js","../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/fast-deep-equal/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-redux/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-redux/node_modules/react-is/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../Tone/webpack/universalModuleDefinition","../Tone/webpack/bootstrap","../Tone/Tone/core/Tone.js","../Tone/Tone/shim/AudioNode.js","../Tone/Tone/core/AudioNode.js","../Tone/Tone/shim/ConstantSourceNode.js","../Tone/Tone/signal/Signal.js","../Tone/Tone/core/Gain.js","../Tone/Tone/type/Type.js","../Tone/Tone/signal/Multiply.js","../Tone/Tone/source/Source.js","../Tone/Tone/shim/WaveShaperNode.js","../Tone/Tone/signal/WaveShaper.js","../Tone/Tone/effect/Effect.js","../Tone/Tone/component/Filter.js","../Tone/Tone/component/Merge.js","../Tone/Tone/shim/AudioBuffer.js","../Tone/Tone/core/Buffer.js","../Tone/Tone/component/LFO.js","../Tone/Tone/signal/Subtract.js","../Tone/Tone/core/Param.js","../Tone/Tone/effect/StereoEffect.js","../Tone/Tone/core/Transport.js","../Tone/Tone/source/Oscillator.js","../Tone/Tone/core/Delay.js","../Tone/Tone/component/Split.js","../Tone/Tone/core/Context.js","../Tone/Tone/instrument/Instrument.js","../Tone/Tone/signal/AudioToGain.js","../Tone/Tone/component/CrossFade.js","../Tone/Tone/core/Timeline.js","../Tone/Tone/instrument/Monophonic.js","../Tone/Tone/signal/Scale.js","../Tone/Tone/component/Volume.js","../Tone/Tone/signal/Zero.js","../Tone/Tone/signal/Add.js","../Tone/Tone/signal/SignalBase.js","../Tone/Tone/component/AmplitudeEnvelope.js","../Tone/Tone/source/BufferSource.js","../Tone/Tone/effect/FeedbackEffect.js","../Tone/Tone/core/TimelineState.js","../Tone/Tone/core/Emitter.js","../Tone/Tone/shim/AnalyserNode.js","../Tone/Tone/component/Analyser.js","../Tone/Tone/source/OmniOscillator.js","../Tone/Tone/instrument/Synth.js","../Tone/Tone/source/Noise.js","../Tone/Tone/core/Master.js","../Tone/Tone/component/FrequencyEnvelope.js","../Tone/Tone/signal/ScaleExp.js","../Tone/Tone/component/Compressor.js","../Tone/Tone/shim/AudioContext.js","../Tone/Tone/type/TransportTime.js","../Tone/Tone/type/Frequency.js","../Tone/Tone/component/Envelope.js","../Tone/Tone/shim/StereoPannerNode.js","../Tone/Tone/component/Panner.js","../Tone/Tone/source/FMOscillator.js","../Tone/Tone/source/PulseOscillator.js","../Tone/Tone/event/Event.js","../Tone/Tone/component/MidSideMerge.js","../Tone/Tone/component/MidSideSplit.js","../Tone/Tone/component/LowpassCombFilter.js","../Tone/Tone/type/Ticks.js","../Tone/Tone/core/TransportEvent.js","../Tone/Tone/source/TickSource.js","../Tone/Tone/component/Follower.js","../Tone/Tone/component/FeedbackCombFilter.js","../Tone/Tone/component/MultibandSplit.js","../Tone/Tone/signal/Pow.js","../Tone/Tone/type/TimeBase.js","../Tone/Tone/type/Time.js","../Tone/Tone/shim/OscillatorNode.js","../Tone/Tone/source/OscillatorNode.js","../Tone/Tone/source/Player.js","../Tone/Tone/instrument/MonoSynth.js","../Tone/Tone/source/FatOscillator.js","../Tone/Tone/source/AMOscillator.js","../Tone/Tone/source/PWMOscillator.js","../Tone/Tone/event/Part.js","../Tone/Tone/event/Loop.js","../Tone/Tone/effect/StereoXFeedbackEffect.js","../Tone/Tone/effect/MidSideEffect.js","../Tone/Tone/effect/Convolver.js","../Tone/Tone/signal/Modulo.js","../Tone/Tone/core/OfflineContext.js","../Tone/Tone/core/Offline.js","../Tone/Tone/core/Buffers.js","../Tone/Tone/control/CtrlPattern.js","../Tone/Tone/core/TransportRepeatEvent.js","../Tone/Tone/core/IntervalTimeline.js","../Tone/Tone/signal/TickSignal.js","../Tone/Tone/core/Clock.js","../Tone/Tone/signal/GreaterThanZero.js","../Tone/Tone/signal/GreaterThan.js","../Tone/Tone/component/ScaledEnvelope.js","../Tone/Tone/signal/Abs.js","../Tone/Tone/component/Solo.js","../Tone/Tone/signal/EqualPowerGain.js","../Tone/Tone/signal/Negate.js","../Tone/Tone/component/PanVol.js","../Tone/Tone/shim/OfflineAudioContext.js","../Tone/Tone/version.js","../Tone/Tone/type/Midi.js","../Tone/Tone/source/UserMedia.js","../Tone/Tone/source/Players.js","../Tone/Tone/source/GrainPlayer.js","../Tone/Tone/signal/TransportTimelineSignal.js","../Tone/Tone/signal/Normalize.js","../Tone/Tone/signal/GainToAudio.js","../Tone/Tone/instrument/Sampler.js","../Tone/Tone/instrument/PolySynth.js","../Tone/Tone/instrument/PluckSynth.js","../Tone/Tone/instrument/NoiseSynth.js","../Tone/Tone/instrument/MetalSynth.js","../Tone/Tone/instrument/MembraneSynth.js","../Tone/Tone/instrument/FMSynth.js","../Tone/Tone/instrument/DuoSynth.js","../Tone/Tone/instrument/AMSynth.js","../Tone/Tone/event/Sequence.js","../Tone/Tone/event/Pattern.js","../Tone/Tone/effect/Vibrato.js","../Tone/Tone/effect/Tremolo.js","../Tone/Tone/effect/StereoWidener.js","../Tone/Tone/effect/StereoFeedbackEffect.js","../Tone/Tone/effect/Reverb.js","../Tone/Tone/effect/PitchShift.js","../Tone/Tone/effect/PingPongDelay.js","../Tone/Tone/effect/Phaser.js","../Tone/Tone/effect/JCReverb.js","../Tone/Tone/effect/Freeverb.js","../Tone/Tone/effect/FeedbackDelay.js","../Tone/Tone/effect/Distortion.js","../Tone/Tone/effect/Chorus.js","../Tone/Tone/effect/Chebyshev.js","../Tone/Tone/effect/BitCrusher.js","../Tone/Tone/effect/AutoWah.js","../Tone/Tone/effect/AutoPanner.js","../Tone/Tone/effect/AutoFilter.js","../Tone/Tone/core/Listener.js","../Tone/Tone/core/Draw.js","../Tone/Tone/core/Bus.js","../Tone/Tone/control/CtrlRandom.js","../Tone/Tone/control/CtrlMarkov.js","../Tone/Tone/control/CtrlInterpolate.js","../Tone/Tone/component/Waveform.js","../Tone/Tone/component/Panner3D.js","../Tone/Tone/component/MultibandCompressor.js","../Tone/Tone/component/Mono.js","../Tone/Tone/component/MidSideCompressor.js","../Tone/Tone/component/Meter.js","../Tone/Tone/component/Limiter.js","../Tone/Tone/component/Gate.js","../Tone/Tone/component/FFT.js","../Tone/Tone/component/EQ3.js","../Tone/Tone/component/Channel.js","../Tone/(webpack)/buildin/global.js","../Tone/Tone/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/startaudiocontext/StartAudioContext.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/react-redux/es/utils/batch.js","../node_modules/react-redux/es/components/Context.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/hooks/useDispatch.js","../node_modules/immer/src/utils/errors.ts","../node_modules/immer/src/utils/common.ts","../node_modules/immer/src/utils/plugins.ts","../node_modules/immer/src/core/scope.ts","../node_modules/immer/src/core/finalize.ts","../node_modules/immer/src/core/proxy.ts","../node_modules/immer/src/core/immerClass.ts","../node_modules/immer/src/core/current.ts","../node_modules/immer/src/plugins/es5.ts","../node_modules/react-redux/es/hooks/useSelector.js","../node_modules/react-redux/es/index.js","../node_modules/react-redux/es/components/connect.js","../node_modules/immer/src/immer.ts","../node_modules/immer/src/utils/env.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/redux/es/redux.js","../node_modules/redux-thunk/es/index.js","../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts","../node_modules/@reduxjs/toolkit/src/isPlainObject.ts","../node_modules/@reduxjs/toolkit/src/utils.ts","../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts","../node_modules/@reduxjs/toolkit/src/createAction.ts","../node_modules/@reduxjs/toolkit/src/mapBuilders.ts","../node_modules/@reduxjs/toolkit/src/nanoid.ts","../node_modules/@reduxjs/toolkit/src/createAsyncThunk.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts","../node_modules/@reduxjs/toolkit/src/listenerMiddleware/utils.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","features/counter/counterAPI.js","../node_modules/@reduxjs/toolkit/src/index.ts","features/counter/counterSlice.js","../node_modules/@reduxjs/toolkit/src/createSlice.ts","../node_modules/@reduxjs/toolkit/src/createReducer.ts","app/store.js","../node_modules/@reduxjs/toolkit/src/configureStore.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://breeze_front/./src/features/counter/Counter.module.css?643e","../node_modules/reactronica/src/components/Song.tsx","../node_modules/reactronica/src/lib/buildSequencerStep.ts","../node_modules/reactronica/src/lib/hooks/index.ts","../node_modules/reactronica/src/components/Track.tsx","../node_modules/reactronica/src/components/Instrument.tsx","../node_modules/reactronica/src/components/Effect.tsx","../node_modules/tone/Tone/version.ts","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/standardized-audio-context/src/globals.ts","../node_modules/standardized-audio-context/src/helpers/is-constructible.ts","../node_modules/standardized-audio-context/src/helpers/split-import-statements.ts","../node_modules/standardized-audio-context/src/factories/add-audio-worklet-module.ts","../node_modules/standardized-audio-context/src/helpers/get-value-for-key.ts","../node_modules/standardized-audio-context/src/helpers/pick-element-from-set.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-active.ts","../node_modules/standardized-audio-context/src/guards/audio-worklet-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive-when-necessary.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/standardized-audio-context/src/factories/analyser-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/is-owned-by-context.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.ts","../node_modules/standardized-audio-context/src/factories/index-size-error.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-get-channel-data-method.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/constants.ts","../node_modules/standardized-audio-context/src/helpers/is-active-audio-node.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-constructor.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/standardized-audio-context/src/guards/audio-buffer-source-node.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-node-connections.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-param-connections.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-active-audio-node-input-connections.ts","../node_modules/standardized-audio-context/src/guards/biquad-filter-node.ts","../node_modules/standardized-audio-context/src/guards/constant-source-node.ts","../node_modules/standardized-audio-context/src/guards/gain-node.ts","../node_modules/standardized-audio-context/src/guards/oscillator-node.ts","../node_modules/standardized-audio-context/src/guards/stereo-panner-node.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-audio-graph.ts","../node_modules/standardized-audio-context/src/helpers/is-valid-latency-hint.ts","../node_modules/standardized-audio-context/src/guards/audio-node.ts","../node_modules/standardized-audio-context/src/guards/audio-node-output-connection.ts","../node_modules/standardized-audio-context/src/helpers/insert-element-in-set.ts","../node_modules/standardized-audio-context/src/helpers/add-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/add-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node-faker.ts","../node_modules/standardized-audio-context/src/helpers/connect-native-audio-node-to-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection.ts","../node_modules/standardized-audio-context/src/helpers/delete-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/disconnect-native-audio-node-from-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/is-part-of-a-cycle.ts","../node_modules/standardized-audio-context/src/helpers/is-passive-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-node-disconnect-method-support.ts","../node_modules/standardized-audio-context/src/helpers/visit-each-audio-node-once.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-node-disconnect-method.ts","../node_modules/standardized-audio-context/src/factories/audio-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/read-only-map.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/copy-from-channel.ts","../node_modules/standardized-audio-context/src/helpers/copy-to-channel.ts","../node_modules/standardized-audio-context/src/helpers/create-nested-arrays.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/detach-array-buffer.ts","../node_modules/standardized-audio-context/src/factories/delay-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/disconnect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/gain-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/invalid-state-error.ts","../node_modules/standardized-audio-context/src/factories/invalid-access-error.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/filter-buffer.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/test-promise-support.ts","../node_modules/standardized-audio-context/src/factories/minimal-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-option.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-analyser-node-get-float-time-domain-data-method-support.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-audio-param-value.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/compute-buffer-size.ts","../node_modules/standardized-audio-context/src/helpers/clone-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor-promise.ts","../node_modules/standardized-audio-context/src/factories/native-biquad-filter-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-splitter-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-channel-splitter-node.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/standardized-audio-context/src/helpers/intercept-connections.ts","../node_modules/standardized-audio-context/src/factories/native-delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-gain-node.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/cache-test-result.ts","../node_modules/standardized-audio-context/src/factories/get-native-context.ts","../node_modules/standardized-audio-context/src/factories/add-audio-node-connections.ts","../node_modules/standardized-audio-context/src/factories/convert-number-to-unsigned-long.ts","../node_modules/standardized-audio-context/src/factories/add-audio-param-connections.ts","../node_modules/standardized-audio-context/src/factories/native-script-processor-node.ts","../node_modules/standardized-audio-context/src/factories/not-supported-error.ts","../node_modules/standardized-audio-context/src/factories/offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/periodic-wave-constructor.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/unknown-error.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/get-first-sample.ts","../node_modules/standardized-audio-context/src/helpers/is-dc-curve.ts","../node_modules/standardized-audio-context/src/helpers/overwrite-accessors.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/wrap-event-listener.ts","../node_modules/standardized-audio-context/src/module.ts","../node_modules/standardized-audio-context/src/factories/add-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/add-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/delete-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/window.ts","../node_modules/standardized-audio-context/src/factories/native-analyser-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-analyser-node-get-float-time-domain-data-method.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-renderer.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-node.ts","../node_modules/standardized-audio-context/src/factories/analyser-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/event-target-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/add-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/increment-cycle-counter-factory.ts","../node_modules/standardized-audio-context/src/factories/decrement-cycle-counter.ts","../node_modules/standardized-audio-context/src/factories/detect-cycles.ts","../node_modules/standardized-audio-context/src/guards/delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.ts","../node_modules/standardized-audio-context/src/factories/test-audio-buffer-constructor-support.ts","../node_modules/standardized-audio-context/src/factories/add-silent-connection.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-param.ts","../node_modules/standardized-audio-context/src/factories/connect-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.ts","../node_modules/standardized-audio-context/src/factories/render-automation.ts","../node_modules/standardized-audio-context/src/factories/get-audio-param-renderer.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-renderer.ts","../node_modules/standardized-audio-context/src/helpers/set-value-at-time-until-possible.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/set-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/monitor-connections.ts","../node_modules/standardized-audio-context/src/factories/wrap-channel-merger-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-merger-node-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-channel-splitter-options.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-convolver-node-factory.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/delay-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-dynamics-compressor-node-factory.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/gain-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/render-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/test-offline-audio-context-current-time-support.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-iir-filter-node-get-frequency-response-method.ts","../node_modules/standardized-audio-context/src/factories/audio-listener-factory.ts","../node_modules/standardized-audio-context/src/factories/minimal-base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-oscillator-node-factory.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/connected-native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-periodic-wave-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-periodic-wave-options.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/is-secure-context.ts","../node_modules/standardized-audio-context/src/factories/expose-current-frame-and-current-time.ts","../node_modules/standardized-audio-context/src/factories/get-or-create-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/evaluate-source.ts","../node_modules/standardized-audio-context/src/factories/fetch-source.ts","../node_modules/standardized-audio-context/src/factories/abort-error.ts","../node_modules/standardized-audio-context/src/factories/test-audio-worklet-processor-post-message-support.ts","../node_modules/standardized-audio-context/src/factories/is-native-context.ts","../node_modules/standardized-audio-context/src/factories/decode-audio-data.ts","../node_modules/standardized-audio-context/src/factories/data-clone-error.ts","../node_modules/standardized-audio-context/src/factories/encoding-error.ts","../node_modules/standardized-audio-context/src/factories/base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/media-element-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-element-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-track-audio-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-track-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/get-unrendered-audio-worklet-nodes.ts","../node_modules/standardized-audio-context/src/factories/add-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/connect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/delete-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/get-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-faker-factory.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/test-clonability-of-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/factories/get-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/set-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-worklet-node-options-clonability.ts","../node_modules/standardized-audio-context/src/factories/minimal-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/create-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/start-rendering.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-param.ts","../node_modules/standardized-audio-context/src/factories/is-any-offline-audio-context.ts","../node_modules/tone/Tone/core/util/Debug.ts","../node_modules/tone/Tone/core/util/TypeCheck.ts","../node_modules/tone/Tone/core/context/AudioContext.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/tslib/tslib.es6.js","../node_modules/tone/Tone/core/clock/Ticker.ts","../node_modules/tone/Tone/core/util/AdvancedTypeCheck.ts","../node_modules/tone/Tone/core/util/Defaults.ts","../node_modules/tone/Tone/core/Tone.ts","../node_modules/tone/Tone/core/util/Math.ts","../node_modules/tone/Tone/core/util/Timeline.ts","../node_modules/tone/Tone/core/context/ContextInitialization.ts","../node_modules/tone/Tone/core/util/Emitter.ts","../node_modules/tone/Tone/core/context/BaseContext.ts","../node_modules/tone/Tone/core/context/Context.ts","../node_modules/tone/Tone/core/context/DummyContext.ts","../node_modules/tone/Tone/core/util/Interface.ts","../node_modules/tone/Tone/core/context/ToneAudioBuffer.ts","../node_modules/tone/Tone/core/context/OfflineContext.ts","../node_modules/tone/Tone/core/Global.ts","../node_modules/tone/Tone/core/type/Conversions.ts","../node_modules/tone/Tone/core/type/TimeBase.ts","../node_modules/tone/Tone/core/type/Time.ts","../node_modules/tone/Tone/core/type/Frequency.ts","../node_modules/tone/Tone/core/type/TransportTime.ts","../node_modules/tone/Tone/core/context/ToneWithContext.ts","../node_modules/tone/Tone/core/util/StateTimeline.ts","../node_modules/tone/Tone/core/context/Param.ts","../node_modules/tone/Tone/core/context/ToneAudioNode.ts","../node_modules/tone/Tone/core/context/Gain.ts","../node_modules/tone/Tone/source/OneShotSource.ts","../node_modules/tone/Tone/signal/ToneConstantSource.ts","../node_modules/tone/Tone/signal/Signal.ts","../node_modules/tone/Tone/core/clock/TickParam.ts","../node_modules/tone/Tone/core/clock/TickSignal.ts","../node_modules/tone/Tone/core/clock/TickSource.ts","../node_modules/tone/Tone/core/clock/Clock.ts","../node_modules/tone/Tone/core/context/Delay.ts","../node_modules/tone/Tone/core/context/ToneAudioBuffers.ts","../node_modules/tone/Tone/core/type/Ticks.ts","../node_modules/tone/Tone/core/util/Draw.ts","../node_modules/tone/Tone/core/util/IntervalTimeline.ts","../node_modules/tone/Tone/component/channel/Volume.ts","../node_modules/tone/Tone/core/context/Destination.ts","../node_modules/tone/Tone/core/util/TimelineValue.ts","../node_modules/tone/Tone/core/clock/TransportEvent.ts","../node_modules/tone/Tone/core/clock/TransportRepeatEvent.ts","../node_modules/tone/Tone/core/clock/Transport.ts","../node_modules/tone/Tone/source/Source.ts","../node_modules/tone/Tone/source/buffer/ToneBufferSource.ts","../node_modules/tone/Tone/source/oscillator/OscillatorInterface.ts","../node_modules/tone/Tone/source/oscillator/ToneOscillatorNode.ts","../node_modules/tone/Tone/source/oscillator/Oscillator.ts","../node_modules/tone/Tone/signal/SignalOperator.ts","../node_modules/tone/Tone/signal/WaveShaper.ts","../node_modules/tone/Tone/signal/AudioToGain.ts","../node_modules/tone/Tone/signal/Multiply.ts","../node_modules/tone/Tone/source/oscillator/AMOscillator.ts","../node_modules/tone/Tone/source/oscillator/FMOscillator.ts","../node_modules/tone/Tone/source/oscillator/PulseOscillator.ts","../node_modules/tone/Tone/source/oscillator/FatOscillator.ts","../node_modules/tone/Tone/source/oscillator/PWMOscillator.ts","../node_modules/tone/Tone/source/oscillator/OmniOscillator.ts","../node_modules/tone/Tone/core/util/Decorator.ts","../node_modules/tone/Tone/source/buffer/Player.ts","../node_modules/tone/Tone/source/buffer/Players.ts","../node_modules/tone/Tone/signal/GainToAudio.ts","../node_modules/tone/Tone/component/envelope/Envelope.ts","../node_modules/tone/Tone/instrument/Instrument.ts","../node_modules/tone/Tone/instrument/Monophonic.ts","../node_modules/tone/Tone/component/envelope/AmplitudeEnvelope.ts","../node_modules/tone/Tone/instrument/Synth.ts","../node_modules/tone/Tone/instrument/MembraneSynth.ts","../node_modules/tone/Tone/instrument/NoiseSynth.ts","../node_modules/tone/Tone/core/worklet/WorkletGlobalScope.ts","../node_modules/tone/Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","../node_modules/tone/Tone/core/worklet/SingleIOProcessor.worklet.ts","../node_modules/tone/Tone/core/worklet/DelayLine.worklet.ts","../node_modules/tone/Tone/component/filter/FeedbackCombFilter.worklet.ts","../node_modules/tone/Tone/component/filter/FeedbackCombFilter.ts","../node_modules/tone/Tone/instrument/Sampler.ts","../node_modules/tone/Tone/event/Pattern.ts","../node_modules/tone/Tone/component/channel/CrossFade.ts","../node_modules/tone/Tone/effect/Effect.ts","../node_modules/tone/Tone/component/channel/Panner.ts","../node_modules/tone/Tone/effect/BitCrusher.worklet.ts","../node_modules/tone/Tone/effect/BitCrusher.ts","../node_modules/tone/Tone/effect/FeedbackEffect.ts","../node_modules/tone/Tone/effect/FeedbackDelay.ts","../node_modules/tone/Tone/component/channel/Solo.ts","../node_modules/tone/Tone/component/channel/PanVol.ts","../node_modules/tone/Tone/component/channel/Channel.ts","../node_modules/tone/Tone/component/channel/Mono.ts","../node_modules/tone/Tone/core/context/Listener.ts","../node_modules/tone/Tone/index.ts","components/Test2.js","components/SynthPad.js","components/Synth.js","components/MonoSynthStep.js","components/MonoSynth.js","components/MonoSynth2.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default[\"default\"](AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tone\"] = factory();\n\telse\n\t\troot[\"Tone\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 148);\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport version from \"../version\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTONE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = function(){\n\tif (!(this instanceof Tone)){\n\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t}\n};\n\n/**\n *  @memberOf Tone#\n *  @returns {String} returns the name of the class as a string\n */\nTone.prototype.toString = function(){\n\tfor (var className in Tone){\n\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\treturn className;\n\t\t}\n\t}\n\treturn \"Tone\";\n};\n\n/**\n *  @memberOf Tone#\n *  disconnect and dispose\n *  @returns {Tone} this\n */\nTone.prototype.dispose = function(){\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tGET/SET\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Set the parameters at once. Either pass in an\n *  object mapping parameters to values, or to set a\n *  single parameter, by passing in a string and value.\n *  The last argument is an optional ramp time which\n *  will ramp any signal values to their destination value\n *  over the duration of the rampTime.\n *  @param {Object|String} params\n *  @param {Number=} value\n *  @returns {Tone} this\n *  @memberOf Tone#\n *  @example\n * //set values using an object\n * filter.set({\n * \t\"frequency\" : 300,\n * \t\"type\" : highpass\n * });\n *  @example\n * filter.set(\"type\", \"highpass\");\n *  @example\n * //ramp to the value 220 over 3 seconds.\n * oscillator.set({\n * \t\"frequency\" : 220\n * }, 3);\n */\nTone.prototype.set = function(params, value){\n\tif (Tone.isString(params)){\n\t\tvar tmpObj = {};\n\t\ttmpObj[params] = value;\n\t\tparams = tmpObj;\n\t}\n\n\tparamLoop:\n\tfor (var attr in params){\n\t\tvalue = params[attr];\n\t\tvar parent = this;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isUndef(param)){\n\t\t\tcontinue;\n\t\t}\n\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (param instanceof AudioParam){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\tparent[attr] = value;\n\t\t} else if (param instanceof Tone){\n\t\t\tparam.set(value);\n\t\t} else if (param !== value){\n\t\t\tparent[attr] = value;\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @memberOf Tone#\n *  @example\n * osc.get();\n * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n *  @example\n * osc.get(\"type\");\n * //returns { \"type\" : \"sine\"}\n * @example\n * //use dot notation to access deep properties\n * synth.get([\"envelope.attack\", \"envelope.release\"]);\n * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.prototype.get = function(params){\n\tif (Tone.isUndef(params)){\n\t\tparams = this._collectDefaults(this.constructor);\n\t} else if (Tone.isString(params)){\n\t\tparams = [params];\n\t}\n\tvar ret = {};\n\tfor (var i = 0; i < params.length; i++){\n\t\tvar attr = params[i];\n\t\tvar parent = this;\n\t\tvar subRet = ret;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\tparent = parent[subAttr];\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isObject(params[attr])){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof AudioParam){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof Tone){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\tsubRet[attr] = param;\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n *  collect all of the default attributes in one\n *  @private\n *  @param {Function} constr the constructor to find the defaults from\n *  @return {Array} all of the attributes which belong to the class\n */\nTone.prototype._collectDefaults = function(constr){\n\tvar ret = [];\n\tif (Tone.isDefined(constr.defaults)){\n\t\tret = Object.keys(constr.defaults);\n\t}\n\tif (Tone.isDefined(constr._super)){\n\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t//filter out repeats\n\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\tret.push(superDefs[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEFAULTS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @memberOf Tone\n *  @param  {Array}  values  The arguments array\n *  @param  {Array}  keys    The names of the arguments\n *  @param {Function|Object} constr The class constructor\n *  @return  {Object}  An object composed of the  defaults between the class' defaults\n *                        and the passed in arguments.\n */\nTone.defaults = function(values, keys, constr){\n\tvar options = {};\n\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\toptions = values[0];\n\t} else {\n\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\toptions[keys[i]] = values[i];\n\t\t}\n\t}\n\tif (Tone.isDefined(constr.defaults)){\n\t\treturn Tone.defaultArg(options, constr.defaults);\n\t} else if (Tone.isObject(constr)){\n\t\treturn Tone.defaultArg(options, constr);\n\t} else {\n\t\treturn options;\n\t}\n};\n\n/**\n *  If the `given` parameter is undefined, use the `fallback`.\n *  If both `given` and `fallback` are object literals, it will\n *  return a deep copy which includes all of the parameters from both\n *  objects. If a parameter is undefined in given, it will return\n *  the fallback property.\n *  <br><br>\n *  WARNING: if object is self referential, it will go into an an\n *  infinite recursive loop.\n *  @memberOf Tone\n *  @param  {*} given\n *  @param  {*} fallback\n *  @return {*}\n */\nTone.defaultArg = function(given, fallback){\n\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\tvar ret = {};\n\t\t//make a deep copy of the given object\n\t\tfor (var givenProp in given){\n\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t}\n\t\tfor (var fallbackProp in fallback){\n\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t}\n\t\treturn ret;\n\t} else {\n\t\treturn Tone.isUndef(given) ? fallback : given;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEBUGGING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Print the outputs to the console log for debugging purposes. \n *  Prints the contents only if either the object has a property\n *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n *  is set to the name of the class. \n *  @example\n * //prints all logs originating from Tone.OscillatorNode\n * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n *  @param {*} args Any arguments to print to the console.\n *  @private\n */\nTone.prototype.log = function(){\n\t//if the object is either set to debug = true\n\t//or if there is a string on the Tone.global.with the class name\n\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\tvar args = Array.from(arguments);\n\t\targs.unshift(this.toString()+\":\");\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log.apply(undefined, args);\n\t}\n};\n\n/**\n *  Assert that the statement is true, otherwise invoke the error. \n *  @param {Boolean} statement\n *  @param {String} error The message which is passed into an Error\n *  @private\n */\nTone.prototype.assert = function(statement, error){\n\tif (!statement){\n\t\tthrow new Error(error);\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONNECTIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  connect together all of the arguments in series\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone}\n *  @memberOf Tone\n *  @static\n */\nTone.connectSeries = function(){\n\tvar currentUnit = arguments[0];\n\tfor (var i = 1; i < arguments.length; i++){\n\t\tvar toUnit = arguments[i];\n\t\tTone.connect(currentUnit, toUnit);\n\t\tcurrentUnit = toUnit;\n\t}\n\treturn Tone;\n};\n\n/**\n * Connect two nodes together so that signal flows from the \n * first node to the second. The second node can be an AudioParam. \n * Optionally specific the input and output channels. \n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {number} [outputNumber=0] The output channel of the srcNode\n * @param {number} [inputNumber=0] The input channel of the dstNode\n */\nTone.connect = function(srcNode, dstNode, outputNumber, inputNumber){\n\t\n\t//resolve the input of the dstNode\n\twhile (Tone.isDefined(dstNode.input)){\n\t\tif (Tone.isArray(dstNode.input)){\n\t\t\tinputNumber = Tone.defaultArg(inputNumber, 0);\n\t\t\tdstNode = dstNode.input[inputNumber];\n\t\t\tinputNumber = 0;\n\t\t} else if (dstNode.input){\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t//make the connection\n\tif (dstNode instanceof AudioParam){\n\t\tsrcNode.connect(dstNode, outputNumber);\n\t} else if (dstNode instanceof AudioNode){\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n\n\treturn Tone;\n};\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {?(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {?number} [outputNumber=0] The output channel of the srcNode\n * @param {?number} [inputNumber=0] The input channel of the dstNode\n */\nTone.disconnect = function(srcNode, dstNode, outputNumber, inputNumber){\n\tif (dstNode){\n\t\t//resolve the input of the dstNode\n\t\tvar bDone = false;\n\t\twhile (!bDone){\n\t\t\tif (Tone.isArray(dstNode.input)){\n\t\t\t\tif (Tone.isDefined(inputNumber)){\n\t\t\t\t\tTone.disconnect(srcNode, dstNode.input[inputNumber], outputNumber);\n\t\t\t\t} else {\n\t\t\t\t\tdstNode.input.forEach(function(dstNode){\n\t\t\t\t\t\t//ignore errors from connections that aren't there\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tTone.disconnect(srcNode, dstNode, outputNumber);\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbDone = true;\n\t\t\t} else if (dstNode.input){\n\t\t\t\tdstNode = dstNode.input;\n\t\t\t} else {\n\t\t\t\tbDone = true;\n\t\t\t}\n\t\t}\n\t\n\t\t//make the connection\n\t\tif (dstNode instanceof AudioParam){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t\t} else if (dstNode instanceof AudioNode){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t\t}\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n\n\treturn Tone;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// TYPE CHECKING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Test if the arg is undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isUndef = function(val){\n\treturn typeof val === \"undefined\";\n};\n\n/**\n *  Test if the arg is not undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isDefined = function(val){\n\treturn !Tone.isUndef(val);\n};\n\n/**\n *  Test if the arg is a function\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a function\n *  @static\n *  @memberOf Tone\n */\nTone.isFunction = function(val){\n\treturn typeof val === \"function\";\n};\n\n/**\n *  Test if the argument is a number.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a number\n *  @static\n *  @memberOf Tone\n */\nTone.isNumber = function(arg){\n\treturn (typeof arg === \"number\");\n};\n\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an object literal.\n *  @static\n *  @memberOf Tone\n */\nTone.isObject = function(arg){\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n};\n\n/**\n *  Test if the argument is a boolean.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a boolean\n *  @static\n *  @memberOf Tone\n */\nTone.isBoolean = function(arg){\n\treturn (typeof arg === \"boolean\");\n};\n\n/**\n *  Test if the argument is an Array\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an array\n *  @static\n *  @memberOf Tone\n */\nTone.isArray = function(arg){\n\treturn (Array.isArray(arg));\n};\n\n/**\n *  Test if the argument is a string.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isString = function(arg){\n\treturn (typeof arg === \"string\");\n};\n\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isNote = function(arg){\n\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n};\n\n/**\n *  An empty function.\n *  @static\n */\nTone.noOp = function(){};\n\n/**\n *  Make the property not writable. Internal use only.\n *  @private\n *  @param  {String}  property  the property to make not writable\n */\nTone.prototype._readOnly = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._readOnly(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : false,\n\t\t\t\"enumerable\" : true,\n\t\t});\n\t}\n};\n\n/**\n *  Make an attribute writeable. Interal use only.\n *  @private\n *  @param  {String}  property  the property to make writable\n */\nTone.prototype._writable = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._writable(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : true,\n\t\t});\n\t}\n};\n\n/**\n * Possible play states.\n * @enum {String}\n */\nTone.State = {\n\t\"Started\" : \"started\",\n\t\"Stopped\" : \"stopped\",\n\t\"Paused\" : \"paused\",\n};\n\n/**\n * A reference to the global context, `global` or `Tone.global.\n */\nTone.global = Tone.isUndef(global) ? window : global;\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  {NormalRange} percent (0-1)\n *  @return {Number}         output gain (0-1)\n *  @static\n *  @memberOf Tone\n */\nTone.equalPowerScale = function(percent){\n\tvar piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n};\n\n/**\n *  Convert decibels into gain.\n *  @param  {Decibels} db\n *  @return {Number}\n *  @static\n *  @memberOf Tone\n */\nTone.dbToGain = function(db){\n\treturn Math.pow(10, db / 20);\n};\n\n/**\n *  Convert gain to decibels.\n *  @param  {Number} gain (0-1)\n *  @return {Decibels}\n *  @static\n *  @memberOf Tone\n */\nTone.gainToDb = function(gain){\n\treturn 20 * (Math.log(gain) / Math.LN10);\n};\n\n/**\n *  Convert an interval (in semitones) to a frequency ratio.\n *  @param  {Interval} interval the number of semitones above the base note\n *  @return {Number}          the frequency ratio\n *  @static\n *  @memberOf Tone\n *  @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nTone.intervalToFrequencyRatio = function(interval){\n\treturn Math.pow(2, (interval/12));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tTIMING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @static\n *  @memberOf Tone\n */\nTone.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone\n */\nTone.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINHERITANCE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  have a child inherit all of Tone's (or a parent's) prototype\n *  to inherit the parent's properties, make sure to call\n *  Parent.call(this) in the child's constructor\n *\n *  based on closure library's inherit function\n *\n *  @memberOf Tone\n *  @static\n *  @param  {Function} \tchild\n *  @param  {Function=} parent (optional) parent to inherit from\n *                             if no parent is supplied, the child\n *                             will inherit from Tone\n */\nTone.extend = function(child, parent){\n\tif (Tone.isUndef(parent)){\n\t\tparent = Tone;\n\t}\n\tfunction TempConstructor(){}\n\tTempConstructor.prototype = parent.prototype;\n\tchild.prototype = new TempConstructor();\n\t/** @override */\n\tchild.prototype.constructor = child;\n\tchild._super = parent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONTEXT\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * The shared AudioContext\n * @type {Tone.Context}\n * @private\n */\nTone._audioContext = null;\n\n/**\n * \tMost browsers will not play _any_ audio until a user \n * \tclicks something (like a play button). Invoke this method\n * \ton a click or keypress event handler to start the audio context. \n * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n *  @memberOf Tone\n *  @static\n *  @return {Promise} This promise is resolved when the audio context is started. \n *  @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nTone.start = function(){\n\treturn Tone.context.resume();\n};\n\n/**\n *  A static pointer to the audio context accessible as Tone.context.\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone\n */\nObject.defineProperty(Tone, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone._audioContext;\n\t},\n\t\"set\" : function(context){\n\t\tif (context.isContext){\n\t\t\tTone._audioContext = context;\n\t\t} else {\n\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t}\n\t\t//initialize the new audio context\n\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t}\n});\n\n/**\n *  The AudioContext\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone#\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone.context;\n\t}\n});\n\n/**\n *  Tone automatically creates a context on init, but if you are working\n *  with other libraries which also create an AudioContext, it can be\n *  useful to set your own. If you are going to set your own context,\n *  be sure to do it at the start of your code, before creating any objects.\n *  @static\n *  @param {AudioContext} ctx The new audio context to set\n */\nTone.setContext = function(ctx){\n\tTone.context = ctx;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tATTRIBUTES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  The number of seconds of 1 processing block (128 samples)\n *  @type {Number}\n *  @name blockTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\"get\" : function(){\n\t\treturn 128 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  The duration in seconds of one sample.\n *  @type {Number}\n *  @name sampleTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\"get\" : function(){\n\t\treturn 1 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n *  @type {Boolean}\n *  @name supported\n *  @memberOf Tone\n *  @readOnly\n *  @static\n */\nObject.defineProperty(Tone, \"supported\", {\n\t\"get\" : function(){\n\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\treturn hasAudioContext && hasPromises;\n\t}\n});\n\n/**\n *  Boolean value if the audio context has been initialized.\n *  @type {Boolean}\n *  @memberOf Tone\n *  @static\n *  @name initialized\n *  @readOnly\n */\nObject.defineProperty(Tone, \"initialized\", {\n\t\"get\" : function(){\n\t\treturn Boolean(Tone.context);\n\t}\n});\n\n/**\n *  Get the context when it becomes available\n *  @param  {Function}  resolve  Callback when the context is initialized\n *  @return  {Tone}\n */\nTone.getContext = function(resolve){\n\tif (Tone.initialized){\n\t\tresolve(Tone.context);\n\t} else {\n\t\tvar resCallback = function(){\n\t\t\tresolve(Tone.context);\n\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t};\n\t\tTone.Context.on(\"init\", resCallback);\n\t}\n\treturn Tone;\n};\n\n/**\n * The version number\n * @type {String}\n * @static\n */\nTone.version = version;\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  Makes sure that connect returns the dst node\n *  @private\n */\nif (Tone.supported){\n\tvar testContext = new OfflineAudioContext(2, 1, 44100);\n\tvar testSrcNode = testContext.createGain();\n\tvar testDstNode = testContext.createGain();\n\tif (testSrcNode.connect(testDstNode) !== testDstNode){\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(){\n\t\t\tnativeConnect.apply(this, arguments);\n\t\t\treturn arguments[0];\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/AudioNode\";\n\n/**\n *  @class Tone.AudioNode is the base class for classes which process audio.\n *         AudioNodes have inputs and outputs.\n *  @param\t{AudioContext=} context\tThe audio context to use with the class\n *  @extends {Tone}\n */\nTone.AudioNode = function(){\n\tTone.call(this);\n\n\t//use the default context if one is not passed in\n\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\"context\" : Tone.context\n\t});\n\n\t/**\n\t * The AudioContext of this instance\n\t * @private\n\t * @type {AudioContext}\n\t */\n\tthis._context = options.context;\n};\n\nTone.extend(Tone.AudioNode);\n\n/**\n * Get the audio context belonging to this instance.\n * @type {Tone.Context}\n * @memberOf Tone.AudioNode#\n * @name context\n * @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\tget : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  Create input and outputs for this object.\n *  @param  {Number}  [input=0]   The number of inputs\n *  @param  {Number}  [outputs=0]  The number of outputs\n *  @return  {Tone.AudioNode}  this\n *  @private\n */\nTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\tif (inputs === 1){\n\t\tthis.input = this.context.createGain();\n\t} else if (inputs > 1){\n\t\tthis.input = new Array(inputs);\n\t}\n\n\tif (outputs === 1){\n\t\tthis.output = this.context.createGain();\n\t} else if (outputs > 1){\n\t\tthis.output = new Array(outputs);\n\t}\n};\n\n/**\n *  channelCount is the number of channels used when up-mixing and down-mixing\n *  connections to any inputs to the node. The default value is 2 except for\n *  specific nodes where its value is specially determined.\n *\n *  @memberof Tone.AudioNode#\n *  @type {Number}\n *  @name channelCount\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\tget : function(){\n\t\treturn this.output.channelCount;\n\t},\n\tset : function(c){\n\t\treturn this.output.channelCount = c;\n\t}\n});\n\n/**\n *  channelCountMode determines how channels will be counted when up-mixing and\n *  down-mixing connections to any inputs to the node.\n *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelCountMode\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\tget : function(){\n\t\treturn this.output.channelCountMode;\n\t},\n\tset : function(m){\n\t\treturn this.output.channelCountMode = m;\n\t}\n});\n\n/**\n *  channelInterpretation determines how individual channels will be treated\n *  when up-mixing and down-mixing connections to any inputs to the node.\n *  The default value is \"speakers\".\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelInterpretation\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\tget : function(){\n\t\treturn this.output.channelInterpretation;\n\t},\n\tset : function(i){\n\t\treturn this.output.channelInterpretation = i;\n\t}\n});\n\n/**\n *  The number of inputs feeding into the AudioNode.\n *  For source nodes, this will be 0.\n *  @type {Number}\n *  @name numberOfInputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\tget : function(){\n\t\tif (this.input){\n\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\treturn this.input.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The number of outputs coming out of the AudioNode.\n *  @type {Number}\n *  @name numberOfOutputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\tget : function(){\n\t\tif (this.output){\n\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\treturn this.output.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n *  @param  {Tone | AudioParam | AudioNode} unit\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t} else {\n\t\tTone.connect(this.output, unit, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  disconnect the output\n *  @param {Number|AudioNode} output Either the output index to disconnect\n *                                   if the output is an array, or the\n *                                   node to disconnect from.\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t} else {\n\t\tTone.disconnect(this.output, destination, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  Connect the output of this node to the rest of the nodes in series.\n *  @example\n *  //connect a node to an effect, panVol and then to the master output\n *  node.chain(effect, panVol, Tone.Master);\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.chain = function(){\n\tvar args = Array.from(arguments);\n\targs.unshift(this);\n\tTone.connectSeries.apply(undefined, args);\n\treturn this;\n};\n\n/**\n *  connect the output of this node to the rest of the nodes in parallel.\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.fan = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\tthis.connect(arguments[i]);\n\t}\n\treturn this;\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.dispose = function(){\n\tif (Tone.isDefined(this.input)){\n\t\tif (this.input instanceof AudioNode){\n\t\t\tthis.input.disconnect();\n\t\t}\n\t\tthis.input = null;\n\t}\n\tif (Tone.isDefined(this.output)){\n\t\tif (this.output instanceof AudioNode){\n\t\t\tthis.output.disconnect();\n\t\t}\n\t\tthis.output = null;\n\t}\n\tthis._context = null;\n\treturn this;\n};\n\nexport default Tone.AudioNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\nimport \"../core/Context\";\nimport \"../core/Gain\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\tvar ConstantSourceNode = function(context){\n\t\tthis.context = context;\n\n\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = 1;\n\t\t}\n\n\t\tthis._bufferSource = context.createBufferSource();\n\t\tthis._bufferSource.channelCount = 1;\n\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\tthis._bufferSource.buffer = buffer;\n\t\tthis._bufferSource.loop = true;\n\n\t\tvar gainNode = this._output = context.createGain();\n\t\tthis.offset = gainNode.gain;\n\n\t\tthis._bufferSource.connect(gainNode);\n\t};\n\n\tConstantSourceNode.prototype.start = function(time){\n\t\tthis._bufferSource.start(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.stop = function(time){\n\t\tthis._bufferSource.stop(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.connect = function(){\n\t\tthis._output.connect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.disconnect = function(){\n\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tAudioContext.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n\n\tTone.Context.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Param\";\nimport \"../signal/SignalBase\";\nimport \"../shim/ConstantSourceNode\";\n\n/**\n *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n *          has all of the methods available to native Web Audio\n *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n *          as well as additional conveniences. Read more about working with signals\n *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n *  @constructor\n *  @extends {Tone.Param}\n *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n *                                     is passed in, that parameter will be wrapped\n *                                     and controlled by the Signal.\n *  @param {string} [units=Number] unit The units the signal is in.\n *  @example\n * var signal = new Tone.Signal(10);\n */\nTone.Signal = function(){\n\n\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\tTone.Param.call(this, options);\n\n\t/**\n\t * The constant source node which generates the signal\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis._constantSource = this.context.createConstantSource();\n\tthis._constantSource.start(0);\n\tthis._param = this._constantSource.offset;\n\tthis.value = options.value;\n\n\t/**\n\t * The node where the constant signal value is scaled.\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis.output = this._constantSource;\n\n\t/**\n\t * The node where the value is set.\n\t * @type {Tone.Param}\n\t * @private\n\t */\n\tthis.input = this._param = this.output.offset;\n};\n\nTone.extend(Tone.Signal, Tone.Param);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @static\n *  @const\n */\nTone.Signal.defaults = {\n\t\"value\" : 0,\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n};\n\n//use SignalBase's connect/disconnect methods\nTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\nTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n/**\n * Return the current signal value at the given time.\n * @param  {Time} time When to get the signal value\n * @return {Number}\n */\nTone.Signal.prototype.getValueAtTime = function(time){\n\tif (this._param.getValueAtTime){\n\t\treturn this._param.getValueAtTime(time);\n\t} else {\n\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t}\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Signal} this\n */\nTone.Signal.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._constantSource.stop();\n\tthis._constantSource.disconnect();\n\tthis._constantSource = null;\n\treturn this;\n};\n\nexport default Tone.Signal;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A thin wrapper around the Native Web Audio GainNode.\n *         The GainNode is a basic building block of the Web Audio\n *         API and is useful for routing audio and adjusting gains.\n *  @extends {Tone.AudioNode}\n *  @param  {Number=}  gain  The initial gain of the GainNode\n *  @param {Tone.Type=} units The units of the gain parameter.\n */\nTone.Gain = function(){\n\n\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The GainNode\n\t *  @type  {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t/**\n\t *  The gain parameter of the gain node.\n\t *  @type {Gain}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Param({\n\t\t\"param\" : this._gainNode.gain,\n\t\t\"units\" : options.units,\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : options.convert\n\t});\n\tthis._readOnly(\"gain\");\n};\n\nTone.extend(Tone.Gain, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Gain.defaults = {\n\t\"gain\" : 1,\n\t\"convert\" : true,\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Gain}  this\n */\nTone.Gain.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._gainNode.disconnect();\n\tthis._gainNode = null;\n\tthis._writable(\"gain\");\n\tthis.gain.dispose();\n\tthis.gain = null;\n};\n\nexport default Tone.Gain;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\nimport \"../type/Frequency\";\nimport \"../type/TransportTime\";\nimport \"../core/Context\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTYPES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Units which a value can take on.\n * @enum {String}\n */\nTone.Type = {\n\t/**\n\t *  Default units\n\t *  @typedef {Default}\n\t */\n\tDefault : \"number\",\n\t/**\n\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t *\n\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t *  \"the current time plus whatever expression follows\".\n\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t *  \"now\" (i.e. the currentTime).\n\t *\n\t *  @typedef {Time}\n\t */\n\tTime : \"time\",\n\t/**\n\t *  Frequency can be described similar to time, except ultimately the\n\t *  values are converted to frequency instead of seconds. A number\n\t *  is taken literally as the value in hertz. Additionally any of the\n\t *  Time encodings can be used. Note names in the form\n\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t *  frequency value.\n\t *  @typedef {Frequency}\n\t */\n\tFrequency : \"frequency\",\n\t/**\n\t *  TransportTime describes a position along the Transport's timeline. It is\n\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t *  @typedef {TransportTime}\n\t */\n\tTransportTime : \"transportTime\",\n\t/**\n\t *  Ticks are the basic subunit of the Transport. They are\n\t *  the smallest unit of time that the Transport supports.\n\t *  @typedef {Ticks}\n\t */\n\tTicks : \"ticks\",\n\t/**\n\t *  Normal values are within the range [0, 1].\n\t *  @typedef {NormalRange}\n\t */\n\tNormalRange : \"normalRange\",\n\t/**\n\t *  AudioRange values are between [-1, 1].\n\t *  @typedef {AudioRange}\n\t */\n\tAudioRange : \"audioRange\",\n\t/**\n\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t *  is twice is loud.\n\t *  @typedef {Decibels}\n\t */\n\tDecibels : \"db\",\n\t/**\n\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t *  @typedef {Interval}\n\t */\n\tInterval : \"interval\",\n\t/**\n\t *  Beats per minute.\n\t *  @typedef {BPM}\n\t */\n\tBPM : \"bpm\",\n\t/**\n\t *  The value must be greater than or equal to 0.\n\t *  @typedef {Positive}\n\t */\n\tPositive : \"positive\",\n\t/**\n\t *  Gain is the ratio between input and output of a signal.\n\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t *  1, causes no change to the incoming signal.\n\t *  @typedef {Gain}\n\t */\n\tGain : \"gain\",\n\t/**\n\t *  A cent is a hundredth of a semitone.\n\t *  @typedef {Cents}\n\t */\n\tCents : \"cents\",\n\t/**\n\t *  Angle between 0 and 360.\n\t *  @typedef {Degrees}\n\t */\n\tDegrees : \"degrees\",\n\t/**\n\t *  A number representing a midi note.\n\t *  @typedef {MIDI}\n\t */\n\tMIDI : \"midi\",\n\t/**\n\t *  A colon-separated representation of time in the form of\n\t *  Bars:Beats:Sixteenths.\n\t *  @typedef {BarsBeatsSixteenths}\n\t */\n\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t/**\n\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t *  Audio is typically sampled 44100 times per second.\n\t *  @typedef {Samples}\n\t */\n\tSamples : \"samples\",\n\t/**\n\t *  Hertz are a frequency representation defined as one cycle per second.\n\t *  @typedef {Hertz}\n\t */\n\tHertz : \"hertz\",\n\t/**\n\t *  A frequency represented by a letter name,\n\t *  accidental and octave. This system is known as\n\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t *  @typedef {Note}\n\t */\n\tNote : \"note\",\n\t/**\n\t *  One millisecond is a thousandth of a second.\n\t *  @typedef {Milliseconds}\n\t */\n\tMilliseconds : \"milliseconds\",\n\t/**\n\t *  Seconds are the time unit of the AudioContext. In the end,\n\t *  all values need to be evaluated to seconds.\n\t *  @typedef {Seconds}\n\t */\n\tSeconds : \"seconds\",\n\t/**\n\t *  A string representing a duration relative to a measure.\n\t *  * \"4n\" = quarter note\n\t *  * \"2m\" = two measures\n\t *  * \"8t\" = eighth-note triplet\n\t *  @typedef {Notation}\n\t */\n\tNotation : \"notation\",\n};\n\n///////////////////////////////////////////////////////////////////////////\n// AUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert Time into seconds.\n *\n *  Unlike the method which it overrides, this takes into account\n *  transporttime and musical notation.\n *\n *  Time : 1.40\n *  Notation: 4n or 1m or 2t\n *  Now Relative: +3n\n *\n *  @param  {Time} time\n *  @return {Seconds}\n */\nTone.prototype.toSeconds = function(time){\n\tif (Tone.isNumber(time)){\n\t\treturn time;\n\t} else if (Tone.isUndef(time)){\n\t\treturn this.now();\n\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.Time(time)).toSeconds();\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toSeconds();\n\t}\n};\n\n/**\n *  Convert a frequency representation into a number.\n *  @param  {Frequency} freq\n *  @return {Hertz}      the frequency in hertz\n */\nTone.prototype.toFrequency = function(freq){\n\tif (Tone.isNumber(freq)){\n\t\treturn freq;\n\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t} else if (freq instanceof Tone.TimeBase){\n\t\treturn freq.toFrequency();\n\t}\n};\n\n/**\n *  Convert a time representation into ticks.\n *  @param  {Time} time\n *  @return {Ticks}  the time in ticks\n */\nTone.prototype.toTicks = function(time){\n\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t} else if (Tone.isUndef(time)){\n\t\treturn Tone.Transport.ticks;\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toTicks();\n\t}\n};\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n *          multiplies the incoming signal by that value.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value Constant value to multiple. If no value is provided,\n *                         it will return the product of the first and second inputs\n *  @example\n * var mult = new Tone.Multiply();\n * var sigA = new Tone.Signal(3);\n * var sigB = new Tone.Signal(4);\n * sigA.connect(mult, 0, 0);\n * sigB.connect(mult, 0, 1);\n * //output of mult is 12.\n *  @example\n * var mult = new Tone.Multiply(10);\n * var sig = new Tone.Signal(2).connect(mult);\n * //the output of mult is 20.\n */\nTone.Multiply = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the input node is the same as the output node\n\t *  it is also the GainNode which handles the scaling of incoming signal\n\t *\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  the scaling parameter\n\t *  @type {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input[1] = this.output.gain;\n\tthis.value = Tone.defaultArg(value, 0);\n};\n\nTone.extend(Tone.Multiply, Tone.Signal);\n\n/**\n *  clean up\n *  @returns {Tone.Multiply} this\n */\nTone.Multiply.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._mult.dispose();\n\tthis._mult = null;\n\tthis._param = null;\n\treturn this;\n};\n\nexport default Tone.Multiply;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../component/Volume\";\nimport \"../core/Master\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of Tone.Transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nTone.Source = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * \tKeep track of the scheduled state.\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.memory = 100;\n\n\t/**\n\t *  The synced `start` callback function from the transport\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._synced = false;\n\n\t/**\n\t *  Keep track of all of the scheduled event ids\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._scheduled = [];\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Source, Tone.AudioNode);\n\n/**\n *  The default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Source.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Source#\n *  @name state\n */\nObject.defineProperty(Tone.Source.prototype, \"state\", {\n\tget : function(){\n\t\tif (this._synced){\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t} else {\n\t\t\t\treturn Tone.State.Stopped;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n//overwrite these functions\nTone.Source.prototype._start = Tone.noOp;\nTone.Source.prototype.restart = Tone.noOp;\nTone.Source.prototype._stop = Tone.noOp;\n\n/**\n *  Start the source at the specified time. If no time is given,\n *  start the source now.\n *  @param  {Time} [time=now] When the source should be started.\n *  @returns {Tone.Source} this\n *  @example\n * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n */\nTone.Source.prototype.start = function(time, offset, duration){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\tif (!this._synced){\n\t\t\ttime = Math.max(time, this.context.currentTime);\n\t\t}\n\t}\n\t//if it's started, stop it and restart it\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis.restart(time, offset, duration);\n\t} else {\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (this._synced){\n\t\t\t// add the offset time to the event\n\t\t\tvar event = this._state.get(time);\n\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\tevent.duration = duration;\n\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\tthis._start(t, offset, duration);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\n\t\t\t//if it's already started\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._start.apply(this, arguments);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the source at the specified time. If no time is given,\n *  stop the source now.\n *  @param  {Time} [time=now] When the source should be stopped.\n *  @returns {Tone.Source} this\n *  @example\n * source.stop(); // stops the source immediately\n */\nTone.Source.prototype.stop = function(time){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\tif (!this._synced){\n\t\tthis._stop.apply(this, arguments);\n\t} else {\n\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\tthis._scheduled.push(sched);\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\treturn this;\n};\n\n/**\n *  Sync the source to the Transport so that all subsequent\n *  calls to `start` and `stop` are synced to the TransportTime\n *  instead of the AudioContext time.\n *\n *  @returns {Tone.Source} this\n *  @example\n * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n * source.sync().start(0).stop(0.3);\n * //start the transport.\n * Tone.Transport.start();\n *\n *  @example\n * //start the transport with an offset and the sync'ed sources\n * //will start in the correct position\n * source.sync().start(0.1);\n * //the source will be invoked with an offset of 0.4\n * Tone.Transport.start(\"+0.5\", 0.5);\n */\nTone.Source.prototype.sync = function(){\n\tthis._synced = true;\n\tthis._syncedStart = function(time, offset){\n\t\tif (offset > 0){\n\t\t\t// get the playback state at that time\n\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t// get the offset\n\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\tvar duration;\n\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t}\n\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t}\n\t\t}\n\t}.bind(this);\n\tthis._syncedStop = function(time){\n\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\tthis._stop(time);\n\t\t}\n\t}.bind(this);\n\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\treturn this;\n};\n\n/**\n *  Unsync the source to the Transport. See Tone.Source.sync\n *  @returns {Tone.Source} this\n */\nTone.Source.prototype.unsync = function(){\n\tif (this._synced){\n\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t}\n\tthis._synced = false;\n\t// clear all of the scheduled ids\n\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\tvar id = this._scheduled[i];\n\t\tTone.Transport.clear(id);\n\t}\n\tthis._scheduled = [];\n\tthis._state.cancel(0);\n\treturn this;\n};\n\n/**\n *\tClean up.\n *  @return {Tone.Source} this\n */\nTone.Source.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.unsync();\n\tthis._scheduled = null;\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Source;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t//fixes safari only bug which is still present in 11\n\tvar ua = navigator.userAgent.toLowerCase();\n\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\tif (isSafari){\n\n\t\tvar WaveShaperNode = function(context){\n\n\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\tthis._curve = null;\n\n\t\t\tfor (var prop in this._internalNode){\n\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t}\n\t\t};\n\n\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn this._curve;\n\t\t\t},\n\t\t\t\"set\" : function(curve){\n\t\t\t\tthis._curve = curve;\n\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\tarray.set(curve, 1);\n\t\t\t\tarray[0] = curve[0];\n\t\t\t\tthis._internalNode.curve = array;\n\t\t\t}\n\t\t});\n\n\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\treturn new WaveShaperNode(this);\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/SignalBase\";\nimport \"../shim/WaveShaperNode\";\n\n/**\n *  @class Wraps the native Web Audio API\n *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {function|Array|Number} mapping The function used to define the values.\n *                                    The mapping function should take two arguments:\n *                                    the first is the value at the current position\n *                                    and the second is the array position.\n *                                    If the argument is an array, that array will be\n *                                    set as the wave shaping function. The input\n *                                    signal is an AudioRange [-1, 1] value and the output\n *                                    signal can take on any numerical values.\n *\n *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n *  @example\n * var timesTwo = new Tone.WaveShaper(function(val){\n * \treturn val * 2;\n * }, 2048);\n *  @example\n * //a waveshaper can also be constructed with an array of values\n * var invert = new Tone.WaveShaper([1, -1]);\n */\nTone.WaveShaper = function(mapping, bufferLen){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  the waveshaper\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t/**\n\t *  the waveshapers curve\n\t *  @type {Float32Array}\n\t *  @private\n\t */\n\tthis._curve = null;\n\n\tif (Array.isArray(mapping)){\n\t\tthis.curve = mapping;\n\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t} else if (Tone.isFunction(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\tthis.setMap(mapping);\n\t}\n};\n\nTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n/**\n *  Uses a mapping function to set the value of the curve.\n *  @param {function} mapping The function used to define the values.\n *                            The mapping function take two arguments:\n *                            the first is the value at the current position\n *                            which goes from -1 to 1 over the number of elements\n *                            in the curve array. The second argument is the array position.\n *  @returns {Tone.WaveShaper} this\n *  @example\n * //map the input signal from [-1, 1] to [0, 10]\n * shaper.setMap(function(val, index){\n * \treturn (val + 1) * 5;\n * })\n */\nTone.WaveShaper.prototype.setMap = function(mapping){\n\tvar array = new Array(this._curve.length);\n\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\tarray[i] = mapping(normalized, i);\n\t}\n\tthis.curve = array;\n\treturn this;\n};\n\n/**\n * The array to set as the waveshaper curve. For linear curves\n * array length does not make much difference, but for complex curves\n * longer arrays will provide smoother interpolation.\n * @memberOf Tone.WaveShaper#\n * @type {Array}\n * @name curve\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\tget : function(){\n\t\treturn this._shaper.curve;\n\t},\n\tset : function(mapping){\n\t\tthis._curve = new Float32Array(mapping);\n\t\tthis._shaper.curve = this._curve;\n\t}\n});\n\n/**\n * Specifies what type of oversampling (if any) should be used when\n * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.WaveShaper#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\tthis._shaper.oversample = oversampling;\n\t\t} else {\n\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.WaveShaper} this\n */\nTone.WaveShaper.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.disconnect();\n\tthis._shaper = null;\n\tthis._curve = null;\n\treturn this;\n};\n\nexport default Tone.WaveShaper;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../core/AudioNode\";\n\n/**\n * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n * \t        the effectSend and effectReturn GainNodes, then control the amount of\n * \t        effect which goes to the output using the wet control.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange|Object} [wet] The starting wet value.\n */\nTone.Effect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control is how much of the effected\n\t *  will pass through to the output. 1 = 100% effected\n\t *  signal, 0 = 100% dry signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  connect the effectSend to the input of hte effect\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectSend = new Tone.Gain();\n\n\t/**\n\t *  connect the output of the effect to the effectReturn\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectReturn = new Tone.Gain();\n\n\t//connections\n\tTone.connect(this.input, this._dryWet.a);\n\tTone.connect(this.input, this.effectSend);\n\tthis.effectReturn.connect(this._dryWet.b);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.Effect, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Effect.defaults = {\n\t\"wet\" : 1\n};\n\n/**\n *  chains the effect in between the effectSend and effectReturn\n *  @param  {Tone} effect\n *  @private\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.connectEffect = function(effect){\n\tthis.effectSend.chain(effect, this.effectReturn);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis.effectSend.dispose();\n\tthis.effectSend = null;\n\tthis.effectReturn.dispose();\n\tthis.effectReturn = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.Effect;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Filter is a filter which allows for all of the same native methods\n *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n *          Tone.Filter has the added ability to set the filter rolloff at -12\n *          (default), -24 and -48.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n *  @param {string=} type The type of filter.\n *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n *                            3 choices: -12, -24, and -48\n *  @example\n *  var filter = new Tone.Filter(200, \"highpass\");\n */\nTone.Filter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"rolloff\"], Tone.Filter);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the filter(s)\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filters = [];\n\n\t/**\n\t *  The cutoff frequency of the filter.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune parameter\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(0, Tone.Type.Cents);\n\n\t/**\n\t *  The gain of the filter, only used in certain filter types\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Signal({\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : true,\n\t\t\"type\" : Tone.Type.Decibels\n\t});\n\n\t/**\n\t *  The Q or Quality of the filter\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\t/**\n\t *  the type of the filter\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  the rolloff value of the filter\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._rolloff = options.rolloff;\n\n\t//set the rolloff;\n\tthis.rolloff = options.rolloff;\n\tthis._readOnly([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.Filter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @type {Object}\n */\nTone.Filter.defaults = {\n\t\"type\" : \"lowpass\",\n\t\"frequency\" : 350,\n\t\"rolloff\" : -12,\n\t\"Q\" : 1,\n\t\"gain\" : 0,\n};\n\n/**\n * The type of the filter. Types: \"lowpass\", \"highpass\",\n * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n * @memberOf Tone.Filter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Filter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tif (types.indexOf(type)=== -1){\n\t\t\tthrow new TypeError(\"Tone.Filter: invalid type \"+type);\n\t\t}\n\t\tthis._type = type;\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].type = type;\n\t\t}\n\t}\n});\n\n/**\n * The rolloff of the filter which is the drop in db\n * per octave. Implemented internally by cascading filters.\n * Only accepts the values -12, -24, -48 and -96.\n * @memberOf Tone.Filter#\n * @type {number}\n * @name rolloff\n */\nObject.defineProperty(Tone.Filter.prototype, \"rolloff\", {\n\tget : function(){\n\t\treturn this._rolloff;\n\t},\n\tset : function(rolloff){\n\t\trolloff = parseInt(rolloff, 10);\n\t\tvar possibilities = [-12, -24, -48, -96];\n\t\tvar cascadingCount = possibilities.indexOf(rolloff);\n\t\t//check the rolloff is valid\n\t\tif (cascadingCount === -1){\n\t\t\tthrow new RangeError(\"Tone.Filter: rolloff can only be -12, -24, -48 or -96\");\n\t\t}\n\t\tcascadingCount += 1;\n\t\tthis._rolloff = rolloff;\n\t\t//first disconnect the filters and throw them away\n\t\tthis.input.disconnect();\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].disconnect();\n\t\t\tthis._filters[i] = null;\n\t\t}\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (var count = 0; count < cascadingCount; count++){\n\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\t//connect them up\n\t\tvar connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\tTone.connectSeries.apply(Tone, connectionChain);\n\t}\n});\n\n/**\n * Get the frequency response curve. This curve represets how the filter\n * responses to frequencies between 20hz-20khz. \n * @param  {Number} [len=128] The number of values to return\n * @return {Float32Array}     The frequency response curve between 20-20k\n */\nTone.Filter.prototype.getFrequencyResponse = function(len){\n\tlen = Tone.defaultArg(len, 128);\n\t//start with all 1s\n\tvar totalResponse = new Float32Array(len).map(function(){\n\t\treturn 1;\n\t});\n\tvar freqValues = new Float32Array(len);\n\tfor (var i = 0; i < len; i++){\n\t\tconst norm = Math.pow(i / len, 2);\n\t\tvar freq = norm * (20000 - 20) + 20;\n\t\tfreqValues[i] = freq;\n\t}\n\tvar magValues = new Float32Array(len);\n\tvar phaseValues = new Float32Array(len);\n\tthis._filters.forEach(function(){\n\t\tvar filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this._type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value;\n\t\tfilterClone.gain.value = this.gain.value;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\tmagValues.forEach(function(val, i){\n\t\t\ttotalResponse[i] *= val;\n\t\t});\n\t}.bind(this));\n\treturn totalResponse;\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Filter} this\n */\nTone.Filter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._filters.length; i++){\n\t\tthis._filters[i].disconnect();\n\t\tthis._filters[i] = null;\n\t}\n\tthis._filters = null;\n\tthis._writable([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\tthis.frequency.dispose();\n\tthis.Q.dispose();\n\tthis.frequency = null;\n\tthis.Q = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.gain.dispose();\n\tthis.gain = null;\n\treturn this;\n};\n\nexport default Tone.Filter;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Merge brings two signals into the left and right\n *          channels of a single stereo channel.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge. \n *  @example\n * var merge = new Tone.Merge().toMaster();\n * //routing a sine tone in the left channel\n * //and noise in the right channel\n * var osc = new Tone.Oscillator().connect(merge.left);\n * var noise = new Tone.Noise().connect(merge.right);\n * //starting our oscillators\n * noise.start();\n * osc.start();\n */\nTone.Merge = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\t\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(channels, 0);\n\n\t/**\n\t *  the merger node for the two channels\n\t *  @type {ChannelMergerNode}\n\t *  @private\n\t */\n\tthis._merger = this.output = this.context.createChannelMerger(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.input[i] = new Tone.Gain();\n\t\tthis.input[i].connect(this._merger, 0, i);\n\t\tthis.input[i].channelCount = 1;\n\t\tthis.input[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  The left input channel.\n\t *  Alias for <code>input[0]</code>\n\t *  @type {GainNode}\n\t */\n\tthis.left = this.input[0];\n\n\t/**\n\t *  The right input channel.\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {GainNode}\n\t */\n\tthis.right = this.input[1];\n};\n\nTone.extend(Tone.Merge, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Merge} this\n */\nTone.Merge.prototype.dispose = function(){\n\tthis.input.forEach(function(input){\n\t\tinput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.left = null;\n\tthis.right = null;\n\tthis._merger.disconnect();\n\tthis._merger = null;\n\treturn this;\n};\n\nexport default Tone.Merge;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  AudioBuffer.copyTo/FromChannel polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AudioBuffer.prototype.copyToChannel){\n\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\tchannel[i+start] = src[i];\n\t\t\t}\n\t\t};\n\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\tdest[i] = channel[i+start];\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../type/Type\";\nimport \"../shim/AudioBuffer\";\n\n/**\n *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n *          classes that make requests for audio files such as Tone.Player,\n *          Tone.Sampler and Tone.Convolver.\n *\n *          Aside from load callbacks from individual buffers, Tone.Buffer\n *  \t\tprovides events which keep track of the loading progress\n *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n *\n *  @constructor\n *  @extends {Tone}\n *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n *  @param {Function=} onerror The callback to invoke if there is an error\n *  @example\n * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n *  @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nTone.Buffer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\tTone.call(this);\n\n\t/**\n\t *  stores the loaded AudioBuffer\n\t *  @type {AudioBuffer}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t/**\n\t *  indicates if the buffer should be reversed or not\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._reversed = options.reverse;\n\n\t/**\n\t *  The XHR\n\t *  @type  {XMLHttpRequest}\n\t *  @private\n\t */\n\tthis._xhr = null;\n\n\t/**\n\t * Private callback when the buffer is loaded.\n\t * @type {Function}\n\t * @private\n\t */\n\tthis.onload = Tone.noOp;\n\n\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\tthis.set(options.url);\n\t\tif (!this.loaded){\n\t\t\tthis.onload = options.onload;\n\t\t}\n\t} else if (Tone.isString(options.url)){\n\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t}\n};\n\nTone.extend(Tone.Buffer);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Buffer.defaults = {\n\t\"url\" : undefined,\n\t\"reverse\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"onerror\" : Tone.noOp\n};\n\n/**\n *  Pass in an AudioBuffer or Tone.Buffer to set the value\n *  of this buffer.\n *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.set = function(buffer){\n\tif (buffer instanceof Tone.Buffer){\n\t\t//if it's loaded, set it\n\t\tif (buffer.loaded){\n\t\t\tthis._buffer = buffer.get();\n\t\t} else {\n\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\tbuffer.onload = function(){\n\t\t\t\tthis.set(buffer);\n\t\t\t\tthis.onload(this);\n\t\t\t}.bind(this);\n\t\t}\n\t} else {\n\t\tthis._buffer = buffer;\n\t}\n\t//reverse it initially\n\tif (this._reversed){\n\t\tthis._reverse();\n\t}\n\treturn this;\n};\n\n/**\n *  @return {AudioBuffer} The audio buffer stored in the object.\n */\nTone.Buffer.prototype.get = function(){\n\treturn this._buffer;\n};\n\n/**\n *  Makes an xhr reqest for the selected url then decodes\n *  the file as an audio buffer. Invokes\n *  the callback once the audio buffer loads.\n *  @param {String} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n */\nTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\tvar promise = new Promise(function(load, error){\n\n\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t//success\n\t\t\tfunction(buff){\n\t\t\t\tthis._xhr = null;\n\t\t\t\tthis.set(buff);\n\t\t\t\tload(this);\n\t\t\t\tthis.onload(this);\n\t\t\t\tif (onload){\n\t\t\t\t\tonload(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\n\t\t\t//error\n\t\t\tfunction(err){\n\t\t\t\tthis._xhr = null;\n\t\t\t\terror(err);\n\t\t\t\tif (onerror){\n\t\t\t\t\tonerror(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn promise;\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._buffer = null;\n\tif (this._xhr){\n\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\tthis._xhr.abort();\n\t\tthis._xhr = null;\n\t}\n\treturn this;\n};\n\n/**\n * If the buffer is loaded or not\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this.length > 0;\n\t},\n});\n\n/**\n * The duration of the buffer.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name duration\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The length of the buffer in samples\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name length\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The number of discrete audio channels. Returns 0 if no buffer\n * is loaded.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name numberOfChannels\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.fromArray = function(array){\n\tvar isMultidimensional = array[0].length > 0;\n\tvar channels = isMultidimensional ? array.length : 1;\n\tvar len = isMultidimensional ? array[0].length : array.length;\n\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\tif (!isMultidimensional && channels === 1){\n\t\tarray = [array];\n\t}\n\tfor (var c = 0; c < channels; c++){\n\t\tbuffer.copyToChannel(array[c], c);\n\t}\n\tthis._buffer = buffer;\n\treturn this;\n};\n\n/**\n * \tSums muliple channels into 1 channel\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toMono = function(chanNum){\n\tif (Tone.isNumber(chanNum)){\n\t\tthis.fromArray(this.toArray(chanNum));\n\t} else {\n\t\tvar outputArray = new Float32Array(this.length);\n\t\tvar numChannels = this.numberOfChannels;\n\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\tvar channelArray = this.toArray(channel);\n\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t}\n\t\t}\n\t\t//divide by the number of channels\n\t\toutputArray = outputArray.map(function(sample){\n\t\t\treturn sample / numChannels;\n\t\t});\n\t\tthis.fromArray(outputArray);\n\t}\n\treturn this;\n};\n\n/**\n * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toArray = function(channel){\n\tif (Tone.isNumber(channel)){\n\t\treturn this.getChannelData(channel);\n\t} else if (this.numberOfChannels === 1){\n\t\treturn this.toArray(0);\n\t} else {\n\t\tvar ret = [];\n\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\tret[c] = this.getChannelData(c);\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/**\n *  Returns the Float32Array representing the PCM audio data for the specific channel.\n *  @param  {Number}  channel  The channel number to return\n *  @return  {Float32Array}  The audio as a TypedArray\n */\nTone.Buffer.prototype.getChannelData = function(channel){\n\treturn this._buffer.getChannelData(channel);\n};\n\n/**\n *  Cut a subsection of the array and return a buffer of the\n *  subsection. Does not modify the original buffer\n *  @param {Time} start The time to start the slice\n *  @param {Time=} end The end time to slice. If none is given\n *                     will default to the end of the buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.slice = function(start, end){\n\tend = Tone.defaultArg(end, this.duration);\n\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\tvar replacement = [];\n\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t}\n\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\treturn retBuffer;\n};\n\n/**\n *  Reverse the buffer.\n *  @private\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype._reverse = function(){\n\tif (this.loaded){\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Reverse the buffer.\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\"get\" : function(){\n\t\treturn this._reversed;\n\t},\n\t\"set\" : function(rev){\n\t\tif (this._reversed !== rev){\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t},\n});\n\n///////////////////////////////////////////////////////////////////////////\n// STATIC METHODS\n///////////////////////////////////////////////////////////////////////////\n\n//statically inherits Emitter methods\nTone.Emitter.mixin(Tone.Buffer);\n\n/**\n *  the static queue for all of the xhr requests\n *  @type {Array}\n *  @private\n */\nTone.Buffer._downloadQueue = [];\n\n/**\n *  A path which is prefixed before every url.\n *  @type  {String}\n *  @static\n */\nTone.Buffer.baseUrl = \"\";\n\n/**\n *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} A Tone.Buffer created from the array\n */\nTone.Buffer.fromArray = function(array){\n\treturn (new Tone.Buffer()).fromArray(array);\n};\n\n/**\n * Creates a Tone.Buffer from a URL, returns a promise\n * which resolves to a Tone.Buffer\n * @param  {String} url The url to load.\n * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n */\nTone.Buffer.fromUrl = function(url){\n\tvar buffer = new Tone.Buffer();\n\treturn buffer.load(url).then(function(){\n\t\treturn buffer;\n\t});\n};\n\n/**\n * Remove an xhr request from the download queue\n * @private\n */\nTone.Buffer._removeFromDownloadQueue = function(request){\n\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\tif (index !== -1){\n\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t}\n};\n\n/**\n *  Loads a url using XMLHttpRequest.\n *  @param {String} url\n *  @param {Function} onload\n *  @param {Function} onerror\n *  @param {Function} onprogress\n *  @return {XMLHttpRequest}\n */\nTone.Buffer.load = function(url, onload, onerror){\n\t//default\n\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t// test if the url contains multiple extensions\n\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\tif (matches){\n\t\tvar extensions = matches[1].split(\"|\");\n\t\tvar extension = extensions[0];\n\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\textension = extensions[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\turl = url.replace(matches[0], extension);\n\t}\n\n\tfunction onError(e){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\tTone.Buffer.emit(\"error\", e);\n\t\tif (onerror){\n\t\t\tonerror(e);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tfunction onProgress(){\n\t\t//calculate the progress\n\t\tvar totalProgress = 0;\n\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t}\n\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t}\n\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\trequest.responseType = \"arraybuffer\";\n\t//start out as 0\n\trequest.progress = 0;\n\n\tTone.Buffer._downloadQueue.push(request);\n\n\trequest.addEventListener(\"load\", function(){\n\n\t\tif (request.status === 200){\n\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\trequest.progress = 1;\n\t\t\t\tonProgress();\n\t\t\t\tonload(buff);\n\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t//emit the event at the end\n\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t}\n\t\t\t}).catch(function(){\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t});\n\t\t} else {\n\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t}\n\t});\n\trequest.addEventListener(\"error\", onError);\n\n\trequest.addEventListener(\"progress\", function(event){\n\t\tif (event.lengthComputable){\n\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\tonProgress();\n\t\t}\n\t});\n\n\trequest.send();\n\n\treturn request;\n};\n\n/**\n *  Stop all of the downloads in progress\n *  @return {Tone.Buffer}\n *  @static\n */\nTone.Buffer.cancelDownloads = function(){\n\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\trequest.abort();\n\t});\n\treturn Tone.Buffer;\n};\n\n/**\n *  Checks a url's extension to see if the current browser can play that file type.\n *  @param {String} url The url/extension to test\n *  @return {Boolean} If the file extension can be played\n *  @static\n *  @example\n * Tone.Buffer.supportsType(\"wav\"); //returns true\n * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n */\nTone.Buffer.supportsType = function(url){\n\tvar extension = url.split(\".\");\n\textension = extension[extension.length - 1];\n\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\treturn response !== \"\";\n};\n\n/**\n *  Returns a Promise which resolves when all of the buffers have loaded\n *  @return {Promise}\n */\nTone.loaded = function(){\n\tvar onload, onerror;\n\tfunction removeEvents(){\n\t\t//remove the events when it's resolved\n\t\tTone.Buffer.off(\"load\", onload);\n\t\tTone.Buffer.off(\"error\", onerror);\n\t}\n\treturn new Promise(function(success, fail){\n\t\tonload = function(){\n\t\t\tsuccess();\n\t\t};\n\t\tonerror = function(){\n\t\t\tfail();\n\t\t};\n\t\t//add the event listeners\n\t\tTone.Buffer.on(\"load\", onload);\n\t\tTone.Buffer.on(\"error\", onerror);\n\t}).then(removeEvents).catch(function(e){\n\t\tremoveEvents();\n\t\tthrow new Error(e);\n\t});\n};\n\nexport default Tone.Buffer;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Oscillator\";\nimport \"../signal/Scale\";\nimport \"../core/AudioNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../type/Type\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n *          which can be attached to an AudioParam or Tone.Signal\n *          in order to modulate that parameter with an oscillator. The LFO can\n *          also be synced to the transport to start/stop and change when the tempo changes.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n *                               in the frequency range of 0.1 to 10 hertz.\n *  @param {number=} min The minimum output value of the LFO.\n *  @param {number=} max The maximum value of the LFO.\n *  @example\n * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n * lfo.connect(filter.frequency);\n */\nTone.LFO = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"min\", \"max\"], Tone.LFO);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"type\" : options.type,\n\t});\n\n\t/**\n\t *  the lfo's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._oscillator.frequency;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.amplitude = this._oscillator.volume;\n\tthis.amplitude.units = Tone.Type.NormalRange;\n\tthis.amplitude.value = options.amplitude;\n\n\t/**\n\t *  The signal which is output when the LFO is stopped\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t/**\n\t *  Just outputs zeros.\n\t *  @type {Tone.Zero}\n\t *  @private\n\t */\n\tthis._zeros = new Tone.Zero();\n\n\t/**\n\t *  The value that the LFO outputs when it's stopped\n\t *  @type {AudioRange}\n\t *  @private\n\t */\n\tthis._stoppedValue = 0;\n\n\t/**\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._a2g = new Tone.AudioToGain();\n\n\t/**\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaler = this.output = new Tone.Scale(options.min, options.max);\n\n\t/**\n\t *  the units of the LFO (used for converting)\n\t *  @type {Tone.Type}\n\t *  @private\n\t */\n\tthis._units = Tone.Type.Default;\n\tthis.units = options.units;\n\n\t//connect it up\n\tthis._oscillator.chain(this._a2g, this._scaler);\n\tthis._zeros.connect(this._a2g);\n\tthis._stoppedSignal.connect(this._a2g);\n\tthis._readOnly([\"amplitude\", \"frequency\"]);\n\tthis.phase = options.phase;\n};\n\nTone.extend(Tone.LFO, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LFO.defaults = {\n\t\"type\" : \"sine\",\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"phase\" : 0,\n\t\"frequency\" : \"4n\",\n\t\"amplitude\" : 1,\n\t\"units\" : Tone.Type.Default\n};\n\n/**\n *  Start the LFO.\n *  @param  {Time} [time=now] the time the LFO will start\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(0, time);\n\tthis._oscillator.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the LFO.\n *  @param  {Time} [time=now] the time the LFO will stop\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\tthis._oscillator.stop(time);\n\treturn this;\n};\n\n/**\n *  Sync the start/stop/pause to the transport\n *  and the frequency to the bpm of the transport\n *  @returns {Tone.LFO} this\n *  @example\n *  lfo.frequency.value = \"8n\";\n *  lfo.sync().start(0)\n *  //the rate of the LFO will always be an eighth note,\n *  //even as the tempo changes\n */\nTone.LFO.prototype.sync = function(){\n\tthis._oscillator.sync();\n\tthis._oscillator.syncFrequency();\n\treturn this;\n};\n\n/**\n *  unsync the LFO from transport control\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.unsync = function(){\n\tthis._oscillator.unsync();\n\tthis._oscillator.unsyncFrequency();\n\treturn this;\n};\n\n/**\n * The miniumum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.LFO.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.min);\n\t},\n\tset : function(min){\n\t\tmin = this._fromUnits(min);\n\t\tthis._scaler.min = min;\n\t}\n});\n\n/**\n * The maximum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.LFO.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.max);\n\t},\n\tset : function(max){\n\t\tmax = this._fromUnits(max);\n\t\tthis._scaler.max = max;\n\t}\n});\n\n/**\n * The type of the oscillator: sine, square, sawtooth, triangle.\n * @memberOf Tone.LFO#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.LFO.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The phase of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.LFO.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The output units of the LFO.\n * @memberOf Tone.LFO#\n * @type {Tone.Type}\n * @name units\n */\nObject.defineProperty(Tone.LFO.prototype, \"units\", {\n\tget : function(){\n\t\treturn this._units;\n\t},\n\tset : function(val){\n\t\tvar currentMin = this.min;\n\t\tvar currentMax = this.max;\n\t\t//convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n});\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.LFO#\n *  @name state\n */\nObject.defineProperty(Tone.LFO.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._oscillator.state;\n\t}\n});\n\n/**\n *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n *  Tone.LFO will automatically convert to the destination units of the\n *  will get the units from the connected node.\n *  @param  {Tone | AudioParam | AudioNode} node\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.LFO} this\n *  @private\n */\nTone.LFO.prototype.connect = function(node){\n\tif (node.constructor === Tone.Signal || node.constructor === Tone.Param){\n\t\tthis.convert = node.convert;\n\t\tthis.units = node.units;\n\t}\n\tTone.SignalBase.prototype.connect.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  private method borrowed from Param converts\n *  units from their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\n/**\n *  private method borrowed from Param converts\n *  units to their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\n/**\n *  disconnect and dispose\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"amplitude\", \"frequency\"]);\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._stoppedSignal.dispose();\n\tthis._stoppedSignal = null;\n\tthis._zeros.dispose();\n\tthis._zeros = null;\n\tthis._scaler.dispose();\n\tthis._scaler = null;\n\tthis._a2g.dispose();\n\tthis._a2g = null;\n\tthis.frequency = null;\n\tthis.amplitude = null;\n\treturn this;\n};\n\nexport default Tone.LFO;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Negate\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n *         signals <code>.value</code> will be subtracted from the incoming signal.\n *\n *  @extends {Tone.Signal}\n *  @constructor\n *  @param {number=} value The value to subtract from the incoming signal. If the value\n *                         is omitted, it will subtract the second signal from the first.\n *  @example\n * var sub = new Tone.Subtract(1);\n * var sig = new Tone.Signal(4).connect(sub);\n * //the output of sub is 3. \n *  @example\n * var sub = new Tone.Subtract();\n * var sigA = new Tone.Signal(10);\n * var sigB = new Tone.Signal(2.5);\n * sigA.connect(sub, 0, 0);\n * sigB.connect(sub, 0, 1);\n * //output of sub is 7.5\n */\nTone.Subtract = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  negate the input of the second input before connecting it\n\t *  to the summing node.\n\t *  @type {Tone.Negate}\n\t *  @private\n\t */\n\tthis._neg = new Tone.Negate();\n\n\t/**\n\t *  the node where the value is set\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\tthis._param.chain(this._neg, this._sum);\n};\n\nTone.extend(Tone.Subtract, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.SignalBase} this\n */\nTone.Subtract.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._neg.dispose();\n\tthis._neg = null;\n\tthis._sum.disconnect();\n\tthis._sum = null;\n\treturn this;\n};\n\nexport default Tone.Subtract;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n *         additional unit conversion functionality. It also\n *         serves as a base-class for classes which have a single,\n *         automatable parameter.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioParam}  param  The parameter to wrap.\n *  @param  {Tone.Type} units The units of the audio param.\n *  @param  {Boolean} convert If the param should be converted.\n */\nTone.Param = function(){\n\n\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The native parameter to control\n\t *  @type  {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input = options.param;\n\n\t/**\n\t *  The units of the parameter\n\t *  @type {Tone.Type}\n\t */\n\tthis.units = options.units;\n\n\t/**\n\t *  If the value should be converted or not\n\t *  @type {Boolean}\n\t */\n\tthis.convert = options.convert;\n\n\t/**\n\t *  True if the signal value is being overridden by\n\t *  a connected signal.\n\t *  @readOnly\n\t *  @type  {boolean}\n\t *  @private\n\t */\n\tthis.overridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._events = new Tone.Timeline(1000);\n\n\tif (Tone.isDefined(options.value) && this._param){\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n};\n\nTone.extend(Tone.Param, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n */\nTone.Param.defaults = {\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n\t\"param\" : undefined\n};\n\n/**\n * The current value of the parameter.\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"value\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\treturn this._toUnits(this.getValueAtTime(now));\n\t},\n\tset : function(value){\n\t\tthis._initialValue = this._fromUnits(value);\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n});\n\n/**\n * The minimum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\tthis.units === Tone.Type.BPM){\n\t\t\treturn 0;\n\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\treturn -1;\n\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n});\n\n/**\n * The maximum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n});\n\n/**\n *  Convert the given value from the type specified by Tone.Param.units\n *  into the destination value (such as Gain or Frequency).\n *  @private\n *  @param  {*} val the value to convert\n *  @return {number}     the number which the value should be set to\n */\nTone.Param.prototype._fromUnits = function(val){\n\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Time:\n\t\t\t\treturn this.toSeconds(val);\n\t\t\tcase Tone.Type.Frequency:\n\t\t\t\treturn this.toFrequency(val);\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.dbToGain(val);\n\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\tcase Tone.Type.Positive:\n\t\t\t\treturn Math.max(val, 0);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n * Convert the parameters value into the units specified by Tone.Param.units.\n * @private\n * @param  {number} val the value to convert\n * @return {number}\n */\nTone.Param.prototype._toUnits = function(val){\n\tif (this.convert || Tone.isUndef(this.convert)){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.gainToDb(val);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n *  the minimum output value\n *  @type {Number}\n *  @private\n */\nTone.Param.prototype._minOutput = 1e-5;\n\n/**\n *  The event types\n *  @enum {String}\n *  @private\n */\nTone.Param.AutomationType = {\n\tLinear : \"linearRampToValueAtTime\",\n\tExponential : \"exponentialRampToValueAtTime\",\n\tTarget : \"setTargetAtTime\",\n\tSetValue : \"setValueAtTime\",\n\tCancel : \"cancelScheduledValues\"\n};\n\n/**\n *  Schedules a parameter value change at the given time.\n *  @param {*}\tvalue The value to set the signal.\n *  @param {Time}  time The time when the change should occur.\n *  @returns {Tone.Param} this\n *  @example\n * //set the frequency to \"G4\" in exactly 1 second from now.\n * freq.setValueAtTime(\"G4\", \"+1\");\n */\nTone.Param.prototype.setValueAtTime = function(value, time){\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : value,\n\t\t\"time\" : time,\n\t});\n\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\tthis._param.setValueAtTime(value, time);\n\treturn this;\n};\n\n/**\n *  Get the signals value at the given time. Subsequent scheduling\n *  may invalidate the returned value.\n *  @param {Time} time When to get the value\n *  @returns {Number} The value at the given time\n */\nTone.Param.prototype.getValueAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar after = this._events.getAfter(time);\n\tvar before = this._events.get(time);\n\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\tvar value = initialValue;\n\t//if it was set by\n\tif (before === null){\n\t\tvalue = initialValue;\n\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\tvar previous = this._events.getBefore(before.time);\n\t\tvar previousVal;\n\t\tif (previous === null){\n\t\t\tpreviousVal = initialValue;\n\t\t} else {\n\t\t\tpreviousVal = previous.value;\n\t\t}\n\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t} else if (after === null){\n\t\tvalue = before.value;\n\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else {\n\t\tvalue = before.value;\n\t}\n\treturn value;\n};\n\n/**\n *  Creates a schedule point with the current value at the current time.\n *  This is useful for creating an automation anchor point in order to\n *  schedule changes from the current value.\n *\n *  @param {number=} now (Optionally) pass the now value in.\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setRampPoint = function(time){\n\ttime = this.toSeconds(time);\n\tvar currentVal = this.getValueAtTime(time);\n\tthis.cancelAndHoldAtTime(time);\n\tif (currentVal === 0){\n\t\tcurrentVal = this._minOutput;\n\t}\n\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\treturn this;\n};\n\n/**\n *  Schedules a linear continuous change in parameter value from the\n *  previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tendTime = this.toSeconds(endTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\"value\" : value,\n\t\t\"time\" : endTime,\n\t});\n\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\tthis._param.linearRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tvalue = Math.max(this._minOutput, value);\n\tendTime = this.toSeconds(endTime);\n\t//store the event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\"time\" : endTime,\n\t\t\"value\" : value\n\t});\n\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Schedules an linear continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //linearly ramp to the value 4 over 3 seconds.\n * signal.linearRampTo(4, 3);\n */\nTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n *  @param  {number} value   The value to ramp to.\n *  @param {Time}\ttime \tWhen the ramp should start.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\ttime = this.toSeconds(time);\n\tthis.setTargetAtTime(value, time, timeConstant);\n\t//at 90% start a linear ramp to the final value\n\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\tthis.linearRampToValueAtTime(value, time + rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tvalue = this._fromUnits(value);\n\t// The value will never be able to approach without timeConstant > 0.\n\tif (timeConstant <= 0){\n\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t}\n\tstartTime = this.toSeconds(startTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\"value\" : value,\n\t\t\"time\" : startTime,\n\t\t\"constant\" : timeConstant\n\t});\n\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Sets an array of arbitrary parameter values starting at the given time\n *  for the given duration.\n *\n *  @param {Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tscaling = Tone.defaultArg(scaling, 1);\n\tduration = this.toSeconds(duration);\n\tstartTime = this.toSeconds(startTime);\n\tthis.setValueAtTime(values[0] * scaling, startTime);\n\tvar segTime = duration / (values.length - 1);\n\tfor (var i = 1; i < values.length; i++){\n\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelScheduledValues = function(time){\n\ttime = this.toSeconds(time);\n\tthis._events.cancel(time);\n\tthis._param.cancelScheduledValues(time);\n\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar valueAtTime = this.getValueAtTime(time);\n\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t//remove the schedule events\n\tthis._param.cancelScheduledValues(time);\n\n\t//if there is an event at the given time\n\t//and that even is not a \"set\"\n\tvar before = this._events.get(time);\n\tvar after = this._events.getAfter(time);\n\tif (before && before.time === time){\n\t\t//remove everything after\n\t\tif (after){\n\t\t\tthis._events.cancel(after.time);\n\t\t} else {\n\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t}\n\t} else if (after){\n\t\t//cancel the next event(s)\n\t\tthis._events.cancel(after.time);\n\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t}\n\t}\n\n\t//set the value at the given time\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : valueAtTime,\n\t\t\"time\" : time\n\t});\n\tthis._param.setValueAtTime(valueAtTime, time);\n\treturn this;\n};\n\n/**\n *  Ramps to the given value over the duration of the rampTime.\n *  Automatically selects the best ramp type (exponential or linear)\n *  depending on the `units` of the signal\n *\n *  @param  {number} value\n *  @param  {Time} rampTime \tThe time that it takes the\n *                              value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //ramp to the value either linearly or exponentially\n * //depending on the \"units\" value of the signal\n * signal.rampTo(0, 10);\n *  @example\n * //schedule it to ramp starting at a specific time\n * signal.rampTo(0, 10, 5)\n */\nTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\trampTime = Tone.defaultArg(rampTime, 0.1);\n\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t} else {\n\t\tthis.linearRampTo(value, rampTime, startTime);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUTOMATION CURVE CALCULATIONS\n//\tMIT License, copyright (c) 2014 Jordan Santell\n///////////////////////////////////////////////////////////////////////////\n\n// Calculates the the value along the curve produced by setTargetAtTime\nTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n};\n\n// Calculates the the value along the curve produced by linearRampToValueAtTime\nTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n};\n\n// Calculates the the value along the curve produced by exponentialRampToValueAtTime\nTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._param = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Param;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../component/CrossFade\";\n\n/**\n *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n *\n *\t@constructor\n *\t@extends {Tone.Effect}\n */\nTone.StereoEffect = function(){\n\n\t//get the defaults\n\tTone.AudioNode.call(this);\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control, i.e. how much of the effected\n\t *  will pass through to the output.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  then split it\n\t *  @type {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = new Tone.Split();\n\n\t/**\n\t *  the effects send LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendL = this._split.left;\n\n\t/**\n\t *  the effects send RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendR = this._split.right;\n\n\t/**\n\t *  the stereo effect merger\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = new Tone.Merge();\n\n\t/**\n\t *  the effect return LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnL = this._merge.left;\n\n\t/**\n\t *  the effect return RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnR = this._merge.right;\n\n\t//connections\n\tTone.connect(this.input, this._split);\n\t//dry wet connections\n\tTone.connect(this.input, this._dryWet, 0, 0);\n\tthis._merge.connect(this._dryWet, 0, 1);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.StereoEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoEffect} this\n */\nTone.StereoEffect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\tthis.effectSendL = null;\n\tthis.effectSendR = null;\n\tthis.effectReturnL = null;\n\tthis.effectReturnR = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.StereoEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Clock\";\nimport \"../type/Type\";\nimport \"../core/Timeline\";\nimport \"../core/Emitter\";\nimport \"../core/Gain\";\nimport \"../core/IntervalTimeline\";\nimport \"../core/TransportRepeatEvent\";\nimport \"../core/TransportEvent\";\n\n/**\n *  @class  Transport for timing musical events.\n *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n *          Tone.Transport timing events pass in the exact time of the scheduled event\n *          in the argument of the callback function. Pass that time value to the object\n *          you're scheduling. <br><br>\n *          A single transport is created for you when the library is initialized.\n *          <br><br>\n *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n *          called with the time of that event as the argument.\n *\n *  @extends {Tone.Emitter}\n *  @singleton\n *  @example\n * //repeated event every 8th note\n * Tone.Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n *  @example\n * //schedule an event on the 16th measure\n * Tone.Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nTone.Transport = function(){\n\n\tTone.Emitter.call(this);\n\n\tTone.getContext(function(){\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tLOOPING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * \tIf the transport loops or not.\n\t\t *  @type {boolean}\n\t\t */\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * \tThe loop start position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopStart = 0;\n\n\t\t/**\n\t\t * \tThe loop end position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopEnd = 0;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tCLOCK/TEMPO\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t/**\n\t\t *  watches the main oscillator for timing ticks\n\t\t *  initially starts at 120bpm\n\t\t *  @private\n\t\t *  @type {Tone.Clock}\n\t\t */\n\t\tthis._clock = new Tone.Clock({\n\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\"frequency\" : 0,\n\t\t});\n\n\t\tthis._bindClockEvents();\n\n\t\t/**\n\t\t *  The Beats Per Minute of the Transport.\n\t\t *  @type {BPM}\n\t\t *  @signal\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 80;\n\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t */\n\t\tthis.bpm = this._clock.frequency;\n\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\tthis.bpm.units = Tone.Type.BPM;\n\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\tthis._readOnly(\"bpm\");\n\n\t\t/**\n\t\t *  The time signature, or more accurately the numerator\n\t\t *  of the time signature over a denominator of 4.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENTS\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All the events in an object to keep track by ID\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduledEvents = {};\n\n\t\t/**\n\t\t * \tThe scheduled events.\n\t\t *  @type {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = new Tone.Timeline();\n\n\t\t/**\n\t\t *  Repeated events\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t/**\n\t\t *  All of the synced Signals\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tthis._syncedSignals = [];\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tSWING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The subdivision of the swing\n\t\t *  @type  {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t/**\n\t\t *  The swing amount\n\t\t *  @type {NormalRange}\n\t\t *  @private\n\t\t */\n\t\tthis._swingAmount = 0;\n\n\t\t//transport is a singleton so it adds itself to the context\n\t\tthis.context.transport = this;\n\n\t}.bind(this));\n};\n\nTone.extend(Tone.Transport, Tone.Emitter);\n\n/**\n *  the defaults\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Transport.defaults = {\n\t\"bpm\" : 120,\n\t\"swing\" : 0,\n\t\"swingSubdivision\" : \"8n\",\n\t\"timeSignature\" : 4,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : \"4m\",\n\t\"PPQ\" : 192\n};\n\n/**\n * Is an instanceof Tone.Transport\n * @type {Boolean}\n */\nTone.Transport.prototype.isTransport = true;\n\n///////////////////////////////////////////////////////////////////////////////\n//\tTICKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  called on every tick\n *  @param   {number} tickTime clock relative tick time\n *  @private\n */\nTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t//handle swing\n\tif (this._swingAmount > 0 &&\n\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t//add some swing\n\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t}\n\t//do the loop test\n\tif (this.loop){\n\t\tif (ticks >= this._loopEnd){\n\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\tticks = this._loopStart;\n\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\tthis.emit(\"loop\", tickTime);\n\t\t}\n\t}\n\t//invoke the timeline events scheduled on this tick\n\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\tevent.invoke(tickTime);\n\t});\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSCHEDULABLE EVENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Schedule an event along the timeline.\n *  @param {Function} callback The callback to be invoked at the time.\n *  @param {TransportTime}  time The time to invoke the callback at.\n *  @return {Number} The id of the event which can be used for canceling the event.\n *  @example\n * //trigger the callback when the Transport reaches the desired time\n * Tone.Transport.schedule(function(time){\n * \tenvelope.triggerAttack(time);\n * }, \"128i\");\n */\nTone.Transport.prototype.schedule = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Schedule a repeated event along the timeline. The event will fire\n *  at the `interval` starting at the `startTime` and for the specified\n *  `duration`.\n *  @param  {Function}  callback   The callback to invoke.\n *  @param  {Time}    interval   The duration between successive\n *                               callbacks. Must be a positive number.\n *  @param  {TransportTime=}    startTime  When along the timeline the events should\n *                               start being invoked.\n *  @param {Time} [duration=Infinity] How long the event should repeat.\n *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n *                           the event.\n *  @example\n * //a callback invoked every eighth note after the first measure\n * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n */\nTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\"callback\" : callback,\n\t\t\"interval\" : Tone.Time(interval),\n\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t});\n\t//kick it off if the Transport is started\n\treturn this._addEvent(event, this._repeatedEvents);\n};\n\n/**\n *  Schedule an event that will be removed after it is invoked. \n *  @param {Function} callback The callback to invoke once.\n *  @param {TransportTime} time The time the callback should be invoked.\n *  @returns {Number} The ID of the scheduled event.\n */\nTone.Transport.prototype.scheduleOnce = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback,\n\t\t\"once\" : true\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Clear the passed in event id from the timeline\n *  @param {Number} eventId The id of the event.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.clear = function(eventId){\n\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\titem.timeline.remove(item.event);\n\t\titem.event.dispose();\n\t\tdelete this._scheduledEvents[eventId.toString()];\n\t}\n\treturn this;\n};\n\n/**\n * Add an event to the correct timeline. Keep track of the\n * timeline it was added to.\n * @param {Tone.TransportEvent}\tevent\n * @param {Tone.Timeline} timeline\n * @returns {Number} the event id which was just added\n * @private\n */\nTone.Transport.prototype._addEvent = function(event, timeline){\n\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\"event\" : event,\n\t\t\"timeline\" : timeline\n\t};\n\ttimeline.add(event);\n\treturn event.id;\n};\n\n/**\n *  Remove scheduled events from the timeline after\n *  the given time. Repeated events will be removed\n *  if their startTime is after the given time\n *  @param {TransportTime} [after=0] Clear all events after\n *                          this time.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.cancel = function(after){\n\tafter = Tone.defaultArg(after, 0);\n\tafter = this.toTicks(after);\n\tthis._timeline.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSTART/STOP/PAUSE\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Bind start/stop/pause events from the clock and emit them.\n *  @private\n */\nTone.Transport.prototype._bindClockEvents = function(){\n\tthis._clock.on(\"start\", function(time, offset){\n\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\tthis.emit(\"start\", time, offset);\n\t}.bind(this));\n\n\tthis._clock.on(\"stop\", function(time){\n\t\tthis.emit(\"stop\", time);\n\t}.bind(this));\n\n\tthis._clock.on(\"pause\", function(time){\n\t\tthis.emit(\"pause\", time);\n\t}.bind(this));\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Transport#\n *  @name state\n */\nObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should start.\n *  @param  {TransportTime=} offset The timeline offset to start the transport.\n *  @returns {Tone.Transport} this\n *  @example\n * //start the transport in one second starting at beginning of the 5th measure.\n * Tone.Transport.start(\"+1\", \"4:0:0\");\n */\nTone.Transport.prototype.start = function(time, offset){\n\t//start the clock\n\tif (Tone.isDefined(offset)){\n\t\toffset = this.toTicks(offset);\n\t}\n\tthis._clock.start(time, offset);\n\treturn this;\n};\n\n/**\n *  Stop the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should stop.\n *  @returns {Tone.Transport} this\n *  @example\n * Tone.Transport.stop();\n */\nTone.Transport.prototype.stop = function(time){\n\tthis._clock.stop(time);\n\treturn this;\n};\n\n/**\n *  Pause the transport and all sources synced to the transport.\n *  @param  {Time} [time=now]\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.pause = function(time){\n\tthis._clock.pause(time);\n\treturn this;\n};\n\n/**\n * Toggle the current state of the transport. If it is\n * started, it will stop it, otherwise it will start the Transport.\n * @param  {Time=} time The time of the event\n * @return {Tone.Transport}      this\n */\nTone.Transport.prototype.toggle = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\tthis.start(time);\n\t} else {\n\t\tthis.stop(time);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSETTERS/GETTERS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  The time signature as just the numerator over 4.\n *  For example 4/4 would be just 4 and 6/8 would be 3.\n *  @memberOf Tone.Transport#\n *  @type {Number|Array}\n *  @name timeSignature\n *  @example\n * //common time\n * Tone.Transport.timeSignature = 4;\n * // 7/8\n * Tone.Transport.timeSignature = [7, 8];\n * //this will be reduced to a single number\n * Tone.Transport.timeSignature; //returns 3.5\n */\nObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\tget : function(){\n\t\treturn this._timeSignature;\n\t},\n\tset : function(timeSig){\n\t\tif (Tone.isArray(timeSig)){\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the starting position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(startPosition){\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the ending position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(endPosition){\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n});\n\n/**\n *  Set the loop start and stop at the same time.\n *  @param {TransportTime} startPosition\n *  @param {TransportTime} endPosition\n *  @returns {Tone.Transport} this\n *  @example\n * //loop over the first measure\n * Tone.Transport.setLoopPoints(0, \"1m\");\n * Tone.Transport.loop = true;\n */\nTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\tthis.loopStart = startPosition;\n\tthis.loopEnd = endPosition;\n\treturn this;\n};\n\n/**\n *  The swing value. Between 0-1 where 1 equal to\n *  the note + half the subdivision.\n *  @memberOf Tone.Transport#\n *  @type {NormalRange}\n *  @name swing\n */\nObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\tget : function(){\n\t\treturn this._swingAmount;\n\t},\n\tset : function(amount){\n\t\t//scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n});\n\n/**\n *  Set the subdivision which the swing will be applied to.\n *  The default value is an 8th note. Value must be less\n *  than a quarter note.\n *\n *  @memberOf Tone.Transport#\n *  @type {Time}\n *  @name swingSubdivision\n */\nObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t},\n\tset : function(subdivision){\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n});\n\n/**\n *  The Transport's position in Bars:Beats:Sixteenths.\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {BarsBeatsSixteenths}\n *  @name position\n */\nObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t},\n\tset : function(progress){\n\t\tvar ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's position in seconds\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {Seconds}\n *  @name seconds\n */\nObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._clock.seconds;\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's loop position as a normalized value. Always\n *  returns 0 if the transport if loop is not true.\n *  @memberOf Tone.Transport#\n *  @name progress\n *  @type {NormalRange}\n */\nObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this.loop){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The transports current tick position.\n *\n *  @memberOf Tone.Transport#\n *  @type {Ticks}\n *  @name ticks\n */\nObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this._clock.ticks;\n\t},\n\tset : function(t){\n\t\tif (this._clock.ticks !== t){\n\t\t\tvar now = this.now();\n\t\t\t//stop everything synced to the transport\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t//restart it with the new time\n\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Transport.prototype.getTicksAtTime = function(time){\n\treturn Math.round(this._clock.getTicksAtTime(time));\n};\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Transport.prototype.getSecondsAtTime = function(time){\n\treturn this._clock.getSecondsAtTime(time);\n};\n\n/**\n *  Pulses Per Quarter note. This is the smallest resolution\n *  the Transport timing supports. This should be set once\n *  on initialization and not set again. Changing this value\n *  after other objects have been created can cause problems.\n *\n *  @memberOf Tone.Transport#\n *  @type {Number}\n *  @name PPQ\n */\nObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\tget : function(){\n\t\treturn this._ppq;\n\t},\n\tset : function(ppq){\n\t\tvar bpm = this.bpm.value;\n\t\tthis._ppq = ppq;\n\t\tthis.bpm.value = bpm;\n\t}\n});\n\n/**\n *  Convert from BPM to frequency (factoring in PPQ)\n *  @param  {BPM}  bpm The BPM value to convert to frequency\n *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n *  @private\n */\nTone.Transport.prototype._fromUnits = function(bpm){\n\treturn 1 / (60 / bpm / this.PPQ);\n};\n\n/**\n *  Convert from frequency (with PPQ) into BPM\n *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n *  @return  {BPM}  The frequency value as BPM.\n *  @private\n */\nTone.Transport.prototype._toUnits = function(freq){\n\treturn (freq / this.PPQ) * 60;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSYNCING\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the time aligned to the next subdivision\n *  of the Transport. If the Transport is not started,\n *  it will return 0.\n *  Note: this will not work precisely during tempo ramps.\n *  @param  {Time}  subdivision  The subdivision to quantize to\n *  @return  {Number}  The context time of the next subdivision.\n *  @example\n * Tone.Transport.start(); //the transport must be started\n * Tone.Transport.nextSubdivision(\"4n\");\n */\nTone.Transport.prototype.nextSubdivision = function(subdivision){\n\tsubdivision = this.toTicks(subdivision);\n\tif (this.state !== Tone.State.Started){\n\t\t//if the transport's not started, return 0\n\t\treturn 0;\n\t} else {\n\t\tvar now = this.now();\n\t\t//the remainder of the current ticks and the subdivision\n\t\tvar transportPos = this.getTicksAtTime(now);\n\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t}\n};\n\n/**\n *  Attaches the signal to the tempo control signal so that\n *  any changes in the tempo will change the signal in the same\n *  ratio.\n *\n *  @param  {Tone.Signal} signal\n *  @param {number=} ratio Optionally pass in the ratio between\n *                         the two signals. Otherwise it will be computed\n *                         based on their current values.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.syncSignal = function(signal, ratio){\n\tif (!ratio){\n\t\t//get the sync ratio\n\t\tvar now = this.now();\n\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t} else {\n\t\t\tratio = 0;\n\t\t}\n\t}\n\tvar ratioSignal = new Tone.Gain(ratio);\n\tthis.bpm.chain(ratioSignal, signal._param);\n\tthis._syncedSignals.push({\n\t\t\"ratio\" : ratioSignal,\n\t\t\"signal\" : signal,\n\t\t\"initial\" : signal.value\n\t});\n\tsignal.value = 0;\n\treturn this;\n};\n\n/**\n *  Unsyncs a previously synced signal from the transport's control.\n *  See Tone.Transport.syncSignal.\n *  @param  {Tone.Signal} signal\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.unsyncSignal = function(signal){\n\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\tvar syncedSignal = this._syncedSignals[i];\n\t\tif (syncedSignal.signal === signal){\n\t\t\tsyncedSignal.ratio.dispose();\n\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Transport} this\n *  @private\n */\nTone.Transport.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._writable(\"bpm\");\n\tthis.bpm = null;\n\tthis._timeline.dispose();\n\tthis._timeline = null;\n\tthis._repeatedEvents.dispose();\n\tthis._repeatedEvents = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar TransportConstructor = Tone.Transport;\nTone.Transport = new TransportConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tTone.Transport = context.transport;\n\t} else {\n\t\tTone.Transport = new TransportConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tcontext.transport.dispose();\n\t}\n});\n\nexport default Tone.Transport;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../source/Source\";\nimport \"../core/Transport\";\nimport \"../source/OscillatorNode\";\n\n/**\n *  @class Tone.Oscillator supports a number of features including\n *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] Starting frequency\n *  @param {string} [type] The oscillator type. Read more about type below.\n *  @example\n * //make and start a 440hz sine tone\n * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n */\nTone.Oscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the main oscillator\n\t *  @type {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the periodic wave\n\t *  @type {PeriodicWave}\n\t *  @private\n\t */\n\tthis._wave = null;\n\n\t/**\n\t *  The partials of the oscillator\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to limit or extend the periodic wave by\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t/**\n\t *  the phase of the oscillator\n\t *  between 0 - 360\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  the type of the oscillator\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t//setup\n\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\tthis._type = this.baseType + options.partialCount.toString();\n\t}\n\tthis.phase = this._phase;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.Oscillator, Tone.Source);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Oscillator.defaults = {\n\t\"type\" : \"sine\",\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  The Oscillator types\n *  @enum {String}\n */\nTone.Oscillator.Type = {\n\tSine : \"sine\",\n\tTriangle : \"triangle\",\n\tSawtooth : \"sawtooth\",\n\tSquare : \"square\",\n\tCustom : \"custom\"\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.Oscillator.prototype._start = function(time){\n\tthis.log(\"start\", time);\n\t//new oscillator with previous values\n\tvar oscillator = new Tone.OscillatorNode();\n\tthis._oscillator = oscillator;\n\tif (this._wave){\n\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t} else {\n\t\tthis._oscillator.type = this._type;\n\t}\n\t//connect the control signal to the oscillator frequency & detune\n\tthis._oscillator.connect(this.output);\n\tthis.frequency.connect(this._oscillator.frequency);\n\tthis.detune.connect(this._oscillator.detune);\n\n\t//start the oscillator\n\ttime = this.toSeconds(time);\n\tthis._oscillator.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @private\n *  @param  {Time} [time=now] (optional) timing parameter\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype._stop = function(time){\n\tthis.log(\"stop\", time);\n\tif (this._oscillator){\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.stop(time);\n\t}\n\treturn this;\n};\n\n/**\n * Restart the oscillator. Does not stop the oscillator, but instead\n * just cancels any scheduled 'stop' from being invoked.\n * @param  {Time=} time\n * @return {Tone.Oscillator}      this\n */\nTone.Oscillator.prototype.restart = function(time){\n\tif (this._oscillator){\n\t\tthis._oscillator.cancelStop();\n\t}\n\tthis._state.cancel(this.toSeconds(time));\n\treturn this;\n};\n\n/**\n *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n *  will also affect the oscillators frequency.\n *  @returns {Tone.Oscillator} this\n *  @example\n * Tone.Transport.bpm.value = 120;\n * osc.frequency.value = 440;\n * //the ration between the bpm and the frequency will be maintained\n * osc.syncFrequency();\n * Tone.Transport.bpm.value = 240;\n * // the frequency of the oscillator is doubled to 880\n */\nTone.Oscillator.prototype.syncFrequency = function(){\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n *  Unsync the oscillator's frequency from the Transport.\n *  See Tone.Oscillator.syncFrequency\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.unsyncFrequency = function(){\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n * 8 partials of the triangle wave.\n * <br><br>\n * Uses PeriodicWave internally even for native types so that it can set the phase.\n * PeriodicWave equations are from the\n * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n *\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name type\n * @example\n * //set it to a square wave\n * osc.type = \"square\";\n * @example\n * //set the first 6 partials of a sawtooth wave\n * osc.type = \"sawtooth6\";\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar isBasicType = [Tone.Oscillator.Type.Sine, Tone.Oscillator.Type.Square, Tone.Oscillator.Type.Triangle, Tone.Oscillator.Type.Sawtooth].includes(type);\n\t\tif (this._phase === 0 && isBasicType){\n\t\t\tthis._wave = null;\n\t\t\tthis._partialCount = 0;\n\t\t\t//just go with the basic approach\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t} else {\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._type.replace(this.partialCount, \"\");\n\t},\n\tset : function(baseType){\n\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\tthis.type = baseType + this.partialCount;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @example\n * osc.type = 'sine'\n * osc.partialCount = 3\n * //is equivalent to\n * osc.type = 'sine3'\n * @memberOf Tone.Oscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._partialCount;\n\t},\n\tset : function(p){\n\t\tvar type = this._type;\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial){\n\t\t\ttype = partial[1];\n\t\t}\n\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\tif (p === 0){\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString();\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. \n *  @memberOf Tone.Oscillator#\n *  @returns {Object}\n */\nTone.Oscillator.prototype.get = function(){\n\tvar values = Tone.prototype.get.apply(this, arguments);\n\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\tdelete values.partials;\n\t}\n\treturn values;\n};\n\n/**\n *  Returns the real and imaginary components based\n *  on the oscillator type.\n *  @returns {Array} [real, imaginary]\n *  @private\n */\nTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\tvar fftSize = 4096;\n\tvar periodicWaveSize = fftSize / 2;\n\n\tvar real = new Float32Array(periodicWaveSize);\n\tvar imag = new Float32Array(periodicWaveSize);\n\n\tvar partialCount = 1;\n\tif (type === Tone.Oscillator.Type.Custom){\n\t\tpartialCount = this._partials.length + 1;\n\t\tthis._partialCount = this._partials.length;\n\t\tperiodicWaveSize = partialCount;\n\t} else {\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\tif (partial){\n\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\ttype = partial[1];\n\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tthis._partialCount = 0;\n\t\t}\n\t\tthis._partials = [];\n\t}\n\n\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\tvar piFactor = 2 / (n * Math.PI);\n\t\tvar b;\n\t\tswitch (type){\n\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\tif (n & 1){\n\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t} else {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\tb = this._partials[n - 1];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t}\n\t\tif (b !== 0){\n\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t} else {\n\t\t\treal[n] = 0;\n\t\t\timag[n] = 0;\n\t\t}\n\t}\n\treturn [real, imag];\n};\n\n/**\n *  Compute the inverse FFT for a given phase.\n *  @param  {Float32Array}  real\n *  @param  {Float32Array}  imag\n *  @param  {NormalRange}  phase\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\tvar sum = 0;\n\tvar len = real.length;\n\tfor (var i = 0; i < len; i++){\n\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t}\n\treturn sum;\n};\n\n/**\n *  Returns the initial value of the oscillator.\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._getInitialValue = function(){\n\tvar coefs = this._getRealImaginary(this._type, 0);\n\tvar real = coefs[0];\n\tvar imag = coefs[1];\n\tvar maxValue = 0;\n\tvar twoPi = Math.PI * 2;\n\t//check for peaks in 8 places\n\tfor (var i = 0; i < 8; i++){\n\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t}\n\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n};\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.Oscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.Oscillator#\n * @type {Degrees}\n * @name phase\n * @example\n * osc.phase = 180; //flips the phase of the oscillator\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase * (180 / Math.PI);\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t//reset the type\n\t\tthis.type = this._type;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._oscillator !== null){\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t}\n\tthis._wave = null;\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.Oscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n *  @extends {Tone}\n *  @param {Time=} delayTime The delay applied to the incoming signal.\n *  @param {Time=} maxDelay The maximum delay time.\n */\nTone.Delay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"maxDelay\"], Tone.Delay);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * The maximum delay time initialized with the node\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._maxDelay = Math.max(this.toSeconds(options.maxDelay), this.toSeconds(options.delayTime));\n\t\n\t/**\n\t *  The native delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delayNode = this.input = this.output = this.context.createDelay(this._maxDelay);\n\n\t/**\n\t *  The amount of time the incoming signal is\n\t *  delayed.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Param({\n\t\t\"param\" : this._delayNode.delayTime,\n\t\t\"units\" : Tone.Type.Time,\n\t\t\"value\" : options.delayTime\n\t});\n\n\tthis._readOnly(\"delayTime\");\n};\n\nTone.extend(Tone.Delay, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Delay.defaults = {\n\t\"maxDelay\" : 1,\n\t\"delayTime\" : 0\n};\n\n/**\n * The maximum delay time. This cannot be changed. The value is passed into the constructor.\n * @memberof Tone.Delay#\n * @type {Time}\n * @name maxDelay\n * @readOnly\n */\nObject.defineProperty(Tone.Delay.prototype, \"maxDelay\", {\n\tget : function(){\n\t\treturn this._maxDelay;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Delay}  this\n */\nTone.Delay.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._delayNode.disconnect();\n\tthis._delayNode = null;\n\tthis._writable(\"delayTime\");\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.Delay;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *\t@class  Tone.Split splits an incoming signal into left and right channels.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge.\n *  @example\n * var split = new Tone.Split();\n * stereoSignal.connect(split);\n */\nTone.Split = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, channels);\n\n\t/**\n\t *  @type {ChannelSplitterNode}\n\t *  @private\n\t */\n\tthis._splitter = this.input = this.context.createChannelSplitter(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.output[i] = new Tone.Gain();\n\t\tTone.connect(this._splitter, this.output[i], i, 0);\n\t\tthis.output[i].channelCount = 1;\n\t\tthis.output[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  Left channel output.\n\t *  Alias for <code>output[0]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.left = this.output[0];\n\n\t/**\n\t *  Right channel output.\n\t *  Alias for <code>output[1]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.right = this.output[1];\n};\n\nTone.extend(Tone.Split, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Split} this\n */\nTone.Split.prototype.dispose = function(){\n\tthis.output.forEach(function(output){\n\t\toutput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.disconnect();\n\tthis.left = null;\n\tthis.right = null;\n\tthis._splitter = null;\n\treturn this;\n};\n\nexport default Tone.Split;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../core/Timeline\";\nimport \"../shim/AudioContext\";\n\nvar AudioContextProperties = [\"baseLatency\", \"destination\", \"currentTime\", \"sampleRate\", \"listener\", \"state\"];\nvar AudioContextMethods = [\"suspend\", \"close\", \"resume\", \"getOutputTimestamp\", \"createMediaElementSource\", \"createMediaStreamSource\", \"createMediaStreamDestination\", \"createBuffer\", \"decodeAudioData\", \"createBufferSource\", \"createConstantSource\", \"createGain\", \"createDelay\", \"createBiquadFilter\", \"createIIRFilter\", \"createWaveShaper\", \"createPanner\", \"createConvolver\", \"createDynamicsCompressor\", \"createAnalyser\", \"createScriptProcessor\", \"createStereoPanner\", \"createOscillator\", \"createPeriodicWave\", \"createChannelSplitter\", \"createChannelMerger\", \"audioWorklet\"];\n\n/**\n *  @class Wrapper around the native AudioContext.\n *  @extends {Tone.Emitter}\n *  @param {AudioContext=} context optionally pass in a context\n */\nTone.Context = function(){\n\n\tTone.Emitter.call(this);\n\n\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\tif (!options.context){\n\t\toptions.context = new Tone.global.AudioContext();\n\t\tif (!options.context){\n\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t}\n\t}\n\tthis._context = options.context;\n\t//make sure it's not an AudioContext wrapper\n\twhile (this._context.rawContext){\n\t\tthis._context = this._context.rawContext;\n\t}\n\n\t// extend all of the properties\n\tAudioContextProperties.forEach(function(prop){\n\t\tthis._defineProperty(this._context, prop);\n\t}.bind(this));\n\t// extend all of the methods\n\tAudioContextMethods.forEach(function(method){\n\t\tthis._defineMethod(this._context, method);\n\t}.bind(this));\n\n\t/**\n\t *  The default latency hint\n\t *  @type  {String}\n\t *  @private\n\t */\n\tthis._latencyHint = options.latencyHint;\n\n\t/**\n\t *  An object containing all of the constants AudioBufferSourceNodes\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._constants = {};\n\n\t///////////////////////////////////////////////////////////////////////\n\t// WORKER\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The amount of time events are scheduled\n\t *  into the future\n\t *  @type  {Number}\n\t */\n\tthis.lookAhead = options.lookAhead;\n\n\t/**\n\t *  A reference to the actual computed update interval\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._computedUpdateInterval = 0;\n\n\t/**\n\t *  A reliable callback method\n\t *  @private\n\t *  @type  {Ticker}\n\t */\n\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t///////////////////////////////////////////////////////////////////////\n\t// TIMEOUTS\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All of the setTimeout events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._timeouts = new Tone.Timeline();\n\n\t/**\n\t *  The timeout id counter\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._timeoutIds = 0;\n\n\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t//forward state change events\n\tthis._context.onstatechange = function(e){\n\t\tthis.emit(\"statechange\", e);\n\t}.bind(this);\n};\n\nTone.extend(Tone.Context, Tone.Emitter);\nTone.Emitter.mixin(Tone.Context);\n\n/**\n * defaults\n * @static\n * @type {Object}\n */\nTone.Context.defaults = {\n\t\"clockSource\" : \"worker\",\n\t\"latencyHint\" : \"interactive\",\n\t\"lookAhead\" : 0.1,\n\t\"updateInterval\" : 0.03\n};\n\n/**\n * Is an instanceof Tone.Context\n * @type {Boolean}\n */\nTone.Context.prototype.isContext = true;\n\n/**\n *  Define a property on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineProperty = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop];\n\t\t\t},\n\t\t\t\"set\" : function(val){\n\t\t\t\tcontext[prop] = val;\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  Define a method on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineMethod = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop].bind(context);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  The current audio context time\n *  @return  {Number}\n */\nTone.Context.prototype.now = function(){\n\treturn this._context.currentTime + this.lookAhead;\n};\n\n/**\n *  The audio output destination. Alias for Tone.Master\n *  @readyOnly\n *  @type  {Tone.Master}\n */\nObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\"get\" : function(){\n\t\tif (!this.master){\n\t\t\treturn this._context.destination;\n\t\t} else {\n\t\t\treturn this.master;\n\t\t}\n\t}\n});\n\n/**\n *  Starts the audio context from a suspended state. This is required\n *  to initially start the AudioContext.\n *  @return  {Promise}\n */\nTone.Context.prototype.resume = function(){\n\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\treturn this._context.resume();\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n};\n\n/**\n *  Promise which is invoked when the context is running.\n *  Tries to resume the context if it's not started.\n *  @return  {Promise}\n */\nTone.Context.prototype.close = function(){\n\tvar closePromise = Promise.resolve();\n\t//never close the global Tone.Context\n\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\tclosePromise = this.rawContext.close();\n\t}\n\treturn closePromise.then(function(){\n\t\tTone.Context.emit(\"close\", this);\n\t}.bind(this));\n};\n\n/**\n *  Generate a looped buffer at some constant value.\n *  @param  {Number}  val\n *  @return  {BufferSourceNode}\n */\nTone.Context.prototype.getConstant = function(val){\n\tif (this._constants[val]){\n\t\treturn this._constants[val];\n\t} else {\n\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\tvar constant = this._context.createBufferSource();\n\t\tconstant.channelCount = 1;\n\t\tconstant.channelCountMode = \"explicit\";\n\t\tconstant.buffer = buffer;\n\t\tconstant.loop = true;\n\t\tconstant.start(0);\n\t\tthis._constants[val] = constant;\n\t\treturn constant;\n\t}\n};\n\n/**\n *  The private loop which keeps track of the context scheduled timeouts\n *  Is invoked from the clock source\n *  @private\n */\nTone.Context.prototype._timeoutLoop = function(){\n\tvar now = this.now();\n\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\tthis._timeouts.shift().callback();\n\t}\n};\n\n/**\n *  A setTimeout which is gaurenteed by the clock source.\n *  Also runs in the offline context.\n *  @param  {Function}  fn       The callback to invoke\n *  @param  {Seconds}    timeout  The timeout in seconds\n *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n */\nTone.Context.prototype.setTimeout = function(fn, timeout){\n\tthis._timeoutIds++;\n\tvar now = this.now();\n\tthis._timeouts.add({\n\t\t\"callback\" : fn,\n\t\t\"time\" : now + timeout,\n\t\t\"id\" : this._timeoutIds\n\t});\n\treturn this._timeoutIds;\n};\n\n/**\n *  Clears a previously scheduled timeout with Tone.context.setTimeout\n *  @param  {Number}  id  The ID returned from setTimeout\n *  @return  {Tone.Context}  this\n */\nTone.Context.prototype.clearTimeout = function(id){\n\tthis._timeouts.forEach(function(event){\n\t\tif (event.id === id){\n\t\t\tthis.remove(event);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n *  How often the Web Worker callback is invoked.\n *  This number corresponds to how responsive the scheduling\n *  can be. Context.updateInterval + Context.lookAhead gives you the\n *  total latency between scheduling an event and hearing it.\n *  @type {Number}\n *  @memberOf Tone.Context#\n *  @name updateInterval\n */\nObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._ticker.updateInterval = interval;\n\t}\n});\n\n/**\n *  The unwrapped AudioContext.\n *  @type {AudioContext}\n *  @memberOf Tone.Context#\n *  @name rawContext\n *  @readOnly\n */\nObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\"get\" : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n *  \"timeout\" (setTimeout), or \"offline\" (none).\n *  @type {String}\n *  @memberOf Tone.Context#\n *  @name clockSource\n */\nObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._ticker.type = type;\n\t}\n});\n\n/**\n *  The type of playback, which affects tradeoffs between audio\n *  output latency and responsiveness.\n *\n *  In addition to setting the value in seconds, the latencyHint also\n *  accepts the strings \"interactive\" (prioritizes low latency),\n *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n *  @type {String|Seconds}\n *  @memberOf Tone.Context#\n *  @name latencyHint\n *  @example\n * //set the lookAhead to 0.3 seconds\n * Tone.context.latencyHint = 0.3;\n */\nObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\"get\" : function(){\n\t\treturn this._latencyHint;\n\t},\n\t\"set\" : function(hint){\n\t\tvar lookAhead = hint;\n\t\tthis._latencyHint = hint;\n\t\tif (Tone.isString(hint)){\n\t\t\tswitch (hint){\n\t\t\t\tcase \"interactive\" :\n\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\" :\n\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\" :\n\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fastest\" :\n\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAhead;\n\t\tthis.updateInterval = lookAhead/3;\n\t}\n});\n\n/**\n *  Unlike other dispose methods, this returns a Promise\n *  which executes when the context is closed and disposed\n *  @returns {Promise} this\n */\nTone.Context.prototype.dispose = function(){\n\treturn this.close().then(function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._ticker.dispose();\n\t\tthis._ticker = null;\n\t\tthis._timeouts.dispose();\n\t\tthis._timeouts = null;\n\t\tfor (var con in this._constants){\n\t\t\tthis._constants[con].disconnect();\n\t\t}\n\t\tthis._constants = null;\n\t}.bind(this));\n};\n\n/**\n * @class A class which provides a reliable callback using either\n *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n * @private\n */\nvar Ticker = function(callback, type, updateInterval){\n\n\t/**\n\t * Either \"worker\" or \"timeout\"\n\t * @type {String}\n\t * @private\n\t */\n\tthis._type = type;\n\n\t/**\n\t * The update interval of the worker\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._updateInterval = updateInterval;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t//create the clock source for the first time\n\tthis._createClock();\n};\n\n/**\n * The possible ticker types\n * @private\n * @type {Object}\n */\nTicker.Type = {\n\t\"Worker\" : \"worker\",\n\t\"Timeout\" : \"timeout\",\n\t\"Offline\" : \"offline\"\n};\n\n/**\n *  Generate a web worker\n *  @return  {WebWorker}\n *  @private\n */\nTicker.prototype._createWorker = function(){\n\n\t//URL Shim\n\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\tvar blob = new Blob([\n\t\t//the initial timeout time\n\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t//onmessage callback\n\t\t\"self.onmessage = function(msg){\" +\n\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\"};\" +\n\t\t//the tick function which posts a message\n\t\t//and schedules a new tick\n\t\t\"function tick(){\" +\n\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\"\tself.postMessage('tick');\" +\n\t\t\"}\" +\n\t\t//call tick initially\n\t\t\"tick();\"\n\t]);\n\tvar blobUrl = URL.createObjectURL(blob);\n\tvar worker = new Worker(blobUrl);\n\n\tworker.onmessage = this._callback.bind(this);\n\n\tthis._worker = worker;\n};\n\n/**\n * Create a timeout loop\n * @private\n */\nTicker.prototype._createTimeout = function(){\n\tthis._timeout = setTimeout(function(){\n\t\tthis._createTimeout();\n\t\tthis._callback();\n\t}.bind(this), this._updateInterval * 1000);\n};\n\n/**\n * Create the clock source.\n * @private\n */\nTicker.prototype._createClock = function(){\n\tif (this._type === Ticker.Type.Worker){\n\t\ttry {\n\t\t\tthis._createWorker();\n\t\t} catch (e){\n\t\t\t// workers not supported, fallback to timeout\n\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\tthis._createClock();\n\t\t}\n\t} else if (this._type === Ticker.Type.Timeout){\n\t\tthis._createTimeout();\n\t}\n};\n\n/**\n * @memberOf Ticker#\n * @type {Number}\n * @name updateInterval\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n});\n\n/**\n * The type of the ticker, either a worker or a timeout\n * @memberOf Ticker#\n * @type {Number}\n * @name type\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"type\", {\n\t\"get\" : function(){\n\t\treturn this._type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n});\n\n/**\n * Clean up the current clock source\n * @private\n */\nTicker.prototype._disposeClock = function(){\n\tif (this._timeout){\n\t\tclearTimeout(this._timeout);\n\t\tthis._timeout = null;\n\t}\n\tif (this._worker){\n\t\tthis._worker.terminate();\n\t\tthis._worker.onmessage = null;\n\t\tthis._worker = null;\n\t}\n};\n\n/**\n * Clean up\n * @private\n */\nTicker.prototype.dispose = function(){\n\tthis._disposeClock();\n\tthis._callback = null;\n};\n\n// set the audio context initially, and if one is not already created\nif (Tone.supported && !Tone.initialized){\t\t\t\n\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t}\n\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t// log on first initialization\n\t// allow optional silencing of this log\n\tif (!Tone.global.TONE_SILENCE_LOGGING){\n\t\tvar prefix = \"v\";\n\t\tif (Tone.version === \"dev\"){\n\t\t\tprefix = \"\";\n\t\t}\n\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t}\n} else if (!Tone.supported && !Tone.global.TONE_SILENCE_LOGGING){\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\"This browser does not support Tone.js\");\n}\n\nexport default Tone.Context;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Master\";\n\n/**\n *  @class  Base-class for all instruments\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n */\nTone.Instrument = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output and volume triming node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t * @type {Array<Number>}\n\t * @private\n\t */\n\tthis._scheduledEvents = [];\n};\n\nTone.extend(Tone.Instrument, Tone.AudioNode);\n\n/**\n *  the default attributes\n *  @type {object}\n */\nTone.Instrument.defaults = {\n\t/** the volume of the output in decibels */\n\t\"volume\" : 0\n};\n\n/**\n *  @abstract\n *  @param {string|number} note the note to trigger\n *  @param {Time} [time=now] the time to trigger the ntoe\n *  @param {number} [velocity=1] the velocity to trigger the note\n */\nTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n/**\n *  @abstract\n *  @param {Time} [time=now] when to trigger the release\n */\nTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * instrument.sync()\n * //schedule 3 notes when the transport first starts\n * instrument.triggerAttackRelease('C4', '8n', 0)\n * instrument.triggerAttackRelease('E4', '8n', '8n')\n * instrument.triggerAttackRelease('G4', '8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n * Wrap the given method so that it can be synchronized\n * @param {String} method Which method to wrap and sync\n * @param  {Number} timePosition What position the time argument appears in\n * @private\n */\nTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\tthis[method] = function(){\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\tvar time = args[timePosition];\n\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\targs[timePosition] = t;\n\t\t\toriginalMethod.apply(this, args);\n\t\t}.bind(this), time);\n\t\tthis._scheduledEvents.push(id);\n\t}.bind(this);\n};\n\n/**\n * Unsync the instrument from the Transport\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.unsync = function(){\n\tthis._scheduledEvents.forEach(function(id){\n\t\tTone.Transport.clear(id);\n\t});\n\tthis._scheduledEvents = [];\n\tif (this._original_triggerAttack){\n\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\tthis.triggerRelease = this._original_triggerRelease;\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release after the duration.\n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} duration How long the note should be held for before\n *                          triggering the release. This value must be greater than 0.\n *  @param {Time} [time=now]  When the note should be triggered.\n *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n *  @returns {Tone.Instrument} this\n *  @example\n * //trigger \"C4\" for the duration of an 8th note\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(note, time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable([\"volume\"]);\n\tthis.volume = null;\n\tthis.unsync();\n\tthis._scheduledEvents = null;\n\treturn this;\n};\n\nexport default Tone.Instrument;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n *         See Tone.GainToAudio.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n *  var a2g = new Tone.AudioToGain();\n */\nTone.AudioToGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn (x + 1) / 2;\n\t});\n};\n\nTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.AudioToGain} this\n */\nTone.AudioToGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.AudioToGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/EqualPowerGain\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n * @class  Tone.Crossfade provides equal power fading between two inputs.\n *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n *\n * @constructor\n * @extends {Tone.AudioNode}\n * @param {NormalRange} [initialFade=0.5]\n * @example\n * var crossFade = new Tone.CrossFade(0.5);\n * //connect effect A to crossfade from\n * //effect output 0 to crossfade input 0\n * effectA.connect(crossFade, 0, 0);\n * //connect effect B to crossfade from\n * //effect output 0 to crossfade input 1\n * effectB.connect(crossFade, 0, 1);\n * crossFade.fade.value = 0;\n * // ^ only effectA is output\n * crossFade.fade.value = 1;\n * // ^ only effectB is output\n * crossFade.fade.value = 0.5;\n * // ^ the two signals are mixed equally.\n */\nTone.CrossFade = function(initialFade){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 1);\n\n\t/**\n\t *  Alias for <code>input[0]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.a = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.b = this.input[1] = new Tone.Gain();\n\n\t/**\n\t * \tThe mix between the two inputs. A fade value of 0\n\t * \twill output 100% <code>input[0]</code> and\n\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerA = new Tone.EqualPowerGain();\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerB = new Tone.EqualPowerGain();\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone}\n\t */\n\tthis._one = this.context.getConstant(1);\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._invert = new Tone.Subtract();\n\n\t//connections\n\tthis.a.connect(this.output);\n\tthis.b.connect(this.output);\n\tthis.fade.chain(this._equalPowerB, this.b.gain);\n\tTone.connect(this._one, this._invert, 0, 0);\n\tthis.fade.connect(this._invert, 0, 1);\n\tthis._invert.chain(this._equalPowerA, this.a.gain);\n\tthis._readOnly(\"fade\");\n};\n\nTone.extend(Tone.CrossFade, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.CrossFade} this\n */\nTone.CrossFade.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"fade\");\n\tthis._equalPowerA.dispose();\n\tthis._equalPowerA = null;\n\tthis._equalPowerB.dispose();\n\tthis._equalPowerB = null;\n\tthis.fade.dispose();\n\tthis.fade = null;\n\tthis._invert.dispose();\n\tthis._invert = null;\n\tthis._one = null;\n\tthis.a.dispose();\n\tthis.a = null;\n\tthis.b.dispose();\n\tthis.b = null;\n\treturn this;\n};\n\nexport default Tone.CrossFade;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @extends {Tone}\n *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n */\nTone.Timeline = function(){\n\n\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\tTone.call(this);\n\n\t/**\n\t *  The array of scheduled timeline events\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._timeline = [];\n\n\t/**\n\t *  The memory of the timeline, i.e.\n\t *  how many events in the past it will retain\n\t *  @type {Positive}\n\t */\n\tthis.memory = options.memory;\n};\n\nTone.extend(Tone.Timeline);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Timeline.defaults = {\n\t\"memory\" : Infinity\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.Timeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._timeline.length;\n\t}\n});\n\n/**\n *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n *  @param  {Object}  event  The event object to insert into the\n *                           timeline.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.add = function(event){\n\t//the event needs to have a time attribute\n\tif (Tone.isUndef(event.time)){\n\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar index = this._search(event.time);\n\tthis._timeline.splice(index + 1, 0, event);\n\t//if the length is more than the memory, remove the previous ones\n\tif (this.length > this.memory){\n\t\tvar diff = this.length - this.memory;\n\t\tthis._timeline.splice(0, diff);\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event object to remove from the list.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.remove = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index !== -1){\n\t\tthis._timeline.splice(index, 1);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the nearest event whose time is less than or equal to the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object set after that time.\n */\nTone.Timeline.prototype.get = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index !== -1){\n\t\treturn this._timeline[index];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Return the first event in the timeline without removing it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.peek = function(){\n\treturn this._timeline[0];\n};\n\n/**\n *  Return the first event in the timeline and remove it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.shift = function(){\n\treturn this._timeline.shift();\n};\n\n/**\n *  Get the event which is scheduled after the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object after the given time\n */\nTone.Timeline.prototype.getAfter = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index + 1 < this._timeline.length){\n\t\treturn this._timeline[index + 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Get the event before the event at the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object before the given time\n */\nTone.Timeline.prototype.getBefore = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar len = this._timeline.length;\n\t//if it's after the last item, return the last item\n\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\treturn this._timeline[len - 1];\n\t}\n\tvar index = this._search(time, comparator);\n\tif (index - 1 >= 0){\n\t\treturn this._timeline[index - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Cancel events after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancel = function(after){\n\tif (this._timeline.length > 1){\n\t\tvar index = this._search(after);\n\t\tif (index >= 0){\n\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t//get the first item with that time\n\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t} else {\n\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._timeline = [];\n\t\t}\n\t} else if (this._timeline.length === 1){\n\t\t//the first item's time\n\t\tif (this._timeline[0].time >= after){\n\t\t\tthis._timeline = [];\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events before or equal to the given time.\n *  @param  {Number}  time  The time to cancel before.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancelBefore = function(time){\n\tvar index = this._search(time);\n\tif (index >= 0){\n\t\tthis._timeline = this._timeline.slice(index + 1);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the previous event if there is one. null otherwise\n * @param  {Object} event The event to find the previous one of\n * @return {Object}       The event right before the given event\n */\nTone.Timeline.prototype.previousEvent = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index > 0){\n\t\treturn this._timeline[index-1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Does a binary search on the timeline array and returns the\n *  nearest event index whose time is after or equal to the given time.\n *  If a time is searched before the first index in the timeline, -1 is returned.\n *  If the time is after the end, the index of the last item is returned.\n *  @param  {Number}  time\n *  @param  {String}  comparator Which value in the object to compare\n *  @return  {Number} the index in the timeline array\n *  @private\n */\nTone.Timeline.prototype._search = function(time, comparator){\n\tif (this._timeline.length === 0){\n\t\treturn -1;\n\t}\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar beginning = 0;\n\tvar len = this._timeline.length;\n\tvar end = len;\n\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tvar event = this._timeline[midPoint];\n\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\tif (event[comparator] === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] > time){\n\t\t\t//search lower\n\t\t\tend = midPoint;\n\t\t} else {\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/**\n *  Internal iterator. Applies extra safety checks for\n *  removing items from the array.\n *  @param  {Function}  callback\n *  @param  {Number=}    lowerBound\n *  @param  {Number=}    upperBound\n *  @private\n */\nTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\tcallback.call(this, event);\n\t}.bind(this));\n};\n\n/**\n *  Iterate over everything in the array\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEach = function(callback){\n\tthis._iterate(callback);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or before the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array after the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array between the startTime and endTime. \n *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n *  range = [startTime, endTime). \n *  @param  {Number}  startTime The time to check if items are before\n *  @param  {Number}  endTime The end of the test interval. \n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\tvar lowerBound = this._search(startTime);\n\tvar upperBound = this._search(endTime);\n\tif (lowerBound !== -1 && upperBound !== -1){\n\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\tlowerBound += 1;\n\t\t}\n\t\t//exclusive of the end time\n\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\tupperBound -= 1;\n\t\t}\n\t\tthis._iterate(callback, lowerBound, upperBound);\n\t} else if (lowerBound === -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or after the given time. Similar to\n *  forEachAfter, but includes the item(s) at the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\t//work backwards until the event time is less than time\n\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\tlowerBound--;\n\t}\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at the given time\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(function(event){\n\t\t\tif (event.time === time){\n\t\t\t\tcallback.call(this, event);\n\t\t\t}\n\t\t}, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Timeline}  this\n */\nTone.Timeline.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._timeline = null;\n\treturn this;\n};\n\nexport default Tone.Timeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  This is an abstract base class for other monophonic instruments to \n *          extend. IMPORTANT: It does not make any sound on its own and\n *          shouldn't be directly instantiated.\n *\n *  @constructor\n *  @abstract\n *  @extends {Tone.Instrument}\n */\nTone.Monophonic = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The glide time between notes. \n\t *  @type {Time}\n\t */\n\tthis.portamento = options.portamento;\n};\n\nTone.extend(Tone.Monophonic, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Monophonic.defaults = {\n\t\"portamento\" : 0\n};\n\n/**\n *  Trigger the attack of the note optionally with a given velocity. \n *  \n *  \n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} [time=now]     When the note should start.\n *  @param  {number} [velocity=1] velocity The velocity scaler \n *                                determines how \"loud\" the note \n *                                will be triggered.\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerAttack(\"C4\");\n *  @example\n * //trigger the note a half second from now at half velocity\n * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n */\nTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\tthis.log(\"triggerAttack\", note, time, velocity);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeAttack(time, velocity);\n\tthis.setNote(note, time);\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the envelope\n *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerRelease();\n */\nTone.Monophonic.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.Monophonic.prototype.getLevelAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this.envelope.getValueAtTime(time);\n};\n\n/**\n *  Set the note at the given time. If no time is given, the note\n *  will set immediately. \n *  @param {Frequency} note The note to change to.\n *  @param  {Time} [time=now] The time when the note should be set. \n *  @returns {Tone.Monophonic} this\n * @example\n * //change to F#6 in one quarter note from now.\n * synth.setNote(\"F#6\", \"+4n\");\n * @example\n * //change to Bb4 right now\n * synth.setNote(\"Bb4\");\n */\nTone.Monophonic.prototype.setNote = function(note, time){\n\ttime = this.toSeconds(time);\n\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\tvar portTime = this.toSeconds(this.portamento);\n\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t} else {\n\t\tthis.frequency.setValueAtTime(note, time);\n\t}\n\treturn this;\n};\n\nexport default Tone.Monophonic;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Performs a linear scaling on an input signal.\n *          Scales a NormalRange input to between\n *          outputMin and outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0. \n *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n *  @example\n * var scale = new Tone.Scale(50, 100);\n * var signal = new Tone.Signal(0.5).connect(scale);\n * //the output of scale equals 75\n */\nTone.Scale = function(outputMin, outputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMin = Tone.defaultArg(outputMin, 0);\n\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMax = Tone.defaultArg(outputMax, 1);\n\n\t/** \n\t *  @private\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(1);\n\t\n\t/** \n\t *  @private\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._add = this.output = new Tone.Add(0);\n\n\tthis._scale.connect(this._add);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Scale, Tone.SignalBase);\n\n/**\n * The minimum output value. This number is output when \n * the value input value is 0. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Scale.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._outputMin;\n\t},\n\tset : function(min){\n\t\tthis._outputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum output value. This number is output when \n * the value input value is 1. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Scale.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._outputMax;\n\t},\n\tset : function(max){\n\t\tthis._outputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Scale.prototype._setRange = function(){\n\tthis._add.value = this._outputMin;\n\tthis._scale.value = this._outputMax - this._outputMin;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Scale} this\n */\nTone.Scale.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._add.dispose();\n\tthis._add = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\treturn this;\n}; \n\nexport default Tone.Scale;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Tone.Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nTone.Volume = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * the output node\n\t * @type {GainNode}\n\t * @private\n\t */\n\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t/**\n\t * The unmuted volume\n\t * @type {Decibels}\n\t * @private\n\t */\n\tthis._unmutedVolume = options.volume;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this.output.gain;\n\n\tthis._readOnly(\"volume\");\n\n\t//set the mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Volume, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Volume.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Volume#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * volume.mute = true;\n */\nObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this.volume.value === -Infinity;\n\t},\n\tset : function(mute){\n\t\tif (!this.mute && mute){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Volume} this\n */\nTone.Volume.prototype.dispose = function(){\n\tthis.input.dispose();\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis.volume.dispose();\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.Volume;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n *         it's own class is that many browsers optimize out Tone.Signal\n *         with a value of 0 and will not process nodes further down the graph.\n *  @extends {Tone.SignalBase}\n */\nTone.Zero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  The gain node\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gain = this.input = this.output = new Tone.Gain();\n\n\tTone.connect(this.context.getConstant(0), this._gain);\n};\n\nTone.extend(Tone.Zero, Tone.SignalBase);\n\n/**\n *  clean up\n *  @return  {Tone.Zero}  this\n */\nTone.Zero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._gain.dispose();\n\tthis._gain = null;\n\treturn this;\n};\n\nexport default Tone.Zero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Add a signal and a number or two signals. When no value is\n *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n *         and <code>input[1]</code>. If a value is passed into the constructor, \n *         the it will be added to the input.\n *  \n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value If no value is provided, Tone.Add will sum the first\n *                         and second inputs. \n *  @example\n * var signal = new Tone.Signal(2);\n * var add = new Tone.Add(2);\n * signal.connect(add);\n * //the output of add equals 4\n *  @example\n * //if constructed with no arguments\n * //it will add the first and second inputs\n * var add = new Tone.Add();\n * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n * //the output of add equals 7. \n */\nTone.Add = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\n\tthis._param.connect(this._sum);\n};\n\nTone.extend(Tone.Add, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.Add} this\n */\nTone.Add.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._sum.dispose();\n\tthis._sum = null;\n\treturn this;\n}; \n\nexport default Tone.Add;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for all Signals. Used Internally.\n *\n *  @constructor\n *  @extends {Tone}\n */\nTone.SignalBase = function(){\n\tTone.AudioNode.call(this);\n};\n\nTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n/**\n *  When signals connect to other signals or AudioParams,\n *  they take over the output value of that signal or AudioParam.\n *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n *\n *  @override\n *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n *  @param {number} [outputNumber=0] The output number to connect from.\n *  @param {number} [inputNumber=0] The input number to connect to.\n *  @returns {Tone.SignalBase} this\n */\nTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t//zero it out so that the signal can have full control\n\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t//cancel changes\n\t\tnode._param.cancelScheduledValues(0);\n\t\t//reset the value\n\t\tnode._param.setValueAtTime(0, 0);\n\t\t//mark the value as overridden\n\t\tnode.overridden = true;\n\t} else if (node instanceof AudioParam){\n\t\tnode.cancelScheduledValues(0);\n\t\tnode.setValueAtTime(0, 0);\n\t}\n\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\treturn this;\n};\n\nexport default Tone.SignalBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../core/Gain\";\n\n/**\n *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n *          an audio signal as the input and will apply the envelope to the amplitude\n *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n *  @constructor\n *  @extends {Tone.Envelope}\n *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n *                               0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *  @example\n * var ampEnv = new Tone.AmplitudeEnvelope({\n * \t\"attack\": 0.1,\n * \t\"decay\": 0.2,\n * \t\"sustain\": 1.0,\n * \t\"release\": 0.8\n * }).toMaster();\n * //create an oscillator and connect it\n * var osc = new Tone.Oscillator().connect(ampEnv).start();\n * //trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n */\nTone.AmplitudeEnvelope = function(){\n\n\tTone.Envelope.apply(this, arguments);\n\n\t/**\n\t *  the input node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\tthis._sig.connect(this.output.gain);\n};\n\nTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n/**\n *  Clean up\n *  @return  {Tone.AmplitudeEnvelope}  this\n */\nTone.AmplitudeEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.AmplitudeEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around the native BufferSourceNode.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.BufferSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"buffer\", \"onload\"], Tone.BufferSource);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The time that the buffer was started.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  An additional flag if the actual BufferSourceNode\n\t *  has been started. b/c stopping an unstarted buffer\n\t *  will throw it into an invalid state\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStarted = false;\n\n\t/**\n\t *  Flag if the source has already been stopped\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStopped = false;\n\n\t/**\n\t *  The time that the buffer is scheduled to stop.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the BufferSource\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The buffer source\n\t *  @type  {AudioBufferSourceNode}\n\t *  @private\n\t */\n\tthis._source = this.context.createBufferSource();\n\tTone.connect(this._source, this._gainNode);\n\tthis._source.onended = this._onended.bind(this);\n\n\t/**\n\t * The private buffer instance\n\t * @type {Tone.Buffer}\n\t * @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.buffer, options.onload);\n\n\t/**\n\t *  The playbackRate of the buffer\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.playbackRate = new Tone.Param({\n\t\tparam : this._source.playbackRate,\n\t\tunits : Tone.Type.Positive,\n\t\tvalue : options.playbackRate\n\t});\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t * @type {String}\n\t */\n\tthis.curve = options.curve;\n\n\t/**\n\t * The onended timeout\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._onendedTimeout = -1;\n\n\t//set some values initially\n\tthis.loop = options.loop;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n};\n\nTone.extend(Tone.BufferSource, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.BufferSource.defaults = {\n\t\"onended\" : Tone.noOp,\n\t\"onload\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0,\n\t\"curve\" : \"linear\",\n\t\"playbackRate\" : 1\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.BufferSource#\n *  @name state\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.BufferSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && \n\t\tthis._startTime <= time && \n\t\t(this._stopTime === -1 || time < this._stopTime) && \n\t\t!this._sourceStopped){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n *  Start the buffer\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.start = function(time, offset, duration, gain){\n\tthis.log(\"start\", time, offset, duration, gain);\n\tthis.assert(this._startTime === -1, \"can only be started once\");\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\t//if it's a loop the default offset is the loopstart point\n\tif (this.loop){\n\t\toffset = Tone.defaultArg(offset, this.loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\toffset = this.toSeconds(offset);\n\t//make sure the offset is not less than 0\n\toffset = Math.max(offset, 0);\n\n\tgain = Tone.defaultArg(gain, 1);\n\n\t//apply a fade in envelope\n\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\tif (fadeInTime > 0){\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n\t\t} else {\n\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n\t\t}\n\t} else {\n\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t}\n\n\tthis._startTime = time;\n\n\t//if a duration is given, schedule a stop\n\tif (Tone.isDefined(duration)){\n\t\tvar computedDur = this.toSeconds(duration);\n\t\t//make sure it's never negative\n\t\tcomputedDur = Math.max(computedDur, 0);\n\n\t\tthis.stop(time + computedDur);\n\t}\n\n\t//start the buffer source\n\tif (this.loop){\n\t\t//modify the offset if it's greater than the loop time\n\t\tvar loopEnd = this.loopEnd || this.buffer.duration;\n\t\tvar loopStart = this.loopStart;\n\t\tvar loopDuration = loopEnd - loopStart;\n\t\t//move the offset back\n\t\tif (offset >= loopEnd){\n\t\t\toffset = ((offset - loopStart) % loopDuration) + loopStart;\n\t\t}\n\t}\n\tthis._source.buffer = this.buffer.get();\n\tthis._source.loopEnd = this.loopEnd || this.buffer.duration;\n\tif (offset < this.buffer.duration){\n\t\tthis._sourceStarted = true;\n\t\tthis._source.start(time, offset);\n\t}\n\n\treturn this;\n};\n\n/**\n *  Stop the buffer. \n *  @param  {Time=}  time         The time the buffer should stop.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\n\t//if the event has already been scheduled, clear it\n\tif (this._stopTime !== -1){\n\t\tthis.cancelStop();\n\t}\n\n\t//the fadeOut time\n\tvar fadeOutTime = this.toSeconds(this.fadeOut);\n\n\t//cancel the previous curve\n\tthis._stopTime = time + fadeOutTime;\n\n\tif (fadeOutTime > 0){\n\t\t//start the fade out curve at the given time\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t} else {\n\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t}\n\t} else {\n\t\t//stop any ongoing ramps, and set the value to 0\n\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t}\n\n\tTone.context.clearTimeout(this._onendedTimeout);\n\tthis._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.cancelStop = function(){\n\tif (this._startTime !== -1 && !this._sourceStopped){\n\t\t//cancel the stop envelope\n\t\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);\n\t\tthis.context.clearTimeout(this._onendedTimeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n *  Internal callback when the buffer is ended.\n *  Invokes `onended` and disposes the node.\n *  @private\n */\nTone.BufferSource.prototype._onended = function(){\n\tif (!this._sourceStopped){\n\t\tthis._sourceStopped = true;\n\t\t//allow additional time for the exponential curve to fully decay\n\t\tvar additionalTail = this.curve === \"exponential\" ? this.fadeOut * 2 : 0;\n\t\tif (this._sourceStarted && this._stopTime !== -1){\n\t\t\tthis._source.stop(this._stopTime + additionalTail);\n\t\t}\n\t\tthis.onended(this);\n\n\t\t//dispose the source after it's come to a stop\n\t\tsetTimeout(function(){\n\t\t\t//if it hasn't already been disposed\n\t\t\tif (this._source){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._gainNode.disconnect();\n\t\t\t}\n\t\t}.bind(this), additionalTail * 1000 + 100);\n\t}\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._source.loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._source.loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.BufferSource#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.BufferSource#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._source.loop;\n\t},\n\tset : function(loop){\n\t\tthis._source.loop = loop;\n\t\tthis.cancelStop();\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis._buffer.dispose();\n\t\tthis._buffer = null;\n\t\tthis._startTime = -1;\n\t\tthis.playbackRate = null;\n\t\tTone.context.clearTimeout(this._onendedTimeout);\n\t}\n\treturn this;\n};\n\nexport default Tone.BufferSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n * \t@class  Tone.FeedbackEffect provides a loop between an \n * \t        audio source and its own output. This is a base-class\n * \t        for feedback effects. \n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {NormalRange|Object} [feedback] The initial feedback value.\n */\nTone.FeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.Effect.call(this, options);\n\t\n\t/**\n\t *  the gain which controls the feedback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of signal which is fed back into the effect input. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = this._feedbackGain.gain;\n\n\t//the feedback loop\n\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.FeedbackEffect, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FeedbackEffect.defaults = {\n\t\"feedback\" : 0.125\n};\n\n/**\n *  Clean up. \n *  @returns {Tone.FeedbackEffect} this\n */\nTone.FeedbackEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis._feedbackGain.dispose();\n\tthis._feedbackGain = null;\n\tthis.feedback = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\nimport \"../type/Type\";\n\n/**\n *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n *          and <code>getValueAtTime(time)</code>.\n *\n *  @extends {Tone.Timeline}\n *  @param {String} initial The initial state of the TimelineState. \n *                          Defaults to <code>undefined</code>\n */\nTone.TimelineState = function(initial){\n\n\tTone.Timeline.call(this);\n\n\t/**\n\t *  The initial state\n\t *  @private\n\t *  @type {String}\n\t */\n\tthis._initial = initial;\n};\n\nTone.extend(Tone.TimelineState, Tone.Timeline);\n\n/**\n *  Returns the scheduled state scheduled before or at\n *  the given time.\n *  @param  {Number}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n */\nTone.TimelineState.prototype.getValueAtTime = function(time){\n\tvar event = this.get(time);\n\tif (event !== null){\n\t\treturn event.state;\n\t} else {\n\t\treturn this._initial;\n\t}\n};\n\n/**\n *  Add a state to the timeline.\n *  @param  {String}  state The name of the state to set.\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.TimelineState} this\n */\nTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t//all state changes need to be >= the previous state time\n\t//TODO throw error if time < the previous event time\n\tthis.add({\n\t\t\"state\" : state,\n\t\t\"time\" : time\n\t});\n\treturn this;\n};\n\n/**\n *  Return the event before the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check before\t\t\t\n *  @return  {Object}  The event with the given state before the time\n */\nTone.TimelineState.prototype.getLastState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tfor (var i = index; i >= 0; i--){\n\t\tvar event = this._timeline[i];\n\t\tif (event.state === state){\n\t\t\treturn event;\n\t\t}\n\t}\n};\n\n/**\n *  Return the event after the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check from\n *  @return  {Object}  The event with the given state after the time\n */\nTone.TimelineState.prototype.getNextState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tif (index !== -1){\n\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Tone.TimelineState;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.Emitter gives classes which extend it\n *         the ability to listen for and emit events.\n *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n *         MIT (c) 2011 Jerome Etienne.\n *\n *  @extends {Tone}\n */\nTone.Emitter = function(){\n\tTone.call(this);\n\t/**\n\t *  Contains all of the events.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tthis._events = {};\n};\n\nTone.extend(Tone.Emitter);\n\n/**\n *  Bind a callback to a specific event.\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.on = function(event, callback){\n\t//split the event\n\tvar events = event.split(/\\W+/);\n\tfor (var i = 0; i < events.length; i++){\n\t\tvar eventName = events[i];\n\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\tthis._events[eventName] = [];\n\t\t}\n\t\tthis._events[eventName].push(callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Bind a callback which is only invoked once\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.once = function(event, callback){\n\tvar boundCallback = function(){\n\t\t//invoke the callback\n\t\tcallback.apply(this, arguments);\n\t\tthis.off(event, boundCallback);\n\t}.bind(this);\n\tthis.on(event, boundCallback);\n\treturn this;\n};\n\n/**\n *  Remove the event listener.\n *  @param  {String}    event     The event to stop listening to.\n *  @param  {Function=}  callback  The callback which was bound to\n *                                the event with Tone.Emitter.on.\n *                                If no callback is given, all callbacks\n *                                events are removed.\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.off = function(event, callback){\n\tvar events = event.split(/\\W+/);\n\tfor (var ev = 0; ev < events.length; ev++){\n\t\tevent = events[ev];\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\tthis._events[event] = [];\n\t\t\t} else {\n\t\t\t\tvar eventList = this._events[event];\n\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Invoke all of the callbacks bound to the event\n *  with any arguments passed in.\n *  @param  {String}  event  The name of the event.\n *  @param {...*} args The arguments to pass to the functions listening.\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.emit = function(event){\n\tif (this._events){\n\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\teventList[i].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Add Emitter functions (on/off/emit) to the object\n *  @param  {Object|Function}  object  The object or class to extend.\n *  @returns {Tone.Emitter}\n */\nTone.Emitter.mixin = function(object){\n\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\tobject._events = {};\n\tfor (var i = 0; i < functions.length; i++){\n\t\tvar func = functions[i];\n\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\tobject[func] = emitterFunc;\n\t}\n\treturn Tone.Emitter;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Emitter;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\n/**\n *  AnalyserNode.getFloatTimeDomainData polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AnalyserNode.prototype.getFloatTimeDomainData){\n\t\t//referenced https://github.com/mohayonao/get-float-time-domain-data\n\t\tAnalyserNode.prototype.getFloatTimeDomainData = function(array){\n\t\t\tvar uint8 = new Uint8Array(array.length);\n\t\t\tthis.getByteTimeDomainData(uint8);\n\t\t\tfor (var i = 0; i < uint8.length; i++){\n\t\t\t\tarray[i] = (uint8[i] - 128) / 128;\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\nimport \"../shim/AnalyserNode\";\n\n/**\n *  @class  Wrapper around the native Web Audio's\n *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n *          Extracts FFT or Waveform data from the incoming signal.\n *  @extends {Tone.AudioNode}\n *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.Analyser = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\", \"size\"], Tone.Analyser);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {AnalyserNode}\n\t */\n\tthis._analyser = this.input = this.output = this.context.createAnalyser();\n\n\t/**\n\t *  The analysis type\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The buffer that the FFT data is written to\n\t *  @type {TypedArray}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t//set the values initially\n\tthis.size = options.size;\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.Analyser, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Analyser.defaults = {\n\t\"size\" : 1024,\n\t\"type\" : \"fft\",\n\t\"smoothing\" : 0.8\n};\n\n/**\n *  Possible return types of analyser.getValue()\n *  @enum {String}\n */\nTone.Analyser.Type = {\n\tWaveform : \"waveform\",\n\tFFT : \"fft\"\n};\n\n/**\n *  Run the analysis given the current settings and return the\n *  result as a TypedArray of length [size](#size).\n *  @returns {TypedArray}\n */\nTone.Analyser.prototype.getValue = function(){\n\tif (this._type === Tone.Analyser.Type.FFT){\n\t\tthis._analyser.getFloatFrequencyData(this._buffer);\n\t} else if (this._type === Tone.Analyser.Type.Waveform){\n\t\tthis._analyser.getFloatTimeDomainData(this._buffer);\n\t}\n\treturn this._buffer;\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  @memberOf Tone.Analyser#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Analyser.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.frequencyBinCount;\n\t},\n\tset : function(size){\n\t\t// fftSize is double frequencyBinCount\n\t\tthis._analyser.fftSize = size * 2;\n\t\tthis._buffer = new Float32Array(size);\n\t}\n});\n\n/**\n *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n *  @memberOf Tone.Analyser#\n *  @type {String}\n *  @name type\n */\nObject.defineProperty(Tone.Analyser.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT){\n\t\t\tthrow new TypeError(\"Tone.Analyser: invalid type: \"+type);\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n *  0 represents no time averaging with the last analysis frame.\n *  @memberOf Tone.Analyser#\n *  @type {NormalRange}\n *  @name smoothing\n */\nObject.defineProperty(Tone.Analyser.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._analyser.smoothingTimeConstant;\n\t},\n\tset : function(val){\n\t\tthis._analyser.smoothingTimeConstant = val;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Analyser}  this\n */\nTone.Analyser.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.disconnect();\n\tthis._analyser = null;\n\tthis._buffer = null;\n};\n\nexport default Tone.Analyser;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../source/PulseOscillator\";\nimport \"../source/PWMOscillator\";\nimport \"../source/FMOscillator\";\nimport \"../source/AMOscillator\";\nimport \"../source/FatOscillator\";\n\n/**\n *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n *         into one class. The oscillator class can be changed by setting the `type`.\n *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n *         to a FatOscillator of type \"sawtooth\".\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The initial frequency of the oscillator.\n *  @param {String} type The type of the oscillator.\n *  @example\n *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n */\nTone.OmniOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the type of the oscillator source\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._sourceType = undefined;\n\n\t/**\n\t *  the oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t//set the oscillator\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n\t//set the options\n\tthis.set(options);\n};\n\nTone.extend(Tone.OmniOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.OmniOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"phase\" : 0\n};\n\n/**\n *  @enum {String}\n *  @private\n */\nvar OmniOscType = {\n\tPulse : \"PulseOscillator\",\n\tPWM : \"PWMOscillator\",\n\tOsc : \"Oscillator\",\n\tFM : \"FMOscillator\",\n\tAM : \"AMOscillator\",\n\tFat : \"FatOscillator\"\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._start = function(time){\n\tthis._oscillator.start(time);\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._stop = function(time){\n\tthis._oscillator.stop(time);\n};\n\nTone.OmniOscillator.prototype.restart = function(time){\n\tthis._oscillator.restart(time);\n};\n\n/**\n * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n * when it's not.\n *\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name type\n * @example\n * omniOsc.type = \"pwm\";\n * //modulationFrequency is parameter which is available\n * //only when the type is \"pwm\".\n * omniOsc.modulationFrequency.value = 0.5;\n * @example\n * //an square wave frequency modulated by a sawtooth\n * omniOsc.type = \"fmsquare\";\n * omniOsc.modulationType = \"sawtooth\";\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\tget : function(){\n\t\tvar prefix = \"\";\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\tprefix = \"fm\";\n\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\tprefix = \"am\";\n\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\tprefix = \"fat\";\n\t\t}\n\t\treturn prefix + this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\tthis._oscillator.type = type.substr(3);\n\t\t} else if (type === \"pwm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t} else if (type === \"pulse\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t} else {\n\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t}\n});\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillator.partials;\n\t},\n\tset : function(partials){\n\t\tthis._oscillator.partials = partials;\n\t}\n});\n\n/**\n * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name partialCount\n * @example\n * //set the maximum number of partials\n * osc.partialCount = 0;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillator.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._oscillator.partialCount = partialCount;\n\t}\n});\n\n/**\n *  Set a member/attribute of the oscillator.\n *  @param {Object|String} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.set = function(params, value){\n\t//make sure the type is set first\n\tif (params === \"type\"){\n\t\tthis.type = value;\n\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\tthis.type = params.type;\n\t}\n\t//then set the rest\n\tTone.prototype.set.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.OmniOscillator.prototype.get = function(params){\n\tvar options = this._oscillator.get(params);\n\toptions.type = this.type;\n\treturn options;\n};\n\n/**\n *  connect the oscillator to the frequency and detune signals\n *  @private\n */\nTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\tif (oscType !== this._sourceType){\n\t\tthis._sourceType = oscType;\n\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t//short delay to avoid clicks on the change\n\t\tvar now = this.now();\n\t\tif (this._oscillator !== null){\n\t\t\tvar oldOsc = this._oscillator;\n\t\t\toldOsc.stop(now);\n\t\t\t//dispose the old one\n\t\t\tthis.context.setTimeout(function(){\n\t\t\t\toldOsc.dispose();\n\t\t\t\toldOsc = null;\n\t\t\t}, this.blockTime);\n\t\t}\n\t\tthis._oscillator = new OscillatorConstructor();\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\tthis._oscillator.connect(this.output);\n\t\tif (this.state === Tone.State.Started){\n\t\t\tthis._oscillator.start(now);\n\t\t}\n\t}\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.OmniOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t}\n});\n\n/**\n * The source type names\n * @private\n * @type {Object}\n */\nvar SourceTypeNames = {\n\tPulseOscillator : \"pulse\",\n\tPWMOscillator : \"pwm\",\n\tOscillator : \"oscillator\",\n\tFMOscillator : \"fm\",\n\tAMOscillator : \"am\",\n\tFatOscillator : \"fat\"\n};\n\n/**\n * The source type of the oscillator. \n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name sourceType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n * omniOsc.sourceType // 'fm'\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\tget : function(){\n\t\treturn SourceTypeNames[this._sourceType];\n\t},\n\tset : function(sType){\n\t\t//the basetype defaults to sine\n\t\tvar baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\tbaseType = this._oscillator.type;\n\t\t} \n\n\t\t//set the type\n\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\tthis.type = \"fm\" + baseType;\n\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\tthis.type = \"am\" + baseType;\n\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\tthis.type = \"fat\" + baseType;\n\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\tthis.type = baseType;\n\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n});\n\n/**\n * The base type of the oscillator.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name baseType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n * omniOsc.sourceType // 'fm'\n * omniOsc.baseType //'square'\n * omniOsc.partialCount //4\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillator.baseType;\n\t},\n\tset : function(baseType){\n\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n});\n\n/**\n * The width of the oscillator (only if the oscillator is set to \"pulse\")\n * @memberOf Tone.OmniOscillator#\n * @type {NormalRange}\n * @signal\n * @name width\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n * //can access the width attribute only if type === \"pulse\"\n * omniOsc.width.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\treturn this._oscillator.width;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.count;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(count){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents. See Tone.FatOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.spread;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(spread){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n});\n\n/**\n * The type of the modulator oscillator. Only if the oscillator\n * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.modulationType;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(mType){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n});\n\n/**\n * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n * modulating signal (ma) -- as in ma/mf.\n * See Tone.FMOscillator for more info.\n * @type {Positive}\n * @signal\n * @name modulationIndex\n * @memberof Tone.OmniOscillator#\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\treturn this._oscillator.modulationIndex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n *  A harmonicity of 1 gives both oscillators the same frequency.\n *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n *  for more info.\n *  @memberOf Tone.OmniOscillator#\n *  @signal\n *  @type {Positive}\n *  @name harmonicity\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.harmonicity;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The modulationFrequency Signal of the oscillator\n * (only if the oscillator type is set to pwm). See\n * Tone.PWMOscillator for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Frequency}\n * @signal\n * @name modulationFrequency\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n * //can access the modulationFrequency attribute only if type === \"pwm\"\n * omniOsc.modulationFrequency.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\treturn this._oscillator.modulationFrequency;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._sourceType = null;\n\treturn this;\n};\n\nexport default Tone.OmniOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n *          routed through a Tone.AmplitudeEnvelope.\n *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.Synth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Synth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n};\n\nTone.extend(Tone.Synth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Synth.defaults = {\n\t\"oscillator\" : {\n\t\t\"type\" : \"triangle\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.3,\n\t\t\"release\" : 1\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\t//if there is no release portion, stop the oscillator\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Synth} this\n */\nTone.Synth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.Synth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string} type the noise type (white|pink|brown)\n *  @example\n * //initialize the noise and start\n * var noise = new Tone.Noise(\"pink\").start();\n *\n * //make an autofilter to shape the noise\n * var autoFilter = new Tone.AutoFilter({\n * \t\"frequency\" : \"8m\",\n * \t\"min\" : 800,\n * \t\"max\" : 15000\n * }).connect(Tone.Master);\n *\n * //connect the noise\n * noise.connect(autoFilter);\n * //start the autofilter LFO\n * autoFilter.start()\n */\nTone.Noise = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\"], Tone.Noise);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  @private\n\t *  @type {AudioBufferSourceNode}\n\t */\n\tthis._source = null;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {AudioBuffer}\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The playback rate of the noise. Affects\n\t *  the \"frequency\" of the noise.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis._playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Noise, Tone.Source);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Noise.defaults = {\n\t\"type\" : \"white\",\n\t\"playbackRate\" : 1\n};\n\n/**\n * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n * @memberOf Tone.Noise#\n * @type {string}\n * @name type\n * @example\n * noise.type = \"white\";\n */\nObject.defineProperty(Tone.Noise.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (this._type !== type){\n\t\t\tif (type in _noiseBuffers){\n\t\t\t\tthis._type = type;\n\t\t\t\t//if it's playing, stop and restart it\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tvar now = this.now();\n\t\t\t\t\tthis._stop(now);\n\t\t\t\t\tthis._start(now);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\"Tone.Noise: invalid type: \"+type);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  The playback rate of the noise. Affects\n *  the \"frequency\" of the noise.\n *  @type {Positive}\n *  @signal\n */\nObject.defineProperty(Tone.Noise.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tif (this._source){\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n});\n\n/**\n *  internal start method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._start = function(time){\n\tvar buffer = _noiseBuffers[this._type];\n\tthis._source = new Tone.BufferSource(buffer).connect(this.output);\n\tthis._source.loop = true;\n\tthis._source.playbackRate.value = this._playbackRate;\n\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n};\n\n/**\n *  internal stop method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._stop = function(time){\n\tif (this._source){\n\t\tthis._source.stop(this.toSeconds(time));\n\t\tthis._source = null;\n\t}\n};\n\n/**\n * Restarts the noise.\n * @param  {Time} time When to restart the noise.\n * @return {Tone.Noise}      this\n */\nTone.Noise.prototype.restart = function(time){\n\t//TODO could be optimized by cancelling the buffer source 'stop'\n\t//stop and restart\n\tthis._stop(time);\n\tthis._start(time);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Noise} this\n */\nTone.Noise.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._source !== null){\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t}\n\tthis._buffer = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// THE BUFFERS\n///////////////////////////////////////////////////////////////////////////\n\n//Noise buffer stats\nvar bufferLength = 44100 * 5;\nvar channels = 2;\n\n/**\n *\tThe noise arrays. Generated on initialization.\n *  borrowed heavily from https://github.com/zacharydenton/noise.js\n *  (c) 2013 Zach Denton (MIT)\n *  @static\n *  @private\n *  @type {Array}\n */\nvar _noiseBuffers = {};\nvar _noiseCache = {};\n\nObject.defineProperty(_noiseBuffers, \"pink\", {\n\tget : function(){\n\t\tif (!_noiseCache.pink){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"brown\", {\n\tget : function(){\n\t\tif (!_noiseCache.brown){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"white\", {\n\tget : function(){\n\t\tif (!_noiseCache.white){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t}\n});\n\nexport default Tone.Noise;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/Context\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A single master output which is connected to the\n *          AudioDestinationNode (aka your speakers).\n *          It provides useful conveniences such as the ability\n *          to set the volume and mute the entire application.\n *          It also gives you the ability to apply master effects to your application.\n *          <br><br>\n *          Like Tone.Transport, A single Tone.Master is created\n *          on initialization and you do not need to explicitly construct one.\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Master);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toMaster();\n * //the above two examples are equivalent.\n */\nTone.Master = function(){\n\n\tTone.AudioNode.call(this);\n\tTone.getContext(function(){\n\t\tthis.createInsOuts(1, 0);\n\n\t\t/**\n\t\t *  The private volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t/**\n\t\t * The volume of the master output.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\n\t\tthis._readOnly(\"volume\");\n\t\t//connections\n\t\tTone.connectSeries(this.input, this.output, this.context.destination);\n\n\t\t//master is a singleton so it adds itself to the context\n\t\tthis.context.master = this;\n\t}.bind(this));\n};\n\nTone.extend(Tone.Master, Tone.AudioNode);\n\n/**\n *  @type {Object}\n *  @const\n */\nTone.Master.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Is an instanceof Tone.Master\n * @type {Boolean}\n */\nTone.Master.prototype.isMaster = true;\n\n/**\n * Mute the output.\n * @memberOf Tone.Master#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * Tone.Master.mute = true;\n */\nObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n *  chained in the master effects chain.\n *  @param {...(AudioNode|Tone)} nodes All arguments will be connected in a row\n *                                  and the Master will be routed through it.\n *  @return  {Tone.Master}  this\n *  @example\n * //some overall compression to keep the levels in check\n * var masterCompressor = new Tone.Compressor({\n * \t\"threshold\" : -6,\n * \t\"ratio\" : 3,\n * \t\"attack\" : 0.5,\n * \t\"release\" : 0.1\n * });\n * //give a little boost to the lows\n * var lowBump = new Tone.Filter(200, \"lowshelf\");\n * //route everything through the filter\n * //and compressor before going to the speakers\n * Tone.Master.chain(lowBump, masterCompressor);\n */\nTone.Master.prototype.chain = function(){\n\tthis.input.disconnect();\n\tvar args = Array.from(arguments);\n\targs.unshift(this.input);\n\targs.push(this.output);\n\tTone.connectSeries.apply(undefined, args);\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Master}  this\n */\nTone.Master.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n *  @returns {Tone.AudioNode} this\n *  @example\n * //connect an oscillator to the master output\n * var osc = new Tone.Oscillator().toMaster();\n */\nTone.AudioNode.prototype.toMaster = function(){\n\tthis.connect(this.context.master);\n\treturn this;\n};\n\n/**\n *  initialize the module and listen for new audio contexts\n *  @private\n */\nvar MasterConstructor = Tone.Master;\nTone.Master = new MasterConstructor();\n\nTone.Context.on(\"init\", function(context){\n\t// if it already exists, just restore it\n\tif (context.master && context.master.isMaster){\n\t\tTone.Master = context.master;\n\t} else {\n\t\tTone.Master = new MasterConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.master && context.master.isMaster){\n\t\tcontext.master.dispose();\n\t}\n});\n\nexport default Tone.Master;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/ScaledEnvelope\";\nimport \"../component/Envelope\";\n\n/**\n *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n *         it's got a `baseFrequency` and `octaves` parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var freqEnv = new Tone.FrequencyEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"baseFrequency\" : \"C2\",\n *  \t\"octaves\" : 4\n *  });\n *  freqEnv.connect(oscillator.frequency);\n */\nTone.FrequencyEnvelope = function(){\n\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t//merge it with the frequency envelope defaults\n\toptions = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\tTone.ScaledEnvelope.call(this, options);\n\n\t/**\n\t *  Stores the octave value\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t//setup\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\tthis.exponent = options.exponent;\n};\n\nTone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.FrequencyEnvelope.defaults = {\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 4,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's mininum output value. This is the value which it\n * starts at.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = this.toFrequency(min);\n\t\t//also update the octaves\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The number of octaves above the baseFrequency that the\n * envelope will scale to.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.FrequencyEnvelope} this\n */\nTone.FrequencyEnvelope.prototype.dispose = function(){\n\tTone.ScaledEnvelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.FrequencyEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Scale\";\nimport \"../signal/Pow\";\n\n/**\n *  @class  Performs an exponential scaling on an input signal.\n *          Scales a NormalRange value [0,1] exponentially\n *          to the output range of outputMin to outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0.\n *  @param {number} [outputMax=1]\tThe output value when the input is 1.\n *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n *  @example\n * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n * var signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nTone.ScaleExp = function(outputMin, outputMax, exponent){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  scale the input to the output range\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\n\tthis._exp.connect(this._scale);\n};\n\nTone.extend(Tone.ScaleExp, Tone.SignalBase);\n\n/**\n * Instead of interpolating linearly between the <code>min</code> and\n * <code>max</code> values, setting the exponent will interpolate between\n * the two values with an exponential curve.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n * The minimum output value. This number is output when\n * the value input value is 0.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The maximum output value. This number is output when\n * the value input value is 1.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.ScaleExp} this\n */\nTone.ScaleExp.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaleExp;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Compressor is a thin wrapper around the Web Audio\n *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n *         by narrowing or \"compressing\" an audio signal's dynamic range.\n *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n *  @param {Positive} [ratio] The gain reduction ratio.\n *  @example\n * var comp = new Tone.Compressor(-30, 3);\n */\nTone.Compressor = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"ratio\"], Tone.Compressor);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor node\n\t *  @type {DynamicsCompressorNode}\n\t *  @private\n\t */\n\tthis._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\n\t/**\n\t *  the threshold value\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.threshold = new Tone.Param({\n\t\t\"param\" : this._compressor.threshold,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The attack parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\n\t/**\n\t *  The release parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\n\t/**\n\t *  The knee parameter\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.knee = new Tone.Param({\n\t\t\"param\" : this._compressor.knee,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The ratio value\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.ratio = new Tone.Param({\n\t\t\"param\" : this._compressor.ratio,\n\t\t\"convert\" : false\n\t});\n\n\t//set the defaults\n\tthis._readOnly([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis.set(options);\n};\n\nTone.extend(Tone.Compressor, Tone.AudioNode);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Compressor.defaults = {\n\t\"ratio\" : 12,\n\t\"threshold\" : -24,\n\t\"release\" : 0.25,\n\t\"attack\" : 0.003,\n\t\"knee\" : 30\n};\n\n/**\n *  clean up\n *  @returns {Tone.Compressor} this\n */\nTone.Compressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis._compressor.disconnect();\n\tthis._compressor = null;\n\tthis.attack.dispose();\n\tthis.attack = null;\n\tthis.release.dispose();\n\tthis.release = null;\n\tthis.threshold.dispose();\n\tthis.threshold = null;\n\tthis.ratio.dispose();\n\tthis.ratio = null;\n\tthis.knee.dispose();\n\tthis.knee = null;\n\treturn this;\n};\n\nexport default Tone.Compressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/OfflineAudioContext\";\n\nif (Tone.supported){\n\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t}\n\n\t//not functionally equivalent, but only an API placeholder\n\tif (!AudioContext.prototype.close){\n\t\tAudioContext.prototype.close = function(){\n\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\tthis.suspend();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//not functionally equivalent\n\tif (!AudioContext.prototype.resume){\n\t\tAudioContext.prototype.resume = function(){\n\t\t\t//play some silent audio to jumpstart the context\n\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\tvar source = this.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.destination);\n\t\t\tsource.start(0);\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//createGain\n\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t}\n\n\t//createDelay\n\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t}\n\n\t//test decodeAudioData returns a promise\n\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t// MIT License (c) 2015 @mohayonao\n\tvar decodeAudioDataPromise = false;\n\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\ttry {\n\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\tdecodeAudioDataPromise = true;\n\t\t}\n\t} catch (e){\n\t\tdecodeAudioDataPromise = false;\n\t}\n\n\tif (!decodeAudioDataPromise){\n\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\treturn new Promise(function(success, error){\n\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\n\n/**\n *  @class Tone.TransportTime is a the time along the Transport's\n *         timeline. It is similar to Tone.Time, but instead of evaluating\n *         against the AudioContext's clock, it is evaluated against\n *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n *  @constructor\n *  @param  {Time}  val    The time value as a number or string\n *  @param  {String=}  units  Unit values\n *  @extends {Tone.Time}\n */\nTone.TransportTime = function(val, units){\n\tif (this instanceof Tone.TransportTime){\n\n\t\tTone.Time.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.TransportTime(val, units);\n\t}\n};\n\nTone.extend(Tone.TransportTime, Tone.Time);\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TransportTime.prototype._now = function(){\n\treturn Tone.Transport.seconds;\n};\n\nexport default Tone.TransportTime;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\n\n/**\n *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n *         Eventually all time values are evaluated to hertz\n *         using the `eval` method.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * Tone.Frequency(\"C3\") // 261\n * Tone.Frequency(38, \"midi\") //\n * Tone.Frequency(\"C3\").transpose(4);\n */\nTone.Frequency = function(val, units){\n\tif (this instanceof Tone.Frequency){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Frequency(val, units);\n\t}\n};\n\nTone.extend(Tone.Frequency, Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT BASE EXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\nTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"midi\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\tmethod : function(value){\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t}\n\t\t}\n\t},\n\t\"note\" : {\n\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\tmethod : function(pitch, octave){\n\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn noteNumber;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t}\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 1;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t}\n});\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n */\nTone.Frequency.prototype.transpose = function(interval){\n\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n};\n\n/**\n *  Takes an array of semitone intervals and returns\n *  an array of frequencies transposed by those intervals.\n *  @param  {Array}  intervals\n *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n *  @example\n * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n */\nTone.Frequency.prototype.harmonize = function(intervals){\n\treturn intervals.map(function(interval){\n\t\treturn this.transpose(interval);\n\t}.bind(this));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Frequency(\"C4\").toMidi(); //60\n */\nTone.Frequency.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.valueOf());\n};\n\n/**\n *  Return the value of the frequency in Scientific Pitch Notation\n *  @return  {Note}\n *  @example\n * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n */\nTone.Frequency.prototype.toNote = function(){\n\tvar freq = this.toFrequency();\n\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\tvar noteNumber = Math.round(12 * log) + 57;\n\tvar octave = Math.floor(noteNumber/12);\n\tif (octave < 0){\n\t\tnoteNumber += -12 * octave;\n\t}\n\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\treturn noteName + octave.toString();\n};\n\n/**\n *  Return the duration of one cycle in seconds.\n *  @return  {Seconds}\n */\nTone.Frequency.prototype.toSeconds = function(){\n\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n};\n\n/**\n *  Return the value in Hertz\n *  @return  {Frequency}\n */\nTone.Frequency.prototype.toFrequency = function(){\n\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n};\n\n/**\n *  Return the duration of one cycle in ticks\n *  @return  {Ticks}\n */\nTone.Frequency.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.floor(quarters * Tone.Transport.PPQ);\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS HELPERS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  With no arguments, return 0\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._noArg = function(){\n\treturn 0;\n};\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._frequencyToUnits = function(freq){\n\treturn freq;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._ticksToUnits = function(ticks){\n\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._beatsToUnits = function(beats){\n\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._secondsToUnits = function(seconds){\n\treturn 1 / seconds;\n};\n\n/**\n *  The default units if none are given.\n *  @private\n */\nTone.Frequency.prototype._defaultUnits = \"hz\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n};\n\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n *  A4's values in Hertz.\n *  @type {Frequency}\n *  @static\n */\nTone.Frequency.A4 = 440;\n\n/**\n *  Convert a MIDI note to frequency value.\n *  @param  {MIDI} midi The midi number to convert.\n *  @return {Frequency} the corresponding frequency value\n *  @static\n *  @example\n * Tone.Frequency.mtof(69); // returns 440\n */\nTone.Frequency.mtof = function(midi){\n\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n};\n\n/**\n *  Convert a frequency value to a MIDI note.\n *  @param {Frequency} frequency The value to frequency value to convert.\n *  @returns  {MIDI}\n *  @static\n *  @example\n * Tone.Frequency.ftom(440); // returns 69\n */\nTone.Frequency.ftom = function(frequency){\n\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n};\n\nexport default Tone.Frequency;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Pow\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n *          envelope generator. Tone.Envelope outputs a signal which\n *          can be connected to an AudioParam or Tone.Signal.\n *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n *                         0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * //an amplitude envelope\n * var gainNode = Tone.context.createGain();\n * var env = new Tone.Envelope({\n * \t\"attack\" : 0.1,\n * \t\"decay\" : 0.2,\n * \t\"sustain\" : 1,\n * \t\"release\" : 0.8,\n * });\n * env.connect(gainNode.gain);\n */\nTone.Envelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  When triggerAttack is called, the attack time is the amount of\n\t *  time it takes for the envelope to reach it's maximum value.\n\t *  @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t *  After the attack portion of the envelope, the value will fall\n\t *  over the duration of the decay time to it's sustain value.\n\t *  @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * \tThe sustain value is the value\n\t * \twhich the envelope rests at after triggerAttack is\n\t * \tcalled, but before triggerRelease is invoked.\n\t *  @type {NormalRange}\n\t */\n\tthis.sustain = options.sustain;\n\n\t/**\n\t *  After triggerRelease is called, the envelope's\n\t *  value will fall to it's miminum value over the\n\t *  duration of the release time.\n\t *  @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._attackCurve = \"linear\";\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._releaseCurve = \"exponential\";\n\n\t/**\n\t *  the signal\n\t *  @type {Tone.Signal}\n\t *  @private\n\t */\n\tthis._sig = this.output = new Tone.Signal(0);\n\n\t//set the attackCurve initially\n\tthis.attackCurve = options.attackCurve;\n\tthis.releaseCurve = options.releaseCurve;\n\tthis.decayCurve = options.decayCurve;\n};\n\nTone.extend(Tone.Envelope, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Envelope.defaults = {\n\t\"attack\" : 0.01,\n\t\"decay\" : 0.1,\n\t\"sustain\" : 0.5,\n\t\"release\" : 1,\n\t\"attackCurve\" : \"linear\",\n\t\"decayCurve\" : \"exponential\",\n\t\"releaseCurve\" : \"exponential\",\n};\n\n/**\n * Read the current value of the envelope. Useful for\n * syncronizing visual output to the envelope.\n * @memberOf Tone.Envelope#\n * @type {Number}\n * @name value\n * @readOnly\n */\nObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\tget : function(){\n\t\treturn this.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the curve\n *  @param  {Array|String}  curve\n *  @param  {String}  direction  In/Out\n *  @return  {String}  The curve name\n *  @private\n */\nTone.Envelope.prototype._getCurve = function(curve, direction){\n\tif (Tone.isString(curve)){\n\t\treturn curve;\n\t} else if (Tone.isArray(curve)){\n\t\t//look up the name in the curves array\n\t\tfor (var t in Tone.Envelope.Type){\n\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n *  Assign a the curve to the given name using the direction\n *  @param  {String}  name\n *  @param  {String}  direction In/Out\n *  @param  {Array}  curve\n *  @private\n */\nTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t//check if it's a valid type\n\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\tif (Tone.isObject(curveDef)){\n\t\t\tthis[name] = curveDef[direction];\n\t\t} else {\n\t\t\tthis[name] = curveDef;\n\t\t}\n\t} else if (Tone.isArray(curve)){\n\t\tthis[name] = curve;\n\t} else {\n\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t}\n};\n\n/**\n * The shape of the attack.\n * Can be any of these strings:\n * <ul>\n *   <li>linear</li>\n *   <li>exponential</li>\n *   <li>sine</li>\n *   <li>cosine</li>\n *   <li>bounce</li>\n *   <li>ripple</li>\n *   <li>step</li>\n * </ul>\n * Can also be an array which describes the curve. Values\n * in the array are evenly subdivided and linearly\n * interpolated over the duration of the attack.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name attackCurve\n * @example\n * env.attackCurve = \"linear\";\n * @example\n * //can also be an array\n * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n */\nObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n});\n\n/**\n * The shape of the release. See the attack curve types.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name releaseCurve\n * @example\n * env.releaseCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n});\n\n/**\n * The shape of the decay either \"linear\" or \"exponential\"\n * @memberOf Tone.Envelope#\n * @type {String}\n * @name decayCurve\n * @example\n * env.decayCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\tget : function(){\n\t\treturn this._decayCurve;\n\t},\n\tset : function(curve){\n\t\tvar curves = [\"linear\", \"exponential\"];\n\t\tif (!curves.includes(curve)){\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t} else {\n\t\t\tthis._decayCurve = curve;\n\t\t}\n\t}\n});\n\n/**\n *  Trigger the attack/decay portion of the ADSR envelope.\n *  @param  {Time} [time=now] When the attack should start.\n *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n *                               number between 0-1\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n *  env.triggerAttack(\"+0.5\", 0.2);\n */\nTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\tthis.log(\"triggerAttack\", time, velocity);\n\ttime = this.toSeconds(time);\n\tvar originalAttack = this.toSeconds(this.attack);\n\tvar attack = originalAttack;\n\tvar decay = this.toSeconds(this.decay);\n\tvelocity = Tone.defaultArg(velocity, 1);\n\t//check if it's not a complete attack\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\t//subtract the current value from the attack time\n\t\tvar attackRate = 1 / attack;\n\t\tvar remainingDistance = 1 - currentValue;\n\t\t//the attack is now the remaining time\n\t\tattack = remainingDistance / attackRate;\n\t}\n\t//attack\n\tif (attack === 0){\n\t\t//case where the attack time is 0 should set instantly\n\t\tthis._sig.setValueAtTime(velocity, time);\n\t} else if (this._attackCurve === \"linear\"){\n\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t} else if (this._attackCurve === \"exponential\"){\n\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t} else if (attack > 0){\n\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\tvar curve = this._attackCurve;\n\t\t//find the starting position in the curve\n\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t//the starting index is between the two values\n\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t//the first index is the current value\n\t\t\t\tcurve[0] = currentValue;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t}\n\t//decay\n\tif (decay){\n\t\tvar decayValue = velocity * this.sustain;\n\t\tvar decayStart = time + attack;\n\t\tthis.log(\"decay\", decayStart);\n\t\tif (this._decayCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Triggers the release of the envelope.\n *  @param  {Time} [time=now] When the release portion of the envelope should start.\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger release immediately\n *  env.triggerRelease();\n */\nTone.Envelope.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\tvar release = this.toSeconds(this.release);\n\t\tif (this._releaseCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t} else {\n\t\t\tvar curve = this._releaseCurve;\n\t\t\tif (Tone.isArray(curve)){\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {Number}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.Envelope.prototype.getValueAtTime = function(time){\n\treturn this._sig.getValueAtTime(time);\n};\n\n/**\n *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n *  some duration, then triggerRelease.\n *  @param {Time} duration The duration of the sustain.\n *  @param {Time} [time=now] When the attack should be triggered.\n *  @param {number} [velocity=1] The velocity of the envelope.\n *  @returns {Tone.Envelope} this\n *  @example\n * //trigger the attack and then the release after 0.6 seconds.\n * env.triggerAttackRelease(0.6);\n */\nTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + this.toSeconds(duration));\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled envelope changes after the given time.\n *  @param  {Time} after\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.cancel = function(after){\n\tthis._sig.cancelScheduledValues(after);\n\treturn this;\n};\n\n/**\n *  Borrows the connect method from Tone.Signal.\n *  @function\n *  @private\n */\nTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n \t *  Generate some complex envelope curves.\n \t */\n(function _createCurves(){\n\n\tvar curveLen = 128;\n\n\tvar i, k;\n\n\t//cosine curve\n\tvar cosineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t//ripple curve\n\tvar rippleCurve = [];\n\tvar rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++){\n\t\tk = (i / (curveLen - 1));\n\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t//stairs curve\n\tvar stairsCurve = [];\n\tvar steps = 5;\n\tfor (i = 0; i < curveLen; i++){\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t//in-out easing curve\n\tvar sineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t//a bounce curve\n\tvar bounceCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t *  Invert a value curve to make it work for the release\n\t *  @private\n\t */\n\tfunction invertCurve(curve){\n\t\tvar out = new Array(curve.length);\n\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t *  reverse the curve\n\t *  @private\n\t */\n\tfunction reverseCurve(curve){\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t *  attack and release curve arrays\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tTone.Envelope.Type = {\n\t\t\"linear\" : \"linear\",\n\t\t\"exponential\" : \"exponential\",\n\t\t\"bounce\" : {\n\t\t\tIn : invertCurve(bounceCurve),\n\t\t\tOut : bounceCurve\n\t\t},\n\t\t\"cosine\" : {\n\t\t\tIn : cosineCurve,\n\t\t\tOut : reverseCurve(cosineCurve)\n\t\t},\n\t\t\"step\" : {\n\t\t\tIn : stairsCurve,\n\t\t\tOut : invertCurve(stairsCurve)\n\t\t},\n\t\t\"ripple\" : {\n\t\t\tIn : rippleCurve,\n\t\t\tOut : invertCurve(rippleCurve)\n\t\t},\n\t\t\"sine\" : {\n\t\t\tIn : sineCurve,\n\t\t\tOut : invertCurve(sineCurve)\n\t\t}\n\t};\n\n})();\n\n/**\n *  Disconnect and dispose.\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._sig.dispose();\n\tthis._sig = null;\n\tthis._attackCurve = null;\n\tthis._releaseCurve = null;\n\treturn this;\n};\n\nexport default Tone.Envelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../component/Merge\";\nimport \"../signal/Zero\";\nimport \"../component/Split\";\nimport \"../core/Gain\";\nimport \"../signal/Signal\";\nimport \"../core/Context\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createStereoPanner){\n\n\t/**\n\t * @class Shimmed StereoPannerNode\n\t * @param  {AudioContext} context\n\t * @private\n\t */\n\tvar StereoPannerNode = function(context){\n\n\t\t/**\n\t\t * The audio context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The left/right panning. [-1, 1]\n\t\t * @type {AudioRange}\n\t\t * @signal\n\t\t */\n\t\tthis.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t\t/**\n\t\t * Equal power scaling of the right gain\n\t\t * @type {Tone.WaveShaper}\n\t\t */\n\t\tvar rightWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale((val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * Equal power scaling of the left gain\n\t\t * @type {Tone.WaveShaper}\n\t\t * @private\n\t\t */\n\t\tvar leftWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale(1 - (val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * The left gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar leftGain = new Tone.Gain();\n\n\t\t/**\n\t\t * The right gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar rightGain = new Tone.Gain();\n\n\t\t/**\n\t\t * Split the incoming signal\n\t\t * @type {Tone.Split}\n\t\t * @private\n\t\t */\n\t\tvar split = this.input = new Tone.Split();\n\t\t//fixes safari issue with splitting audio\n\t\tsplit._splitter.channelCountMode = \"explicit\";\n\n\t\t/**\n\t\t * Keeps the waveshapers from optimizing 0s\n\t\t * @type {Tone.Zero}\n\t\t * @private\n\t\t */\n\t\tvar zero = new Tone.Zero();\n\t\tzero.fan(rightWaveShaper, leftWaveShaper);\n\n\t\t/**\n\t\t * Merge the outgoing signal\n\t\t * @type {Tone.Merge}\n\t\t * @private\n\t\t */\n\t\tvar merge = this.output = new Tone.Merge();\n\n\t\t//connections\n\t\tsplit.left.chain(leftGain, merge.left);\n\t\tsplit.right.chain(rightGain, merge.right);\n\t\tthis.pan.chain(leftWaveShaper, leftGain.gain);\n\t\tthis.pan.chain(rightWaveShaper, rightGain.gain);\n\t};\n\n\tStereoPannerNode.prototype.disconnect = function(){\n\t\tthis.output.disconnect.apply(this.output, arguments);\n\t};\n\n\tStereoPannerNode.prototype.connect = function(){\n\t\tthis.output.connect.apply(this.output, arguments);\n\t};\n\n\t//add it to the AudioContext\n\tAudioContext.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n\tTone.Context.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../shim/StereoPannerNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n *          support 3D. Panner uses the StereoPannerNode when available.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n *  @example\n *  //pan the input signal hard right.\n *  var panner = new Tone.Panner(1);\n */\nTone.Panner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\"], Tone.Panner);\n\tTone.AudioNode.call(this);\n\t/**\n\t*  the panner node\n\t*  @type {StereoPannerNode}\n\t*  @private\n\t*/\n\tthis._panner = this.input = this.output = this.context.createStereoPanner();\n\n\t/**\n\t*  The pan control. -1 = hard left, 1 = hard right.\n\t*  @type {AudioRange}\n\t*  @signal\n\t*/\n\tthis.pan = this._panner.pan;\n\n\t//initial value\n\tthis.pan.value = options.pan;\n\tthis._readOnly(\"pan\");\n};\n\nTone.extend(Tone.Panner, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Panner.defaults = {\n\t\"pan\" : 0\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner} this\n */\nTone.Panner.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"pan\");\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis.pan = null;\n\treturn this;\n};\n\nexport default Tone.Panner;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FMOscillator\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.FMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis.detune.connect(this._modulator.detune);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.FMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationIndex\" : 2,\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.FMOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FMOscillator} this\n */\nTone.FMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\treturn this;\n};\n\nexport default Tone.FMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Signal\";\nimport \"../signal/WaveShaper\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n *         a square and only odd-numbered harmonics are present. At all other widths\n *         even-numbered harmonics are present. Read more\n *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] The frequency of the oscillator\n *  @param {NormalRange} [width] The width of the pulse\n *  @example\n * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n */\nTone.PulseOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The width of the pulse.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t/**\n\t *  gate the width amount\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._widthGate = new Tone.Gain(0);\n\n\t/**\n\t *  the sawtooth oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._sawtooth = new Tone.Oscillator({\n\t\tfrequency : options.frequency,\n\t\tdetune : options.detune,\n\t\ttype : \"sawtooth\",\n\t\tphase : options.phase\n\t});\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._sawtooth.frequency;\n\n\t/**\n\t *  The detune in cents.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._sawtooth.detune;\n\n\t/**\n\t *  Threshold the signal to turn it into a square\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\tif (val < 0){\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t});\n\n\t//connections\n\tthis._sawtooth.chain(this._thresh, this.output);\n\tthis.width.chain(this._widthGate, this._thresh);\n\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PulseOscillator, Tone.Source);\n\n/**\n *  The default parameters.\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PulseOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"width\" : 0.2,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.start(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.stop(time);\n\t//the width is still connected to the output.\n\t//that needs to be stopped also\n\tthis._widthGate.gain.setValueAtTime(0, time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PulseOscillator.prototype.restart = function(time){\n\tthis._sawtooth.restart(time);\n\tthis._widthGate.gain.cancelScheduledValues(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PulseOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._sawtooth.phase;\n\t},\n\tset : function(phase){\n\t\tthis._sawtooth.phase = phase;\n\t}\n});\n\n/**\n * The type of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PulseOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n *  Clean up method.\n *  @return {Tone.PulseOscillator} this\n */\nTone.PulseOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._sawtooth.dispose();\n\tthis._sawtooth = null;\n\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._widthGate.dispose();\n\tthis._widthGate = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.PulseOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\n\n/**\n *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n *          callback for a single or repeatable events along the timeline.\n *\n *  @extends {Tone}\n *  @param {function} callback The callback to invoke at the time.\n *  @param {*} value The value or values which should be passed to\n *                      the callback function on invocation.\n *  @example\n * var chord = new Tone.Event(function(time, chord){\n * \t//the chord as well as the exact time of the event\n * \t//are passed in as arguments to the callback function\n * }, [\"D4\", \"E4\", \"F4\"]);\n * //start the chord at the beginning of the transport timeline\n * chord.start();\n * //loop it every measure for 8 measures\n * chord.loop = 8;\n * chord.loopEnd = \"1m\";\n */\nTone.Event = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"value\"], Tone.Event);\n\tTone.call(this);\n\n\t/**\n\t *  Loop value\n\t *  @type  {Boolean|Positive}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  The callback to invoke.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The value which is passed to the\n\t *  callback function.\n\t *  @type  {*}\n\t *  @private\n\t */\n\tthis.value = options.value;\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = this.toTicks(options.loopStart);\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = this.toTicks(options.loopEnd);\n\n\t/**\n\t *  Tracks the scheduled events\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\n\t/**\n\t *  The playback speed of the note. A speed of 1\n\t *  is no change.\n\t *  @private\n\t *  @type {Positive}\n\t */\n\tthis._playbackRate = 1;\n\n\t/**\n\t *  A delay time from when the event is scheduled to start\n\t *  @type {Ticks}\n\t *  @private\n\t */\n\tthis._startOffset = 0;\n\n\t/**\n\t *  private holder of probability value\n\t *  @type {NormalRange}\n\t *  @private\n\t */\n\tthis._probability = options.probability;\n\n\t/**\n\t *  the amount of variation from the\n\t *  given time.\n\t *  @type {Boolean|Time}\n\t *  @private\n\t */\n\tthis._humanize = options.humanize;\n\n\t/**\n\t *  If mute is true, the callback won't be\n\t *  invoked.\n\t *  @type {Boolean}\n\t */\n\tthis.mute = options.mute;\n\n\t//set the initial values\n\tthis.playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Event.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"value\" : null,\n\t\"probability\" : 1,\n\t\"mute\" : false,\n\t\"humanize\" : false,\n};\n\n/**\n *  Reschedule all of the events along the timeline\n *  with the updated values.\n *  @param {Time} after Only reschedules events after the given time.\n *  @return  {Tone.Event}  this\n *  @private\n */\nTone.Event.prototype._rescheduleEvents = function(after){\n\t//if no argument is given, schedules all of the events\n\tafter = Tone.defaultArg(after, -1);\n\tthis._state.forEachFrom(after, function(event){\n\t\tvar duration;\n\t\tif (event.state === Tone.State.Started){\n\t\t\tif (Tone.isDefined(event.id)){\n\t\t\t\tTone.Transport.clear(event.id);\n\t\t\t}\n\t\t\tvar startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\tif (this._loop === true || Tone.isNumber(this._loop) && this._loop > 1){\n\t\t\t\tduration = Infinity;\n\t\t\t\tif (Tone.isNumber(this._loop)){\n\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tvar nextEvent = this._state.getAfter(startTick);\n\t\t\t\tif (nextEvent !== null){\n\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t}\n\t\t\t\tif (duration !== Infinity){\n\t\t\t\t\t//schedule a stop since it's finite duration\n\t\t\t\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t\t\t\tduration = Tone.Ticks(duration);\n\t\t\t\t}\n\t\t\t\tvar interval = Tone.Ticks(this._getLoopDuration());\n\t\t\t\tevent.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.Ticks(startTick), duration);\n\t\t\t} else {\n\t\t\t\tevent.id = Tone.Transport.schedule(this._tick.bind(this), Tone.Ticks(startTick));\n\t\t\t}\n\t\t}\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Returns the playback state of the note, either \"started\" or \"stopped\".\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.Event#\n *  @name state\n */\nObject.defineProperty(Tone.Event.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(Tone.Transport.ticks);\n\t}\n});\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Event#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Event.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t}\n});\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Event.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Event#\n *  @example\n * event.humanize = true;\n */\nObject.defineProperty(Tone.Event.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t}\n});\n\n/**\n *  Start the note at the given time.\n *  @param  {TimelinePosition}  time  When the note should start.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.start = function(time){\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : time,\n\t\t\t\"id\" : undefined,\n\t\t});\n\t\tthis._rescheduleEvents(time);\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the Event at the given time.\n *  @param  {TimelinePosition}  time  When the note should stop.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.stop = function(time){\n\tthis.cancel(time);\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tvar previousEvent = this._state.getBefore(time);\n\t\tvar reschedulTime = time;\n\t\tif (previousEvent !== null){\n\t\t\treschedulTime = previousEvent.time;\n\t\t}\n\t\tthis._rescheduleEvents(reschedulTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.cancel = function(time){\n\ttime = Tone.defaultArg(time, -Infinity);\n\ttime = this.toTicks(time);\n\tthis._state.forEachFrom(time, function(event){\n\t\tTone.Transport.clear(event.id);\n\t});\n\tthis._state.cancel(time);\n\treturn this;\n};\n\n/**\n *  The callback function invoker. Also\n *  checks if the Event is done playing\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Event.prototype._tick = function(time){\n\tvar ticks = Tone.Transport.getTicksAtTime(time);\n\tif (!this.mute && this._state.getValueAtTime(ticks) === Tone.State.Started){\n\t\tif (this.probability < 1 && Math.random() > this.probability){\n\t\t\treturn;\n\t\t}\n\t\tif (this.humanize){\n\t\t\tvar variation = 0.02;\n\t\t\tif (!Tone.isBoolean(this.humanize)){\n\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t}\n\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t}\n\t\tthis.callback(time, this.value);\n\t}\n};\n\n/**\n *  Get the duration of the loop.\n *  @return  {Ticks}\n *  @private\n */\nTone.Event.prototype._getLoopDuration = function(){\n\treturn Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n};\n\n/**\n *  If the note should loop or not\n *  between Tone.Event.loopStart and\n *  Tone.Event.loopEnd. If set to true,\n *  the event will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Event#\n *  @type {Boolean|Positive}\n *  @name loop\n */\nObject.defineProperty(Tone.Event.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n * \tThe playback rate of the note. Defaults to 1.\n *  @memberOf Tone.Event#\n *  @type {Positive}\n *  @name playbackRate\n *  @example\n * note.loop = true;\n * //repeat the note twice as fast\n * note.playbackRate = 2;\n */\nObject.defineProperty(Tone.Event.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n *  The loopEnd point is the time the event will loop\n *  if Tone.Event.loop is true.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Event.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The time when the loop should start.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Event.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The current progress of the loop interval.\n *  Returns 0 if the event is not started yet or\n *  it is not set to loop.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Event.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this._loop){\n\t\t\tvar ticks = Tone.Transport.ticks;\n\t\t\tvar lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === Tone.State.Started){\n\t\t\t\tvar loopDuration = this._getLoopDuration();\n\t\t\t\tvar progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.dispose = function(){\n\tthis.cancel();\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis.callback = null;\n\tthis.value = null;\n};\n\nexport default Tone.Event;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/Add\";\nimport \"../component/Merge\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels).\n *         MidSideMerge merges the mid and side signal after they've been seperated\n *         by Tone.MidSideSplit.<br><br>\n *         <code>\n *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideMerge = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  The mid signal input. Alias for\n\t *  <code>input[0]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.mid = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Left\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._left = new Tone.Add();\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoLeft = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side signal input. Alias for\n\t *  <code>input[1]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.side = this.input[1] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Right\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._right = new Tone.Subtract(/*\"($0 - $1) * $2\"*/);\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoRight = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  Merge the left/right signal back into a stereo signal.\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tthis.mid.connect(this._left, 0, 0);\n\tthis.side.connect(this._left, 0, 1);\n\tthis.mid.connect(this._right, 0, 0);\n\tthis.side.connect(this._right, 0, 1);\n\tthis._left.connect(this._timesTwoLeft);\n\tthis._right.connect(this._timesTwoRight);\n\tthis._timesTwoLeft.connect(this._merge, 0, 0);\n\tthis._timesTwoRight.connect(this._merge, 0, 1);\n};\n\nTone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideMerge} this\n */\nTone.MidSideMerge.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._left.dispose();\n\tthis._left = null;\n\tthis._timesTwoLeft.dispose();\n\tthis._timesTwoLeft = null;\n\tthis._right.dispose();\n\tthis._right = null;\n\tthis._timesTwoRight.dispose();\n\tthis._timesTwoRight = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideMerge;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels). <br><br>\n *         <code>\n *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideSplit = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, 2);\n\n\t/**\n\t *  split the incoming signal into left and right channels\n\t *  @type  {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = this.input = new Tone.Split();\n\n\t/**\n\t *  The mid send. Connect to mid processing. Alias for\n\t *  <code>output[0]</code>\n\t *  @type {Tone.Add}\n\t */\n\tthis._midAdd = new Tone.Add();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.mid = this.output[0] = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side output. Connect to side processing. Also Output 1\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._sideSubtract = new Tone.Subtract();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.side = this.output[1] = new Tone.Multiply(Math.SQRT1_2);\n\n\tthis._split.connect(this._midAdd, 0, 0);\n\tthis._split.connect(this._midAdd, 1, 1);\n\tthis._split.connect(this._sideSubtract, 0, 0);\n\tthis._split.connect(this._sideSubtract, 1, 1);\n\tthis._midAdd.connect(this.mid);\n\tthis._sideSubtract.connect(this.side);\n};\n\nTone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideSplit} this\n */\nTone.MidSideSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midAdd.dispose();\n\tthis._midAdd = null;\n\tthis._sideSubtract.dispose();\n\tthis._sideSubtract = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\treturn this;\n};\n\nexport default Tone.MidSideSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../core/AudioNode\";\nimport \"../component/FeedbackCombFilter\";\n\n/**\n *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the comb filter\n *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n *                                signal as it is fedback.\n */\nTone.LowpassCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\", \"dampening\"], Tone.LowpassCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._combFilter = this.output = new Tone.FeedbackCombFilter(options.delayTime, options.resonance);\n\n\t/**\n\t *  The delayTime of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._combFilter.delayTime;\n\n\t/**\n\t *  the lowpass filter\n\t *  @type  {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._lowpass = this.input = new Tone.Filter({\n\t\t\"frequency\" : options.dampening,\n\t\t\"type\" : \"lowpass\",\n\t\t\"Q\" : 0,\n\t\t\"rolloff\" : -12\n\t});\n\n\t/**\n\t *  The dampening control of the feedback\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lowpass.frequency;\n\t\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._combFilter.resonance;\n\n\t//connections\n\tthis._lowpass.connect(this._combFilter);\n\tthis._readOnly([\"dampening\", \"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LowpassCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.LowpassCombFilter} this\n */\nTone.LowpassCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"dampening\", \"resonance\", \"delayTime\"]);\n\tthis._combFilter.dispose();\n\tthis._combFilter = null;\n\tthis.resonance = null;\n\tthis.delayTime = null;\n\tthis._lowpass.dispose();\n\tthis._lowpass = null;\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.LowpassCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TransportTime\";\n\n/**\n *  @class Tone.Ticks is a primitive type for encoding Time values.\n *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TransportTime}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Ticks(\"4n\");//a quarter note\n */\nTone.Ticks = function(val, units){\n\tif (this instanceof Tone.Ticks){\n\n\t\tTone.TransportTime.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Ticks(val, units);\n\t}\n};\n\nTone.extend(Tone.Ticks, Tone.TransportTime);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Ticks.prototype._defaultUnits = \"i\";\n\n/**\n * Get the current time in the given units\n * @return {Ticks}\n * @private\n */\nTone.Ticks.prototype._now = function(){\n\treturn Tone.Transport.ticks;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._beatsToUnits = function(beats){\n\treturn this._getPPQ() * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._secondsToUnits = function(seconds){\n\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._ticksToUnits = function(ticks){\n\treturn ticks;\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toTicks = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toSeconds = function(){\n\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n};\n\nexport default Tone.Ticks;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n *         to schedule events. Do no invoke this class directly, it is\n *         handled from within Tone.Transport.\n *  @extends {Tone}\n *  @param {Object} options\n */\nTone.TransportEvent = function(Transport, options){\n\n\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\tTone.call(this);\n\n\t/**\n\t * Reference to the Transport that created it\n\t * @type {Tone.Transport}\n\t */\n\tthis.Transport = Transport;\n\n\t/**\n\t * The unique id of the event\n\t * @type {Number}\n\t */\n\tthis.id = Tone.TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t * @type {Ticks}\n\t */\n\tthis.time = Tone.Ticks(options.time);\n\n\t/**\n\t * The callback to invoke\n\t * @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t * If the event should be removed after being created.\n\t * @type {Boolean}\n\t * @private\n\t */\n\tthis._once = options.once;\n};\n\nTone.extend(Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportEvent.defaults = {\n\t\"once\" : false,\n\t\"callback\" : Tone.noOp,\n};\n\n/**\n * Current ID counter\n * @private\n * @static\n * @type {Number}\n */\nTone.TransportEvent._eventId = 0;\n\n/**\n * Invoke the event callback.\n * @param  {Time} time  The AudioContext time in seconds of the event\n */\nTone.TransportEvent.prototype.invoke = function(time){\n\tif (this.callback){\n\t\tthis.callback(time);\n\t\tif (this._once && this.Transport){\n\t\t\tthis.Transport.clear(this.id);\n\t\t}\n\t}\n};\n\n/**\n * Clean up\n * @return {Tone.TransportEvent} this\n */\nTone.TransportEvent.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis.Transport = null;\n\tthis.callback = null;\n\tthis.time = null;\n\treturn this;\n};\n\nexport default Tone.TransportEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/TickSignal\";\nimport \"../core/TimelineState\";\nimport \"../core/Timeline\";\nimport \"../core/Param\";\n\n/**\n *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n *  \t\tcomplex automation curves.\n *\n * \t@constructor\n *  @extends {Tone}\n *  @param {Frequency} frequency The initial frequency that the signal ticks at\n *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n */\nTone.TickSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t/**\n\t *  The frequency the callback function should be invoked.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.TickSignal(options.frequency);\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t * The offset values of the ticks\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._tickOffset = new Tone.Timeline();\n\t//add the first event\n\tthis.setTicksAtTime(0, 0);\n};\n\nTone.extend(Tone.TickSource);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.TickSource.defaults = {\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.TickSource#\n *  @name state\n */\nObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param {Ticks} [offset=0] The number of ticks to start the source at\n *  @return  {Tone.TickSource}  this\n */\nTone.TickSource.prototype.start = function(time, offset){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (Tone.isDefined(offset)){\n\t\t\tthis.setTicksAtTime(offset, time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n *  @example\n * clock.stop();\n */\nTone.TickSource.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\t//cancel the previous stop\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tvar event = this._state.get(time);\n\t\tif (event.time > 0){\n\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\tthis._state.cancel(event.time);\n\t\t}\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis.setTicksAtTime(0, time);\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n *  @param {Time} [time=now] When to clear the events after\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.cancel = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._tickOffset.cancel(time);\n\treturn this;\n};\n\n/**\n * Get the elapsed ticks at the given time\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}     The number of ticks\n */\nTone.TickSource.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedTicks = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedTicks;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked. Returns -1 when stopped.\n *  @memberOf Tone.TickSource#\n *  @name ticks\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this.getTicksAtTime(this.now());\n\t},\n\tset : function(t){\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n});\n\n/**\n *  The time since ticks=0 that the TickSource has been running. Accounts\n *  for tempo curves\n *  @memberOf Tone.TickSource#\n *  @name seconds\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this.getSecondsAtTime(this.now());\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.TickSource.prototype.getSecondsAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedSeconds = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedSeconds;\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.TickSource}       this\n */\nTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tthis._tickOffset.cancel(time);\n\tthis._tickOffset.add({\n\t\t\"time\" : time,\n\t\t\"ticks\" : ticks,\n\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t});\n\treturn this;\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * source.start(\"+0.1\");\n * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.TickSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n * Get the time of the given tick. The second argument\n * is when to test before. Since ticks can be set (with setTicksAtTime)\n * there may be multiple times for a given tick value. \n * @param  {Ticks} ticks The tick number.\n * @param  {Time=} before When to measure the tick value from. \n * @return {Time}       The time of the tick\n */\nTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\tbefore = Tone.defaultArg(before, this.now());\n\tvar offset = this._tickOffset.get(before);\n\tvar event = this._state.get(before);\n\tvar startTime = Math.max(offset.time, event.time);\n\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\treturn this.frequency.getTimeOfTick(absoluteTicks);\n};\n\n/**\n * @callback forEachTickBetween\n * @param {Time} when\n * @param {Ticks} when\n */\n\n/**\n *  Invoke the callback event at all scheduled ticks between the \n *  start time and the end time\n *  @param  {Time}    startTime  The beginning of the search range\n *  @param  {Time}    endTime    The end of the search range\n *  @param  {ForEachCallback}  callback   The callback to invoke with each tick\n *  @return  {Tone.TickSource}    this\n */\nTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t//only iterate through the sections where it is \"started\"\n\tvar lastStateEvent = this._state.get(startTime);\n\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t}\n\t\tlastStateEvent = event;\n\t}.bind(this));\n\n\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t//figure out the difference between the frequency ticks and the \n\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\tvar diff = startTicks - ticksAtStart;\n\t\tvar offset = diff % 1;\n\t\tif (offset !== 0){\n\t\t\toffset = 1 - offset;\n\t\t}\n\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\tvar error = null;\n\t\twhile (nextTickTime < endTime && this._state){\n\t\t\ttry {\n\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t} catch (e){\n\t\t\t\terror = e;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._state){\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t} \n\t\t}\n\t}\n\n\tif (error){\n\t\tthrow error;\n\t}\n\t\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis._tickOffset.dispose();\n\tthis._tickOffset = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.TickSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Abs\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../type/Type\";\nimport \"../core/Delay\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Follower is a  crude envelope follower which will follow\n *          the amplitude of an incoming signal. Read more about envelope followers (also known\n *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [smoothing=0.05] The rate of change of the follower.\n *  @example\n * var follower = new Tone.Follower(0.3);\n */\nTone.Follower = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Follower);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Abs}\n\t *  @private\n\t */\n\tthis._abs = new Tone.Abs();\n\n\t/**\n\t *  the lowpass filter which smooths the input\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._filter = this.context.createBiquadFilter();\n\tthis._filter.type = \"lowpass\";\n\tthis._filter.frequency.value = 0;\n\tthis._filter.Q.value = 0;\n\n\t/**\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._sub = new Tone.Subtract();\n\n\t/**\n\t *  delay node to compare change over time\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delay = new Tone.Delay(this.blockTime);\n\n\t/**\n\t *  the smoothing value\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._smoothing = options.smoothing;\n\n\tTone.connect(this.input, this._delay);\n\tTone.connect(this.input, this._sub, 0, 1);\n\tthis._sub.chain(this._abs, this._filter, this.output);\n\n\t//set the smoothing initially\n\tthis.smoothing = options.smoothing;\n};\n\nTone.extend(Tone.Follower, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Follower.defaults = {\n\t\"smoothing\" : 0.05,\n};\n\n/**\n * The attack time.\n * @memberOf Tone.Follower#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Follower.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._smoothing;\n\t},\n\tset : function(smoothing){\n\t\tthis._smoothing = smoothing;\n\t\tthis._filter.frequency.value = Tone.Time(smoothing).toFrequency() * 0.5;\n\t}\n});\n\n/**\n *  Borrows the connect method from Signal so that the output can be used\n *  as a Tone.Signal control signal.\n *  @function\n */\nTone.Follower.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n *  dispose\n *  @returns {Tone.Follower} this\n */\nTone.Follower.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._filter.disconnect();\n\tthis._filter = null;\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis._sub.disconnect();\n\tthis._sub = null;\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Follower;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/ScaleExp\";\nimport \"../signal/Signal\";\nimport \"../core/Param\";\nimport \"../core/Delay\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Comb filters are basic building blocks for physical modeling. Read more\n *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the filter.\n *  @param {NormalRange=} resonance The amount of feedback the filter has.\n */\nTone.FeedbackCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\"], Tone.FeedbackCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delay.delayTime;\n\n\t/**\n\t *  the feedback node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._feedback.gain;\n\n\tthis._delay.chain(this._feedback, this._delay);\n\tthis._readOnly([\"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.FeedbackCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackCombFilter} this\n */\nTone.FeedbackCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"resonance\", \"delayTime\"]);\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis.delayTime = null;\n\tthis._feedback.dispose();\n\tthis._feedback = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Filter\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Split the incoming signal into three bands (low, mid, high)\n *         with two crossover frequency controls.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n */\nTone.MultibandSplit = function(){\n\n\tvar options = Tone.defaults(arguments, [\"lowFrequency\", \"highFrequency\"], Tone.MultibandSplit);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the input\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.input = new Tone.Gain();\n\n\t/**\n\t *  the outputs\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis.output = new Array(3);\n\n\t/**\n\t *  The low band. Alias for <code>output[0]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.low = this.output[0] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  the lower filter of the mid band\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._lowMidFilter = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The mid band output. Alias for <code>output[1]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.mid = this.output[1] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  The high band output. Alias for <code>output[2]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.high = this.output[2] = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The quality of all the filters\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\tthis.input.fan(this.low, this.high);\n\tthis.input.chain(this._lowMidFilter, this.mid);\n\t//the frequency control signal\n\tthis.lowFrequency.connect(this.low.frequency);\n\tthis.lowFrequency.connect(this._lowMidFilter.frequency);\n\tthis.highFrequency.connect(this.mid.frequency);\n\tthis.highFrequency.connect(this.high.frequency);\n\t//the Q value\n\tthis.Q.connect(this.low.Q);\n\tthis.Q.connect(this._lowMidFilter.Q);\n\tthis.Q.connect(this.mid.Q);\n\tthis.Q.connect(this.high.Q);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\n/**\n *  @private\n *  @static\n *  @type {Object}\n */\nTone.MultibandSplit.defaults = {\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500,\n\t\"Q\" : 1,\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MultibandSplit} this\n */\nTone.MultibandSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.low = null;\n\tthis._lowMidFilter.dispose();\n\tthis._lowMidFilter = null;\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.high.dispose();\n\tthis.high = null;\n\tthis.lowFrequency.dispose();\n\tthis.lowFrequency = null;\n\tthis.highFrequency.dispose();\n\tthis.highFrequency = null;\n\tthis.Q.dispose();\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.MultibandSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Pow applies an exponent to the incoming signal. The incoming signal\n *         must be AudioRange.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n *  @example\n * var pow = new Tone.Pow(2);\n * var sig = new Tone.Signal(0.5).connect(pow);\n * //output of pow is 0.25. \n */\nTone.Pow = function(exp){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t * the exponent\n\t * @private\n\t * @type {number}\n\t */\n\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n};\n\nTone.extend(Tone.Pow, Tone.SignalBase);\n\n/**\n * The value of the exponent.\n * @memberOf Tone.Pow#\n * @type {number}\n * @name value\n */\nObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._exp;\n\t},\n\tset : function(exp){\n\t\tthis._exp = exp;\n\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t}\n});\n\n/**\n *  the function which maps the waveshaper\n *  @param   {number} exp\n *  @return {function}\n *  @private\n */\nTone.Pow.prototype._expFunc = function(exp){\n\treturn function(val){\n\t\treturn Math.pow(Math.abs(val), exp);\n\t};\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Pow} this\n */\nTone.Pow.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._expScaler.dispose();\n\tthis._expScaler = null;\n\treturn this;\n};\n\nexport default Tone.Pow;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.TimeBase is a flexible encoding of time\n *         which can be evaluated to and from a string.\n *  @extends {Tone}\n *  @param  {Time}  val    The time value as a number, string or object\n *  @param  {String=}  units  Unit values\n *  @example\n * Tone.TimeBase(4, \"n\")\n * Tone.TimeBase(2, \"t\")\n * Tone.TimeBase(\"2t\")\n * Tone.TimeBase({\"2t\" : 2})\n * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n */\nTone.TimeBase = function(val, units){\n\n\t//allows it to be constructed with or without 'new'\n\tif (this instanceof Tone.TimeBase){\n\n\t\t/**\n\t\t *  The value\n\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t *  @private\n\t\t */\n\t\tthis._val = val;\n\n\t\t/**\n\t\t * The units\n\t\t * @type {String?}\n\t\t * @private\n\t\t */\n\t\tthis._units = units;\n\n\t\t//test if the value is a string representation of a number\n\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\tthis._val = parseFloat(this._val);\n\t\t\tthis._units = this._defaultUnits;\n\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t//if they're the same type, just copy values over\n\t\t\tthis._val = val._val;\n\t\t\tthis._units = val._units;\n\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\tswitch (this._defaultUnits){\n\t\t\t\tcase \"s\" :\n\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"i\" :\n\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hz\" :\n\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midi\" :\n\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t}\n\t\t}\n\n\t} else {\n\n\t\treturn new Tone.TimeBase(val, units);\n\t}\n};\n\nTone.extend(Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tABSTRACT SYNTAX TREE PARSER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  All the primary expressions.\n *  @private\n *  @type  {Object}\n */\nTone.TimeBase.prototype._expressions = {\n\t\"n\" : {\n\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\tmethod : function(value, dot){\n\t\t\tvalue = parseInt(value);\n\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\tif (value === 1){\n\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t} else {\n\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t}\n\t\t}\n\t},\n\t\"t\" : {\n\t\tregexp : /^(\\d+)t$/i,\n\t\tmethod : function(value){\n\t\t\tvalue = parseInt(value);\n\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t}\n\t},\n\t\"m\" : {\n\t\tregexp : /^(\\d+)m$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t}\n\t},\n\t\"i\" : {\n\t\tregexp : /^(\\d+)i$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t}\n\t},\n\t\"hz\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 0;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t},\n\t\"s\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\tmethod : function(value){\n\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"samples\" : {\n\t\tregexp : /^(\\d+)samples$/,\n\t\tmethod : function(value){\n\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t}\n\t},\n\t\"default\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\tmethod : function(value){\n\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t}\n\t}\n};\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.TimeBase.prototype._defaultUnits = \"s\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTRANSPORT FALLBACKS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Return the bpm, or 120 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getBpm = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.bpm.value;\n\t} else {\n\t\treturn 120;\n\t}\n};\n\n/**\n * Return the timeSignature or 4 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getTimeSignature = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.timeSignature;\n\t} else {\n\t\treturn 4;\n\t}\n};\n\n/**\n * Return the PPQ or 192 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getPPQ = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.PPQ;\n\t} else {\n\t\treturn 192;\n\t}\n};\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._now = function(){\n\treturn this.now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\treturn 1/freq;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._beatsToUnits = function(beats){\n\treturn (60 / this._getBpm()) * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\treturn seconds;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n};\n\n/**\n * With no arguments, return 'now'\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._noArg = function(){\n\treturn this._now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Evaluate the time value. Returns the time\n *  in seconds.\n *  @return  {Seconds}\n */\nTone.TimeBase.prototype.valueOf = function(){\n\tif (Tone.isUndef(this._val)){\n\t\treturn this._noArg();\n\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\tfor (var units in this._expressions){\n\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\tthis._units = units;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else if (Tone.isObject(this._val)){\n\t\tvar total = 0;\n\t\tfor (var typeName in this._val){\n\t\t\tvar quantity = this._val[typeName];\n\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\ttotal += time;\n\t\t}\n\t\treturn total;\n\t}\n\tif (Tone.isDefined(this._units)){\n\t\tvar expr = this._expressions[this._units];\n\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\tif (matching){\n\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t} else {\n\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t}\n\t} else {\n\t\treturn this._val;\n\t}\n};\n\n/**\n *  Return the value in seconds\n *  @return {Seconds}\n */\nTone.TimeBase.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value in hertz\n *  @return {Frequency}\n */\nTone.TimeBase.prototype.toFrequency = function(){\n\treturn 1 / this.toSeconds();\n};\n\n/**\n *  Return the time in samples\n *  @return  {Samples}\n */\nTone.TimeBase.prototype.toSamples = function(){\n\treturn this.toSeconds() * this.context.sampleRate;\n};\n\n/**\n *  Return the time in milliseconds.\n *  @return  {Milliseconds}\n */\nTone.TimeBase.prototype.toMilliseconds = function(){\n\treturn this.toSeconds() * 1000;\n};\n\n/**\n *  Clean up\n *  @return {Tone.TimeBase} this\n */\nTone.TimeBase.prototype.dispose = function(){\n\tthis._val = null;\n\tthis._units = null;\n};\n\nexport default Tone.TimeBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Time is a primitive type for encoding Time values.\n *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number|Object}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Time(\"4n\");//a quarter note\n */\nTone.Time = function(val, units){\n\tif (this instanceof Tone.Time){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Time(val, units);\n\t}\n};\n\nTone.extend(Tone.Time, Tone.TimeBase);\n\n/**\n * Extend the base expressions\n */\nTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"quantize\" : {\n\t\tregexp : /^@(.+)/,\n\t\tmethod : function(capture){\n\t\t\tif (Tone.Transport){\n\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t},\n\t\"now\" : {\n\t\tregexp : /^\\+(.+)/,\n\t\tmethod : function(capture){\n\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t}\n\t}\n});\n\n/**\n *  Quantize the time by the given subdivision. Optionally add a\n *  percentage which will move the time value towards the ideal\n *  quantized value by that percentage.\n *  @param  {Number|Time}  val    The subdivision to quantize to\n *  @param  {NormalRange}  [percent=1]  Move the time value\n *                                   towards the quantized value by\n *                                   a percentage.\n *  @return  {Number}  this\n *  @example\n * Tone.Time(21).quantize(2) //returns 22\n * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n */\nTone.Time.prototype.quantize = function(subdiv, percent){\n\tpercent = Tone.defaultArg(percent, 1);\n\tvar subdivision = new this.constructor(subdiv);\n\tvar value = this.valueOf();\n\tvar multiple = Math.round(value / subdivision);\n\tvar ideal = multiple * subdivision;\n\tvar diff = ideal - value;\n\treturn value + diff * percent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert a Time to Notation. The notation values are will be the\n *  closest representation between 1m to 128th note.\n *  @return {Notation}\n *  @example\n * //if the Transport is at 120bpm:\n * Tone.Time(2).toNotation();//returns \"1m\"\n */\nTone.Time.prototype.toNotation = function(){\n\tvar time = this.toSeconds();\n\tvar testNotations = [\"1m\"];\n\tfor (var power = 1; power < 8; power++){\n\t\tvar subdiv = Math.pow(2, power);\n\t\ttestNotations.push(subdiv + \"n.\");\n\t\ttestNotations.push(subdiv + \"n\");\n\t\ttestNotations.push(subdiv + \"t\");\n\t}\n\ttestNotations.push(\"0\");\n\t//find the closets notation representation\n\tvar closest = testNotations[0];\n\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\ttestNotations.forEach(function(notation){\n\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\tclosest = notation;\n\t\t\tclosestSeconds = notationSeconds;\n\t\t}\n\t});\n\treturn closest;\n};\n\n/**\n *  Return the time encoded as Bars:Beats:Sixteenths.\n *  @return  {BarsBeatsSixteenths}\n */\nTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\tquarters = parseFloat(quarters.toFixed(4));\n\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\tvar sixteenths = (quarters % 1) * 4;\n\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\tsixteenths = sixteenths.toString();\n\tif (sixteenths.length > 3){\n\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t}\n\tvar progress = [measures, quarters, sixteenths];\n\treturn progress.join(\":\");\n};\n\n/**\n *  Return the time in ticks.\n *  @return  {Ticks}\n */\nTone.Time.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.round(quarters * this._getPPQ());\n};\n\n/**\n *  Return the time in seconds.\n *  @return  {Seconds}\n */\nTone.Time.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value as a midi note.\n *  @return  {Midi}\n */\nTone.Time.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.toFrequency());\n};\n\nexport default Tone.Time;\n\n","import Tone from \"../core/Tone\";\n\nif (Tone.supported){\n\tif (!OscillatorNode.prototype.setPeriodicWave){\n\t\tOscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t}\n\tif (!AudioContext.prototype.createPeriodicWave){\n\t\tAudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\nimport \"../shim/OscillatorNode\";\n\n/**\n *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n *     for most use-cases***\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.OscillatorNode = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The oscillator start time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  The oscillator stop time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the OscillatorNode\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The oscillator\n\t *  @type  {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = this.context.createOscillator();\n\tTone.connect(this._oscillator, this._gainNode);\n\tthis.type = options.type;\n\n\t/**\n\t *  The frequency of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Param({\n\t\tparam : this._oscillator.frequency, \n\t\tunits : Tone.Type.Frequency,\n\t\tvalue : options.frequency\n\t});\n\n\t/**\n\t *  The detune of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Param({\n\t\tparam : this._oscillator.detune,\n\t\tunits : Tone.Type.Cents,\n\t\tvalue : options.detune\n\t});\n\n\t/**\n\t *  The value that the buffer ramps to\n\t *  @type {Gain}\n\t *  @private\n\t */\n\tthis._gain = 1;\n};\n\nTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.OscillatorNode.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"onended\" : Tone.noOp\n};\n\n/**\n *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.OscillatorNode#\n *  @name state\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.start = function(time){\n\tthis.log(\"start\", time);\n\tif (this._startTime === -1){\n\t\tthis._startTime = this.toSeconds(time);\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\t\tthis._oscillator.start(this._startTime);\n\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t} else {\n\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t}\n\treturn this;\n};\n\n/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\nTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\tthis._oscillator.setPeriodicWave(periodicWave);\n\treturn this;\n};\n\n/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t//cancel the previous stop\n\tthis.cancelStop();\n\t//reschedule it\n\tthis._stopTime = this.toSeconds(time);\n\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\tif (this._stopTime > this._startTime){\n\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\tthis._oscillator.stop(this.now());\n\t\t\tthis.onended();\n\t\t\t//disconnect the object when it's ended\n\t\t\tsetTimeout(function(){\n\t\t\t\tif (this._oscillator){\n\t\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\t\tthis._gainNode.disconnect();\n\t\t\t\t}\n\t\t\t}.bind(this), 100);\n\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t} else {\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.cancelStop = function(){\n\tif (this._startTime !== -1){\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n * @memberOf Tone.OscillatorNode#\n * @type {Time}\n * @name type\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t}\n\treturn this;\n};\n\nexport default Tone.OscillatorNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../source/TickSource\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n *                                  which to load the AudioBuffer\n *  @param {Function=} onload The function to invoke when the buffer is loaded.\n *                            Recommended to use Tone.Buffer.on('load') instead.\n *  @example\n * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n * //play as soon as the buffer is loaded\n * player.autostart = true;\n */\nTone.Player = function(url){\n\n\tvar options;\n\tif (url instanceof Tone.Buffer && url.loaded){\n\t\turl = url.get();\n\t\toptions = Tone.Player.defaults;\n\t} else {\n\t\toptions = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Player);\n\t}\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  If the file should play as soon\n\t *  as the buffer is loaded.\n\t *  @type {Boolean}\n\t *  @example\n\t * //will play as soon as it's loaded\n\t * var player = new Tone.Player({\n\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t * \t\"autostart\" : true,\n\t * }).toMaster();\n\t */\n\tthis.autostart = options.autostart;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {Tone.Buffer}\n\t */\n\tthis._buffer = new Tone.Buffer({\n\t\t\"url\" : options.url,\n\t\t\"onload\" : this._onload.bind(this, options.onload),\n\t\t\"reverse\" : options.reverse\n\t});\n\tif (url instanceof AudioBuffer){\n\t\tthis._buffer.set(url);\n\t}\n\n\t/**\n\t *  if the buffer should loop once it's over\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  if 'loop' is true, the loop will start at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopStart = options.loopStart;\n\n\t/**\n\t *  if 'loop' is true, the loop will end at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopEnd = options.loopEnd;\n\n\t/**\n\t *  the playback rate\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  All of the active buffer source nodes\n\t *  @type {Array<Tone.BufferSource>}\n\t *  @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n};\n\nTone.extend(Tone.Player, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Player.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"loop\" : false,\n\t\"autostart\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  Load the audio file as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  Note: this does not need to be called if a url\n *  was passed in to the constructor. Only use this\n *  if you want to manually load a new url.\n * @param {string} url The url of the buffer to load.\n *                     Filetype support depends on the\n *                     browser.\n *  @param  {Function=} callback The function to invoke once\n *                               the sample is loaded.\n *  @returns {Promise}\n */\nTone.Player.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, this._onload.bind(this, callback));\n};\n\n/**\n * Internal callback when the buffer is loaded.\n * @private\n */\nTone.Player.prototype._onload = function(callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tcallback(this);\n\tif (this.autostart){\n\t\tthis.start();\n\t}\n};\n\n/**\n * Internal callback when the buffer is done playing.\n * @private\n */\nTone.Player.prototype._onSourceEnd = function(source){\n\tvar index = this._activeSources.indexOf(source);\n\tthis._activeSources.splice(index, 1);\n\tif (this._activeSources.length === 0 && !this._synced){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, Tone.now());\n\t}\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n *  @memberOf Tone.Player#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @private\n */\nTone.Player.prototype._start = function(startTime, offset, duration){\n\t//if it's a loop the default offset is the loopstart point\n\tif (this._loop){\n\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\n\t//compute the values in seconds\n\toffset = this.toSeconds(offset);\n\t\n\t//if it's synced, it should factor in the playback rate for computing the offset\n\tif (this._synced){\n\t\toffset *= this._playbackRate;\n\t}\n\n\t//compute the duration which is either the passed in duration of the buffer.duration - offset\n\tvar computedDuration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\tcomputedDuration = this.toSeconds(computedDuration);\n\n\t//scale it by the playback rate\n\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t//get the start time\n\tstartTime = this.toSeconds(startTime);\n\n\t//make the source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this._buffer,\n\t\t\"loop\" : this._loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t\"onended\" : this._onSourceEnd.bind(this),\n\t\t\"playbackRate\" : this._playbackRate,\n\t\t\"fadeIn\" : this.fadeIn,\n\t\t\"fadeOut\" : this.fadeOut,\n\t}).connect(this.output);\n\n\t//set the looping properties\n\tif (!this._loop && !this._synced){\n\t\t//if it's not looping, set the state change at the end of the sample\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTime + computedDuration);\n\t}\n\n\t//add it to the array of active sources\n\tthis._activeSources.push(source);\n\n\t//start it\n\tif (this._loop && Tone.isUndef(duration)){\n\t\tsource.start(startTime, offset);\n\t} else {\n\t\t//subtract the fade out time\n\t\tsource.start(startTime, offset, computedDuration - this.toSeconds(this.fadeOut));\n\t}\n\treturn this;\n};\n\n/**\n *  Stop playback.\n *  @private\n *  @param  {Time} [time=now]\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._activeSources.forEach(function(source){\n\t\tsource.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n * Stop and then restart the player from the beginning (or offset)\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype.restart = function(time, offset, duration){\n\tthis._stop(time);\n\tthis._start(time, offset, duration);\n\treturn this;\n};\n\n/**\n *  Seek to a specific time in the player's buffer. If the\n *  source is no longer playing at that time, it will stop.\n *  @param {Time} offset The time to seek to.\n *  @param {Time=} time The time for the seek event to occur.\n *  @return {Tone.Player} this\n *  @example\n * source.start(0.2);\n * source.stop(0.4);\n */\nTone.Player.prototype.seek = function(offset, time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\toffset = this.toSeconds(offset);\n\t\t// if it's currently playing, stop it\n\t\tthis._stop(time);\n\t\t//restart it at the given time\n\t\tthis._start(time, offset);\n\t}\n\treturn this;\n};\n\n/**\n *  Set the loop start and end. Will only loop if loop is\n *  set to true.\n *  @param {Time} loopStart The loop start time\n *  @param {Time} loopEnd The loop end time\n *  @returns {Tone.Player} this\n *  @example\n * //loop 0.1 seconds of the file.\n * player.setLoopPoints(0.2, 0.3);\n * player.loop = true;\n */\nTone.Player.prototype.setLoopPoints = function(loopStart, loopEnd){\n\tthis.loopStart = loopStart;\n\tthis.loopEnd = loopEnd;\n\treturn this;\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Player.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = loopStart;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Player.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = loopEnd;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.Player#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.Player.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.Player.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\t//if no change, do nothing\n\t\tif (this._loop === loop){\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t//set the loop of all of the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop){\n\t\t\t//remove the next stopEvent\n\t\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, this.now());\n\t\t\tif (stopEvent){\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The playback speed. 1 is normal speed. This is not a signal because\n * Safari and iOS currently don't support playbackRate as a signal.\n * @memberOf Tone.Player#\n * @type {Number}\n * @name playbackRate\n */\nObject.defineProperty(Tone.Player.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tvar now = this.now();\n\n\t\t//cancel the stop event since it's at a different time now\n\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, now);\n\t\tif (stopEvent){\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t}\n\n\t\t//set all the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.cancelStop();\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Player.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this._buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis._buffer.reverse = rev;\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Player.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this._buffer.loaded;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Player} this\n */\nTone.Player.prototype.dispose = function(){\n\t//disconnect all of the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\tTone.Source.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\treturn this;\n};\n\nexport default Tone.Player;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n *          The amplitude of the Tone.Oscillator and the cutoff frequency of the\n *          Tone.Filter are controlled by Tone.Envelopes.\n *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MonoSynth({\n * \t\"oscillator\" : {\n * \t\t\"type\" : \"square\"\n *  },\n *  \"envelope\" : {\n *  \t\"attack\" : 0.1\n *  }\n * }).toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.MonoSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The filter.\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\tthis.filter.frequency.value = 5000;\n\n\t/**\n\t *  The filter envelope.\n\t *  @type {Tone.FrequencyEnvelope}\n\t */\n\tthis.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\t//connect the filter envelope\n\tthis.filterEnvelope.connect(this.filter.frequency);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n};\n\nTone.extend(Tone.MonoSynth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MonoSynth.defaults = {\n\t\"frequency\" : \"C4\",\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"filter\" : {\n\t\t\"Q\" : 6,\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -24\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.9,\n\t\t\"release\" : 1\n\t},\n\t\"filterEnvelope\" : {\n\t\t\"attack\" : 0.06,\n\t\t\"decay\" : 0.2,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 2,\n\t\t\"baseFrequency\" : 200,\n\t\t\"octaves\" : 7,\n\t\t\"exponent\" : 2\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.filterEnvelope.triggerAttack(time);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.envelope.triggerRelease(time);\n\tthis.filterEnvelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.MonoSynth} this\n */\nTone.MonoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.filterEnvelope.dispose();\n\tthis.filterEnvelope = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.MonoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FatOscillator is an array of oscillators with detune spread between the oscillators\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The oscillator's frequency.\n *  @param {String} type The type of the oscillator.\n *  @param {Cents} spread The detune spread between the oscillators.\n *  @example\n * var fatOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", 40).toMaster().start();\n */\nTone.FatOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  The array of oscillators\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The total spread of the oscillators\n\t *  @type  {Cents}\n\t *  @private\n\t */\n\tthis._spread = options.spread;\n\n\t/**\n\t *  The type of the oscillator\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The phase of the oscillators\n\t *  @type {Degrees}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  The partials array\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to use\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t//set the count initially\n\tthis.count = options.count;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.FatOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FatOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"spread\" : 20,\n\t\"count\" : 3,\n\t\"type\" : \"sawtooth\",\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.start(time);\n\t});\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.stop(time);\n\t});\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FatOscillator.prototype.restart = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.restart(time);\n\t});\n};\n\n/**\n *  Iterate over all of the oscillators\n *  @param  {Function}  iterator  The iterator function\n *  @private\n */\nTone.FatOscillator.prototype._forEach = function(iterator){\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\titerator.call(this, this._oscillators[i], i);\n\t}\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.type = type;\n\t\t});\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents.\n * @memberOf Tone.FatOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._spread;\n\t},\n\tset : function(spread){\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1){\n\t\t\tvar start = -spread/2;\n\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach(function(osc, i){\n\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\tget : function(){\n\t\treturn this._oscillators.length;\n\t},\n\tset : function(count){\n\t\tcount = Math.max(count, 1);\n\t\tif (this._oscillators.length !== count){\n\t\t\t//dispose the previous oscillators\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.dispose();\n\t\t\t});\n\t\t\tthis._oscillators = [];\n\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t} else {\n\t\t\t\t\tosc.type = this._type;\n\t\t\t\t}\n\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t//set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.start();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name phase\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase;\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.phase = phase;\n\t\t});\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillators[0].baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._forEach(function(osc){\n\t\t\tosc.baseType = baseType;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FatOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partials = partials;\n\t\t});\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partialCount = partialCount;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FatOscillator} this\n */\nTone.FatOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._forEach(function(osc){\n\t\tosc.dispose();\n\t});\n\tthis._oscillators = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.FatOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\nimport \"../signal/AudioToGain\";\n\n/**\n *  @class Tone.AMOscillator\n *\n *  @extends {Tone.Oscillator}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.AMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._carrier.frequency;\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.connect(this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.AMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.AMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.AMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name modulationType\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.AMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.AMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.AMOscillator} this\n */\nTone.AMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\treturn this;\n};\n\nexport default Tone.AMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/PulseOscillator\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n *         at the modulationFrequency. This has the effect of continuously\n *         changing the timbre of the oscillator by altering the harmonics\n *         generated.\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n *  @example\n *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n */\nTone.PWMOscillator = function(){\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the pulse oscillator\n\t *  @type {Tone.PulseOscillator}\n\t *  @private\n\t */\n\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t//change the pulse oscillator type\n\tthis._pulse._sawtooth.type = \"sine\";\n\n\t/**\n\t *  the modulator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"detune\" : options.detune,\n\t\t\"phase\" : options.phase\n\t});\n\n\t/**\n\t *  Scale the oscillator so it doesn't go silent\n\t *  at the extreme values.\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = new Tone.Multiply(2);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._modulator.frequency;\n\n\t/**\n\t *  The detune of the oscillator.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._modulator.detune;\n\n\t/**\n\t *  The modulation rate of the oscillator.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.modulationFrequency = this._pulse.frequency;\n\n\t//connections\n\tthis._modulator.chain(this._scale, this._pulse.width);\n\tthis._pulse.connect(this.output);\n\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PWMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PWMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"modulationFrequency\" : 0.4,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.PWMOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.start(time);\n\tthis._pulse.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.stop(time);\n\tthis._pulse.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._pulse.restart(time);\n};\n\n/**\n * The type of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PWMOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PWMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._modulator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.PWMOscillator} this\n */\nTone.PWMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._pulse.dispose();\n\tthis._pulse = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.modulationFrequency = null;\n\treturn this;\n};\n\nexport default Tone.PWMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\nimport \"../type/Type\";\nimport \"../core/Transport\";\n\n/**\n *  @class Tone.Part is a collection Tone.Events which can be\n *         started/stopped and looped as a single unit.\n *\n *  @extends {Tone.Event}\n *  @param {Function} callback The callback to invoke on each event\n *  @param {Array} events the array of events\n *  @example\n * var part = new Tone.Part(function(time, note){\n * \t//the notes given as the second element in the array\n * \t//will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n *  @example\n * //use an array of objects as long as the object has a \"time\" attribute\n * var part = new Tone.Part(function(time, value){\n * \t//the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9},\n * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n * ]).start(0);\n */\nTone.Part = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\"], Tone.Part);\n\tTone.Event.call(this, options);\n\n\t/**\n\t *  An array of Objects.\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._events = [];\n\n\t//add the events\n\tfor (var i = 0; i < options.events.length; i++){\n\t\tif (Array.isArray(options.events[i])){\n\t\t\tthis.add(options.events[i][0], options.events[i][1]);\n\t\t} else {\n\t\t\tthis.add(options.events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Part, Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Part.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"probability\" : 1,\n\t\"humanize\" : false,\n\t\"mute\" : false,\n\t\"events\" : []\n};\n\n/**\n *  Start the part at the given time.\n *  @param  {TransportTime}  time    When to start the part.\n *  @param  {Time=}  offset  The offset from the start of the part\n *                           to begin playing at.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.start = function(time, offset){\n\tvar ticks = this.toTicks(time);\n\tif (this._state.getValueAtTime(ticks) !== Tone.State.Started){\n\t\tif (this._loop){\n\t\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\toffset = Tone.defaultArg(offset, 0);\n\t\t}\n\t\toffset = this.toTicks(offset);\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : ticks,\n\t\t\t\"offset\" : offset\n\t\t});\n\t\tthis._forEach(function(event){\n\t\t\tthis._startNote(event, ticks, offset);\n\t\t});\n\t}\n\treturn this;\n};\n\n/**\n *  Start the event in the given event at the correct time given\n *  the ticks and offset and looping.\n *  @param  {Tone.Event}  event\n *  @param  {Ticks}  ticks\n *  @param  {Ticks}  offset\n *  @private\n */\nTone.Part.prototype._startNote = function(event, ticks, offset){\n\tticks -= offset;\n\tif (this._loop){\n\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd){\n\t\t\tif (event.startOffset < offset){\n\t\t\t\t//start it on the next loop\n\t\t\t\tticks += this._getLoopDuration();\n\t\t\t}\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset){\n\t\t\tevent.loop = false;\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t}\n\t} else if (event.startOffset >= offset){\n\t\tevent.start(Tone.Ticks(ticks));\n\t}\n};\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Part#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Part.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(function(event){\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n});\n\n/**\n *  Stop the part at the given time.\n *  @param  {TimelinePosition}  time  When to stop the part.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.stop = function(time){\n\tvar ticks = this.toTicks(time);\n\tthis._state.cancel(ticks);\n\tthis._state.setStateAtTime(Tone.State.Stopped, ticks);\n\tthis._forEach(function(event){\n\t\tevent.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Get/Set an Event's value at the given time.\n *  If a value is passed in and no event exists at\n *  the given time, one will be created with that value.\n *  If two events are at the same time, the first one will\n *  be returned.\n *  @example\n * part.at(\"1m\"); //returns the part at the first measure\n *\n * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2.\n * //if an event didn't exist at that time, it will be created.\n *  @param {TransportTime} time The time of the event to get or set.\n *  @param {*=} value If a value is passed in, the value of the\n *                    event at the given time will be set to it.\n *  @return {Tone.Event} the event at the time\n */\nTone.Part.prototype.at = function(time, value){\n\ttime = Tone.TransportTime(time);\n\tvar tickTime = Tone.Ticks(1).toSeconds();\n\tfor (var i = 0; i < this._events.length; i++){\n\t\tvar event = this._events[i];\n\t\tif (Math.abs(time.toTicks() - event.startOffset) < tickTime){\n\t\t\tif (Tone.isDefined(value)){\n\t\t\t\tevent.value = value;\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t}\n\t//if there was no event at that time, create one\n\tif (Tone.isDefined(value)){\n\t\tthis.add(time, value);\n\t\t//return the new event\n\t\treturn this._events[this._events.length - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Add a an event to the part.\n *  @param {Time} time The time the note should start.\n *                            If an object is passed in, it should\n *                            have a 'time' attribute and the rest\n *                            of the object will be used as the 'value'.\n *  @param  {Tone.Event|*}  value\n *  @returns {Tone.Part} this\n *  @example\n * part.add(\"1m\", \"C#+11\");\n */\nTone.Part.prototype.add = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tvar event;\n\tif (value instanceof Tone.Event){\n\t\tevent = value;\n\t\tevent.callback = this._tick.bind(this);\n\t} else {\n\t\tevent = new Tone.Event({\n\t\t\t\"callback\" : this._tick.bind(this),\n\t\t\t\"value\" : value,\n\t\t});\n\t}\n\t//the start offset\n\tevent.startOffset = time;\n\n\t//initialize the values\n\tevent.set({\n\t\t\"loopEnd\" : this.loopEnd,\n\t\t\"loopStart\" : this.loopStart,\n\t\t\"loop\" : this.loop,\n\t\t\"humanize\" : this.humanize,\n\t\t\"playbackRate\" : this.playbackRate,\n\t\t\"probability\" : this.probability\n\t});\n\n\tthis._events.push(event);\n\n\t//start the note if it should be played right now\n\tthis._restartEvent(event);\n\treturn this;\n};\n\n/**\n *  Restart the given event\n *  @param  {Tone.Event}  event\n *  @private\n */\nTone.Part.prototype._restartEvent = function(event){\n\tthis._state.forEach(function(stateEvent){\n\t\tif (stateEvent.state === Tone.State.Started){\n\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t} else {\n\t\t\t//stop the note\n\t\t\tevent.stop(Tone.Ticks(stateEvent.time));\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Remove an event from the part. If the event at that time is a Tone.Part,\n *  it will remove the entire part.\n *  @param {Time} time The time of the event\n *  @param {*} value Optionally select only a specific event value\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.remove = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\tvar event = this._events[i];\n\t\tif (event.startOffset === time){\n\t\t\tif (Tone.isUndef(value) || (Tone.isDefined(value) && event.value === value)){\n\t\t\t\tthis._events.splice(i, 1);\n\t\t\t\tevent.dispose();\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Remove all of the notes from the group.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.removeAll = function(){\n\tthis._forEach(function(event){\n\t\tevent.dispose();\n\t});\n\tthis._events = [];\n\treturn this;\n};\n\n/**\n *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.cancel = function(after){\n\tthis._forEach(function(event){\n\t\tevent.cancel(after);\n\t});\n\tthis._state.cancel(this.toTicks(after));\n\treturn this;\n};\n\n/**\n *  Iterate over all of the events\n *  @param {Function} callback\n *  @param {Object} ctx The context\n *  @private\n */\nTone.Part.prototype._forEach = function(callback, ctx){\n\tif (this._events){\n\t\tctx = Tone.defaultArg(ctx, this);\n\t\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\t\tvar e = this._events[i];\n\t\t\tif (e instanceof Tone.Part){\n\t\t\t\te._forEach(callback, ctx);\n\t\t\t} else {\n\t\t\t\tcallback.call(ctx, e);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Set the attribute of all of the events\n *  @param  {String}  attr  the attribute to set\n *  @param  {*}  value      The value to set it to\n *  @private\n */\nTone.Part.prototype._setAll = function(attr, value){\n\tthis._forEach(function(event){\n\t\tevent[attr] = value;\n\t});\n};\n\n/**\n *  Internal tick method\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Part.prototype._tick = function(time, value){\n\tif (!this.mute){\n\t\tthis.callback(time, value);\n\t}\n};\n\n/**\n *  Determine if the event should be currently looping\n *  given the loop boundries of this Part.\n *  @param  {Tone.Event}  event  The event to test\n *  @private\n */\nTone.Part.prototype._testLoopBoundries = function(event){\n\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)){\n\t\tevent.cancel(0);\n\t} else if (event.state === Tone.State.Stopped){\n\t\t//reschedule it if it's stopped\n\t\tthis._restartEvent(event);\n\t}\n};\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Part#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Part.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @example\n * event.humanize = true;\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Part#\n */\nObject.defineProperty(Tone.Part.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n});\n\n/**\n *  If the part should loop or not\n *  between Tone.Part.loopStart and\n *  Tone.Part.loopEnd. If set to true,\n *  the part will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Part#\n *  @type {Boolean|Positive}\n *  @name loop\n *  @example\n * //loop the part 8 times\n * part.loop = 8;\n */\nObject.defineProperty(Tone.Part.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._forEach(function(event){\n\t\t\tevent._loopStart = this._loopStart;\n\t\t\tevent._loopEnd = this._loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n});\n\n/**\n *  The loopEnd point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Part.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n *  The loopStart point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Part.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * \tThe playback rate of the part\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Part.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n});\n\n/**\n * \tThe number of scheduled notes in the part.\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Part.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._events.length;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.dispose = function(){\n\tTone.Event.prototype.dispose.call(this);\n\tthis.removeAll();\n\tthis.callback = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Part;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\n\n/**\n *  @class Tone.Loop creates a looped callback at the \n *         specified interval. The callback can be \n *         started, stopped and scheduled along\n *         the Transport's timeline. \n *  @example\n * var loop = new Tone.Loop(function(time){\n * \t//triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n *  @extends {Tone}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Time} interval The time between successive callback calls. \n */\nTone.Loop = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"interval\"], Tone.Loop);\n\tTone.call(this);\n\n\t/**\n\t *  The event which produces the callbacks\n\t */\n\tthis._event = new Tone.Event({\n\t\t\"callback\" : this._tick.bind(this),\n\t\t\"loop\" : true,\n\t\t\"loopEnd\" : options.interval,\n\t\t\"playbackRate\" : options.playbackRate,\n\t\t\"probability\" : options.probability\n\t});\n\n\t/**\n\t *  The callback to invoke with the next event in the pattern\n\t *  @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t//set the iterations\n\tthis.iterations = options.iterations;\n};\n\nTone.extend(Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Loop.defaults = {\n\t\"interval\" : \"4n\",\n\t\"callback\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"iterations\" : Infinity,\n\t\"probability\" : true,\n\t\"mute\" : false\n};\n\n/**\n *  Start the loop at the specified time along the Transport's\n *  timeline.\n *  @param  {TimelinePosition=}  time  When to start the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.start = function(time){\n\tthis._event.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the loop at the given time.\n *  @param  {TimelinePosition=}  time  When to stop the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.stop = function(time){\n\tthis._event.stop(time);\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.cancel = function(time){\n\tthis._event.cancel(time);\n\treturn this;\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Loop.prototype._tick = function(time){\n\tthis.callback(time);\n};\n\n/**\n *  The state of the Loop, either started or stopped.\n *  @memberOf Tone.Loop#\n *  @type {String}\n *  @name state\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._event.state;\n\t}\n});\n\n/**\n *  The progress of the loop as a value between 0-1. 0, when\n *  the loop is stopped or done iterating. \n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"progress\", {\n\tget : function(){\n\t\treturn this._event.progress;\n\t}\n});\n\n/**\n *  The time between successive callbacks. \n *  @example\n * loop.interval = \"8n\"; //loop every 8n\n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name interval\n */\nObject.defineProperty(Tone.Loop.prototype, \"interval\", {\n\tget : function(){\n\t\treturn this._event.loopEnd;\n\t},\n\tset : function(interval){\n\t\tthis._event.loopEnd = interval;\n\t}\n});\n\n/**\n *  The playback rate of the loop. The normal playback rate is 1 (no change). \n *  A `playbackRate` of 2 would be twice as fast. \n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Loop.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._event.playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._event.playbackRate = rate;\n\t}\n});\n\n/**\n *  Random variation +/-0.01s to the scheduled time. \n *  Or give it a time value which it will randomize by.\n *  @type {Boolean|Time}\n *  @memberOf Tone.Loop#\n *  @name humanize\n */\nObject.defineProperty(Tone.Loop.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._event.humanize;\n\t},\n\tset : function(variation){\n\t\tthis._event.humanize = variation;\n\t}\n});\n\n/**\n *  The probably of the callback being invoked.\n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Loop.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._event.probability;\n\t},\n\tset : function(prob){\n\t\tthis._event.probability = prob;\n\t}\n});\n\n/**\n *  Muting the Loop means that no callbacks are invoked.\n *  @memberOf Tone.Loop#\n *  @type {Boolean}\n *  @name mute\n */\nObject.defineProperty(Tone.Loop.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._event.mute;\n\t},\n\tset : function(mute){\n\t\tthis._event.mute = mute;\n\t}\n});\n\n/**\n *  The number of iterations of the loop. The default\n *  value is Infinity (loop forever).\n *  @memberOf Tone.Loop#\n *  @type {Positive}\n *  @name iterations\n */\nObject.defineProperty(Tone.Loop.prototype, \"iterations\", {\n\tget : function(){\n\t\tif (this._event.loop === true){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop;\n\t\t}\n\t},\n\tset : function(iters){\n\t\tif (iters === Infinity){\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.dispose = function(){\n\tthis._event.dispose();\n\tthis._event = null;\n\tthis.callback = null;\n};\n\nexport default Tone.Loop;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\n\n/**\n *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n *         and right to left instead of on the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoXFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The amount of feedback from the output\n\t *  back into the input of the effect (routed\n\t *  across left and right channels).\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackLR = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackRL = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\tthis.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\tthis.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoXFeedbackEffect} this\n */\nTone.StereoXFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackLR.dispose();\n\tthis._feedbackLR = null;\n\tthis._feedbackRL.dispose();\n\tthis._feedbackRL = null;\n\treturn this;\n};\n\nexport default Tone.StereoXFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels)\n *         and effects them separately before being recombined.\n *         Applies a Mid/Side seperation and recombination.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         This is a base-class for Mid/Side Effects.\n *\n *  @extends {Tone.Effect}\n *  @constructor\n */\nTone.MidSideEffect = function(){\n\n\tTone.Effect.apply(this, arguments);\n\n\t/**\n\t *  The mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = new Tone.MidSideSplit();\n\n\t/**\n\t *  The mid/side merge\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = new Tone.MidSideMerge();\n\n\t/**\n\t *  The mid send. Connect to mid processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.midSend = this._midSideSplit.mid;\n\n\t/**\n\t *  The side send. Connect to side processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.sideSend = this._midSideSplit.side;\n\n\t/**\n\t *  The mid return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.midReturn = this._midSideMerge.mid;\n\n\t/**\n\t *  The side return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.sideReturn = this._midSideMerge.side;\n\n\t//the connections\n\tthis.effectSend.connect(this._midSideSplit);\n\tthis._midSideMerge.connect(this.effectReturn);\n};\n\nTone.extend(Tone.MidSideEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideEffect} this\n */\nTone.MidSideEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\tthis.midSend = null;\n\tthis.sideSend = null;\n\tthis.midReturn = null;\n\tthis.sideReturn = null;\n\treturn this;\n};\n\nexport default Tone.MidSideEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../effect/Effect\";\n\n/**\n *  @class  Tone.Convolver is a wrapper around the Native Web Audio\n *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n *                                           contianing the impulse response.\n *  @param {Function=} onload The callback to invoke when the url is loaded.\n *  @example\n * //initializing the convolver with an impulse response\n * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n */\nTone.Convolver = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Convolver);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t *  the convolution buffer\n\t *  @type {Tone.Buffer}\n\t *  @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.url, function(buffer){\n\t\tthis.buffer = buffer.get();\n\t\toptions.onload();\n\t}.bind(this));\n\n\t//set if it's already loaded\n\tif (this._buffer.loaded){\n\t\tthis.buffer = this._buffer;\n\t}\n\n\t//initially set normalization\n\tthis.normalize = options.normalize;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Convolver, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type  {Object}\n */\nTone.Convolver.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"normalize\" : true\n};\n\n/**\n *  The convolver's buffer\n *  @memberOf Tone.Convolver#\n *  @type {AudioBuffer}\n *  @name buffer\n */\nObject.defineProperty(Tone.Convolver.prototype, \"buffer\", {\n\t\"get\" : function(){\n\t\tif (this._buffer.length){\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t},\n\t\"set\" : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t\t//if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer){\n\t\t\t//disconnect the old one\n\t\t\tthis.effectSend.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t//create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.connectEffect(this._convolver);\n\t\t}\n\t\tthis._convolver.buffer = this._buffer.get();\n\t}\n});\n\n/**\n *  The normalize property of the ConvolverNode interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the buffer attribute is set, or not.\n *  @memberOf Tone.Convolver#\n *  @type {Boolean}\n *  @name normalize\n */\nObject.defineProperty(Tone.Convolver.prototype, \"normalize\", {\n\t\"get\" : function(){\n\t\treturn this._convolver.normalize;\n\t},\n\t\"set\" : function(norm){\n\t\tthis._convolver.normalize = norm;\n\t}\n});\n\n/**\n *  Load an impulse response url as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  @param {string} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @param  {function=} callback\n *  @returns {Promise}\n */\nTone.Convolver.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, function(buff){\n\t\tthis.buffer = buff;\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Convolver} this\n */\nTone.Convolver.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Convolver;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n *         values in the NormalRange.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {NormalRange} modulus The modulus to apply.\n *  @example\n * var mod = new Tone.Modulo(0.2)\n * var sig = new Tone.Signal(0.5).connect(mod);\n * //mod outputs 0.1\n */\nTone.Modulo = function(modulus){\n\n\tTone.SignalBase.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  A waveshaper gets the integer multiple of\n\t *  the input signal and the modulus.\n\t *  @private\n\t *  @type {Tone.WaveShaper}\n\t */\n\tthis._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\n\t/**\n\t *  the integer multiple is multiplied by the modulus\n\t *  @type  {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = new Tone.Multiply();\n\n\t/**\n\t *  and subtracted from the input signal\n\t *  @type  {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = this.output = new Tone.Subtract();\n\n\t/**\n\t *  the modulus signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._modSignal = new Tone.Signal(modulus);\n\n\t//connections\n\tTone.connect(this.input, this._shaper);\n\tTone.connect(this.input, this._subtract);\n\tthis._modSignal.connect(this._multiply, 0, 0);\n\tthis._shaper.connect(this._multiply, 0, 1);\n\tthis._multiply.connect(this._subtract, 0, 1);\n\tthis._setWaveShaper(modulus);\n};\n\nTone.extend(Tone.Modulo, Tone.SignalBase);\n\n/**\n *  @param  {number}  mod  the modulus to apply\n *  @private\n */\nTone.Modulo.prototype._setWaveShaper = function(mod){\n\tthis._shaper.setMap(function(val){\n\t\tvar multiple = Math.floor((val + 0.0001) / mod);\n\t\treturn multiple;\n\t});\n};\n\n/**\n * The modulus value.\n * @memberOf Tone.Modulo#\n * @type {NormalRange}\n * @name value\n */\nObject.defineProperty(Tone.Modulo.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._modSignal.value;\n\t},\n\tset : function(mod){\n\t\tthis._modSignal.value = mod;\n\t\tthis._setWaveShaper(mod);\n\t}\n});\n\n/**\n * clean up\n *  @returns {Tone.Modulo} this\n */\nTone.Modulo.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modSignal.dispose();\n\tthis._modSignal = null;\n\treturn this;\n};\n\nexport default Tone.Modulo;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/OfflineAudioContext\";\n\n/**\n *  @class Wrapper around the OfflineAudioContext\n *  @extends {Tone.Context}\n *  @param  {Number}  channels  The number of channels to render\n *  @param  {Number}  duration  The duration to render in samples\n *  @param {Number} sampleRate the sample rate to render at\n */\nTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t/**\n\t *  The offline context\n\t *  @private\n\t *  @type  {OfflineAudioContext}\n\t */\n\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t//wrap the methods/members\n\tTone.Context.call(this, {\n\t\t\"context\" : offlineContext,\n\t\t\"clockSource\" : \"offline\",\n\t\t\"lookAhead\" : 0,\n\t\t\"updateInterval\" : 128 / sampleRate\n\t});\n\n\t/**\n\t *  A private reference to the duration\n\t *  @private\n\t *  @type  {Number}\n\t */\n\tthis._duration = duration;\n\n\t/**\n\t *  An artificial clock source\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._currentTime = 0;\n};\n\nTone.extend(Tone.OfflineContext, Tone.Context);\n\n/**\n *  Override the now method to point to the internal clock time\n *  @return  {Number}\n */\nTone.OfflineContext.prototype.now = function(){\n\treturn this._currentTime;\n};\n\n/**\n *  Overwrite resume, should not do anything in the OfflineAudioContext.\n *  @return {Promise}\n */\nTone.OfflineContext.prototype.resume = function(){\n\treturn Promise.resolve();\n};\n\n/**\n *  Render the output of the OfflineContext\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.render = function(){\n\twhile (this._duration - this._currentTime >= 0){\n\t\t//invoke all the callbacks on that time\n\t\tthis.emit(\"tick\");\n\t\t//increment the clock in 5ms chunks\n\t\tthis._currentTime += 0.005;\n\t}\n\n\treturn this._context.startRendering();\n};\n\n/**\n *  Close the context\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.close = function(){\n\tthis._context = null;\n\treturn Promise.resolve();\n};\n\nexport default Tone.OfflineContext;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../core/Buffer\";\nimport \"../core/OfflineContext\";\nimport \"../core/Master\";\n\n/**\n *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n *  The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n *  The callback function also passes in an offline instance of Tone.Transport which can be used\n *  to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions\n *  as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit\n *  user action like a click or tap. \n *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n *  @param  {Time}  duration     the amount of time to record for.\n *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n *  @example\n * //render 2 seconds of the oscillator\n * Tone.Offline(function(){\n * \t//only nodes created in this callback will be recorded\n * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n * \t//schedule their events\n * }, 2).then(function(buffer){\n * \t//do something with the output buffer\n * })\n * @example\n * //can also schedule events along the Transport\n * //using the passed in Offline Transport\n * Tone.Offline(function(Transport){\n * \tvar osc = new Tone.Oscillator().toMaster()\n * \tTransport.schedule(function(time){\n * \t\tosc.start(time).stop(time + 0.1)\n * \t}, 1)\n * \tTransport.start(0.2)\n * }, 4).then(function(buffer){\n * \t//do something with the output buffer\n * })\n */\nTone.Offline = function(callback, duration){\n\t//set the OfflineAudioContext\n\tvar sampleRate = Tone.context.sampleRate;\n\tvar originalContext = Tone.context;\n\n\tvar context = new Tone.OfflineContext(2, duration, sampleRate);\n\tTone.context = context;\n\n\t//invoke the callback/scheduling\n\tvar response = callback(Tone.Transport);\n\n\t//the return value\n\tvar ret = null;\n\n\tif (response && Tone.isFunction(response.then)){\n\t\t//wait for the promise to resolve\n\t\tret = response.then(function(){\n\t\t\t//then render the audio\n\t\t\treturn context.render();\n\t\t});\n\t} else {\n\t\t//process the audio\n\t\tret = context.render();\n\t}\n\n\t//return the original AudioContext\n\tTone.context = originalContext;\n\n\t//return the audio\n\treturn ret.then(function(buffer){\n\t\t//wrap it in a Tone.Buffer\n\t\treturn new Tone.Buffer(buffer);\n\t});\n};\n\nexport default Tone.Offline;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\n\n/**\n *  @class A data structure for holding multiple buffers.\n *  \n *  @param  {Object|Array}    urls      An object literal or array\n *                                      of urls to load.\n *  @param  {Function=}  callback  The callback to invoke when\n *                                 the buffers are loaded. \n *  @extends {Tone}\n *  @example\n * //load a whole bank of piano samples\n * var pianoSamples = new Tone.Buffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * \t...\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * \t@example\n * //To pass in additional parameters in the second parameter\n * var buffers = new Tone.Buffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nTone.Buffers = function(urls){\n\n\t//remove the urls from the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Buffers);\n\tTone.call(this);\n\n\t/**\n\t *  All of the buffers\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._buffers = {};\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t */\n\tthis.baseUrl = options.baseUrl;\n\n\tthis._loadingCount = 0;\n\t//add each one\n\tfor (var key in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Buffers);\n\n/**\n *  Defaults\n *  @type  {Object}\n */\nTone.Buffers.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\"\n};\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Buffers.prototype.has = function(name){\n\treturn this._buffers.hasOwnProperty(name);\n};\n\n/**\n *  Get a buffer by name. If an array was loaded, \n *  then use the array index.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Tone.Buffer}\n */\nTone.Buffers.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._buffers[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Buffers: no buffer named \"+name);\n\t}\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback \n *  @private\n */\nTone.Buffers.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Buffers#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffers.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tfor (var buffName in this._buffers){\n\t\t\tvar buff = this.get(buffName);\n\t\t\tisLoaded = isLoaded && buff.loaded;\n\t\t}\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a buffer by name and url to the Buffers\n *  @param  {String}    name      A unique name to give\n *                                the buffer\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke \n *                                 when the url is loaded.\n */\nTone.Buffers.prototype.add = function(name, url, callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tif (url instanceof Tone.Buffer){\n\t\tthis._buffers[name] = url;\n\t\tcallback(this);\n\t} else if (url instanceof AudioBuffer){\n\t\tthis._buffers[name] = new Tone.Buffer(url);\n\t\tcallback(this);\n\t} else if (Tone.isString(url)){\n\t\tthis._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Buffers} this\n */\nTone.Buffers.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tfor (var name in this._buffers){\n\t\tthis._buffers[name].dispose();\n\t}\n\tthis._buffers = null;\n\treturn this;\n};\n\nexport default Tone.Buffers;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Generate patterns from an array of values.\n *         Has a number of arpeggiation and randomized\n *         selection patterns. \n *           <ul>\n *  \t        <li>\"up\" - cycles upward</li>\n *  \t\t\t<li>\"down\" - cycles downward</li>\n *  \t\t\t<li>\"upDown\" - up then and down</li>\n *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n *  \t\t\t<li>\"random\" - randomly select an index</li>\n *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n *     \t\t</ul>\n *  @param  {Array}  values   An array of options to choose from.\n *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n *  @extends {Tone}\n */\nTone.CtrlPattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"type\"], Tone.CtrlPattern);\n\tTone.call(this);\n\n\t/**\n\t *  The array of values to arpeggiate over\n\t *  @type {Array}\n\t */\n\tthis.values = options.values;\n\t\n\t/**\n\t *  The current position in the values array\n\t *  @type  {Number}\n\t */\n\tthis.index = 0;\n\n\t/**\n\t *  The type placeholder\n\t *  @type {Tone.CtrlPattern.Type}\n\t *  @private\n\t */\n\tthis._type = null;\n\n\t/**\n\t *  Shuffled values for the RandomOnce type\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._shuffled = null;\n\n\t/**\n\t *  The direction of the movement\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._direction = null;\n\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.CtrlPattern);\n\n/**\n *  The Control Patterns\n *  @type  {Object}\n *  @static\n */\nTone.CtrlPattern.Type = {\n\tUp : \"up\",\n\tDown : \"down\",\n\tUpDown : \"upDown\",\n\tDownUp : \"downUp\",\n\tAlternateUp : \"alternateUp\",\n\tAlternateDown : \"alternateDown\",\n\tRandom : \"random\",\n\tRandomWalk : \"randomWalk\",\n\tRandomOnce : \"randomOnce\",\n};\n\n/**\n *  The default values. \n *  @type  {Object}\n */\nTone.CtrlPattern.defaults = {\n\t\"type\" : Tone.CtrlPattern.Type.Up,\n\t\"values\" : []\n};\n\n/**\n *  The value at the current index of the pattern.\n *  @readOnly\n *  @memberOf Tone.CtrlPattern#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"value\", {\n\tget : function(){\n\t\t//some safeguards\n\t\tif (this.values.length === 0){\n\t\t\treturn undefined;\n\t\t} else if (this.values.length === 1){\n\t\t\treturn this.values[0];\n\t\t} \n\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\tvar val = this.values[this.index];\n\t\tif (this.type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tif (this.values.length !== this._shuffled.length){\n\t\t\t\tthis._shuffleValues();\n\t\t\t}\n\t\t\tval = this.values[this._shuffled[this.index]];\n\t\t}\n\t\treturn val;\n\t}\n});\n\n/**\n *  The pattern used to select the next\n *  item from the values array\n *  @memberOf Tone.CtrlPattern#\n *  @type {Tone.CtrlPattern.Type}\n *  @name type\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._shuffled = null;\n\n\t\t//the first index\n\t\tif (this._type === Tone.CtrlPattern.Type.Up ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.RandomOnce ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis.index = 0;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Down ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\n\t\t//the direction\n\t\tif (this._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\n\t\t//randoms\n\t\tif (this._type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tthis._shuffleValues();\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Random){\n\t\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t\t}\n\t}\n});\n\n/**\n *  Return the next value given the current position\n *  and pattern.\n *  @return {*} The next value\n */\nTone.CtrlPattern.prototype.next = function(){\n\t\n\tvar type = this.type;\n\n\t//choose the next index\n\tif (type === Tone.CtrlPattern.Type.Up){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Down){\n\t\tthis.index--;\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.UpDown ||\n\t\t\t\ttype === Tone.CtrlPattern.Type.DownUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index++;\n\t\t} else {\n\t\t\tthis.index--;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this.index >= this.values.length){\n\t\t\tthis.index = this.values.length - 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Random){\n\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t} else if (type === Tone.CtrlPattern.Type.RandomWalk){\n\t\tif (Math.random() < 0.5){\n\t\t\tthis.index--;\n\t\t\tthis.index = Math.max(this.index, 0);\n\t\t} else {\n\t\t\tthis.index++;\n\t\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.RandomOnce){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\t//reshuffle the values for next time\n\t\t\tthis._shuffleValues();\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateDown){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t}\n\treturn this.value;\n};\n\n/**\n *  Shuffles the values and places the results into the _shuffled\n *  @private\n */\nTone.CtrlPattern.prototype._shuffleValues = function(){\n\tvar copy = [];\n\tthis._shuffled = [];\n\tfor (var i = 0; i < this.values.length; i++){\n\t\tcopy[i] = i;\n\t}\n\twhile (copy.length > 0){\n\t\tvar randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tthis._shuffled.push(randVal[0]);\n\t}\n};\n\n/**\n *  Clean up\n *  @returns {Tone.CtrlPattern} this\n */\nTone.CtrlPattern.prototype.dispose = function(){\n\tthis._shuffled = null;\n\tthis.values = null;\n};\n\nexport default Tone.CtrlPattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/TransportEvent\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n *         to schedule repeat events. This class should not be instantiated directly.\n *  @extends {Tone.TransportEvent}\n *  @param {Object} options\n */\nTone.TransportRepeatEvent = function(Transport, options){\n\n\tTone.TransportEvent.call(this, Transport, options);\n\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t/**\n\t * When the event should stop repeating\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis.duration = Tone.Ticks(options.duration);\n\n\t/**\n\t * The interval of the repeated event\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis._interval = Tone.Ticks(options.interval);\n\n\t/**\n\t * The ID of the current timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._nextId = -1;\n\n\t/**\n\t  * The time of the next event\n\t  * @type {Ticks}\n\t  * @private\n\t  */\n\tthis._nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._boundRestart = this._restart.bind(this);\n\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\tthis._restart();\n};\n\nTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportRepeatEvent.defaults = {\n\t\"duration\" : Infinity,\n\t\"interval\" : 1\n};\n\n/**\n * Invoke the callback. Returns the tick time which\n * the next event should be scheduled at.\n * @param  {Number} time  The AudioContext time in seconds of the event\n */\nTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t//create more events if necessary\n\tthis._createEvents(time);\n\t//call the super class\n\tTone.TransportEvent.prototype.invoke.call(this, time);\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t// schedule the next event\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks >= this.time && ticks >= this._nextTick &&\n\tthis._nextTick + this._interval < this.time + this.duration){\n\t\tthis._nextTick += this._interval;\n\t\tthis._currentId = this._nextId;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t}\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._restart = function(time){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis._nextTick = this.time;\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks > this.time){\n\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t}\n\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\tthis._nextTick += this._interval;\n\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n};\n\n/**\n * Clean up\n * @return {Tone.TransportRepeatEvent} this\n */\nTone.TransportRepeatEvent.prototype.dispose = function(){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\tthis._boundCreateEvents = null;\n\tTone.TransportEvent.prototype.dispose.call(this);\n\tthis.duration = null;\n\tthis._interval = null;\n\treturn this;\n};\n\nexport default Tone.TransportRepeatEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Similar to Tone.Timeline, but all events represent\n *         intervals with both \"time\" and \"duration\" times. The\n *         events are placed in a tree structure optimized\n *         for querying an intersection point with the timeline\n *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n *         to represent the data.\n *  @extends {Tone}\n */\nTone.IntervalTimeline = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  The root node of the inteval tree\n\t *  @type  {IntervalNode}\n\t *  @private\n\t */\n\tthis._root = null;\n\n\t/**\n\t *  Keep track of the length of the timeline.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._length = 0;\n};\n\nTone.extend(Tone.IntervalTimeline);\n\n/**\n *  The event to add to the timeline. All events must\n *  have a time and duration value\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.add = function(event){\n\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\tif (this._root === null){\n\t\tthis._root = node;\n\t} else {\n\t\tthis._root.insert(node);\n\t}\n\tthis._length++;\n\t// Restructure tree to be balanced\n\twhile (node !== null){\n\t\tnode.updateHeight();\n\t\tnode.updateMax();\n\t\tthis._rebalance(node);\n\t\tnode = node.parent;\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event to remove from the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.remove = function(event){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(event.time, results);\n\t\tfor (var i = 0; i < results.length; i++){\n\t\t\tvar node = results[i];\n\t\t\tif (node.event === event){\n\t\t\t\tthis._removeNode(node);\n\t\t\t\tthis._length--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.IntervalTimeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._length;\n\t}\n});\n\n/**\n *  Remove events whose time time is after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.cancel = function(after){\n\tthis.forEachFrom(after, function(event){\n\t\tthis.remove(event);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Set the root node as the given node\n *  @param {IntervalNode} node\n *  @private\n */\nTone.IntervalTimeline.prototype._setRoot = function(node){\n\tthis._root = node;\n\tif (this._root !== null){\n\t\tthis._root.parent = null;\n\t}\n};\n\n/**\n *  Replace the references to the node in the node's parent\n *  with the replacement node.\n *  @param  {IntervalNode}  node\n *  @param  {IntervalNode}  replacement\n *  @private\n */\nTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\tif (node.parent !== null){\n\t\tif (node.isLeftChild()){\n\t\t\tnode.parent.left = replacement;\n\t\t} else {\n\t\t\tnode.parent.right = replacement;\n\t\t}\n\t\tthis._rebalance(node.parent);\n\t} else {\n\t\tthis._setRoot(replacement);\n\t}\n};\n\n/**\n *  Remove the node from the tree and replace it with\n *  a successor which follows the schema.\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._removeNode = function(node){\n\tif (node.left === null && node.right === null){\n\t\tthis._replaceNodeInParent(node, null);\n\t} else if (node.right === null){\n\t\tthis._replaceNodeInParent(node, node.left);\n\t} else if (node.left === null){\n\t\tthis._replaceNodeInParent(node, node.right);\n\t} else {\n\t\tvar balance = node.getBalance();\n\t\tvar replacement, temp;\n\t\tif (balance > 0){\n\t\t\tif (node.left.right === null){\n\t\t\t\treplacement = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.left.right;\n\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t}\n\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t} else if (node.right.left === null){\n\t\t\treplacement = node.right;\n\t\t\treplacement.left = node.left;\n\t\t\ttemp = replacement;\n\t\t} else {\n\t\t\treplacement = node.right.left;\n\t\t\twhile (replacement.left !== null){\n\t\t\t\treplacement = replacement.left;\n\t\t\t}\n\t\t\treplacement.parent.left = replacement.right;\n\t\t\ttemp = replacement.parent;\n\t\t\treplacement.left = node.left;\n\t\t\treplacement.right = node.right;\n\t\t}\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t\t// this._replaceNodeInParent(node, replacement);\n\t\tthis._rebalance(temp);\n\t}\n\tnode.dispose();\n};\n\n/**\n *  Rotate the tree to the left\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.right the new root of this sub tree (instead of node)\n\tvar pivotNode = node.right;\n\tnode.right = pivotNode.left;\n\tpivotNode.left = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Rotate the tree to the right\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateRight = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.left the new root of this sub tree (instead of node)\n\tvar pivotNode = node.left;\n\tnode.left = pivotNode.right;\n\tpivotNode.right = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Balance the BST\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rebalance = function(node){\n\tvar balance = node.getBalance();\n\tif (balance > 1){\n\t\tif (node.left.getBalance() < 0){\n\t\t\tthis._rotateLeft(node.left);\n\t\t} else {\n\t\t\tthis._rotateRight(node);\n\t\t}\n\t} else if (balance < -1){\n\t\tif (node.right.getBalance() > 0){\n\t\t\tthis._rotateRight(node.right);\n\t\t} else {\n\t\t\tthis._rotateLeft(node);\n\t\t}\n\t}\n};\n\n/**\n *  Get an event whose time and duration span the give time. Will\n *  return the match whose \"time\" value is closest to the given time.\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Object}  The event which spans the desired time\n */\nTone.IntervalTimeline.prototype.get = function(time){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tif (results.length > 0){\n\t\t\tvar max = results[0];\n\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\tmax = results[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max.event;\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n *  Iterate over everything in the timeline.\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEach = function(callback){\n\tif (this._root !== null){\n\t\tvar allNodes = [];\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tvar ev = allNodes[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the given time\n *  overlaps with the time and duration time of the event.\n *  @param  {Number}  time The time to check if items are overlapping\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the time is greater\n *  than or equal to the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.searchAfter(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tcallback(ev);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.dispose = function(){\n\tvar allNodes = [];\n\tif (this._root !== null){\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t}\n\tfor (var i = 0; i < allNodes.length; i++){\n\t\tallNodes[i].dispose();\n\t}\n\tallNodes = null;\n\tthis._root = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param {Number} low\n *  @param {Number} high\n *  @private\n */\nvar IntervalNode = function(low, high, event){\n\t//the event container\n\tthis.event = event;\n\t//the low value\n\tthis.low = low;\n\t//the high value\n\tthis.high = high;\n\t//the high value for this and all child nodes\n\tthis.max = this.high;\n\t//the nodes to the left\n\tthis._left = null;\n\t//the nodes to the right\n\tthis._right = null;\n\t//the parent node\n\tthis.parent = null;\n\t//the number of child nodes\n\tthis.height = 0;\n};\n\n/**\n *  Insert a node into the correct spot in the tree\n *  @param  {IntervalNode}  node\n */\nIntervalNode.prototype.insert = function(node){\n\tif (node.low <= this.low){\n\t\tif (this.left === null){\n\t\t\tthis.left = node;\n\t\t} else {\n\t\t\tthis.left.insert(node);\n\t\t}\n\t} else if (this.right === null){\n\t\tthis.right = node;\n\t} else {\n\t\tthis.right.insert(node);\n\t}\n};\n\n/**\n *  Search the tree for nodes which overlap\n *  with the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.search = function(point, results){\n\t// If p is to the right of the rightmost point of any interval\n\t// in this node and all children, there won't be any matches.\n\tif (point > this.max){\n\t\treturn;\n\t}\n\t// Search left children\n\tif (this.left !== null){\n\t\tthis.left.search(point, results);\n\t}\n\t// Check this node\n\tif (this.low <= point && this.high > point){\n\t\tresults.push(this);\n\t}\n\t// If p is to the left of the time of this interval,\n\t// then it can't be in any child to the right.\n\tif (this.low > point){\n\t\treturn;\n\t}\n\t// Search right children\n\tif (this.right !== null){\n\t\tthis.right.search(point, results);\n\t}\n};\n\n/**\n *  Search the tree for nodes which are less\n *  than the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.searchAfter = function(point, results){\n\t// Check this node\n\tif (this.low >= point){\n\t\tresults.push(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.searchAfter(point, results);\n\t\t}\n\t}\n\t// search the right side\n\tif (this.right !== null){\n\t\tthis.right.searchAfter(point, results);\n\t}\n};\n\n/**\n *  Invoke the callback on this element and both it's branches\n *  @param  {Function}  callback\n */\nIntervalNode.prototype.traverse = function(callback){\n\tcallback(this);\n\tif (this.left !== null){\n\t\tthis.left.traverse(callback);\n\t}\n\tif (this.right !== null){\n\t\tthis.right.traverse(callback);\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateHeight = function(){\n\tif (this.left !== null && this.right !== null){\n\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t} else if (this.right !== null){\n\t\tthis.height = this.right.height + 1;\n\t} else if (this.left !== null){\n\t\tthis.height = this.left.height + 1;\n\t} else {\n\t\tthis.height = 0;\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateMax = function(){\n\tthis.max = this.high;\n\tif (this.left !== null){\n\t\tthis.max = Math.max(this.max, this.left.max);\n\t}\n\tif (this.right !== null){\n\t\tthis.max = Math.max(this.max, this.right.max);\n\t}\n};\n\n/**\n *  The balance is how the leafs are distributed on the node\n *  @return  {Number}  Negative numbers are balanced to the right\n */\nIntervalNode.prototype.getBalance = function(){\n\tvar balance = 0;\n\tif (this.left !== null && this.right !== null){\n\t\tbalance = this.left.height - this.right.height;\n\t} else if (this.left !== null){\n\t\tbalance = this.left.height + 1;\n\t} else if (this.right !== null){\n\t\tbalance = -(this.right.height + 1);\n\t}\n\treturn balance;\n};\n\n/**\n *  @returns {Boolean} true if this node is the left child\n *  of its parent\n */\nIntervalNode.prototype.isLeftChild = function(){\n\treturn this.parent !== null && this.parent.left === this;\n};\n\n/**\n *  get/set the left node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"left\", {\n\tget : function(){\n\t\treturn this._left;\n\t},\n\tset : function(node){\n\t\tthis._left = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  get/set the right node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"right\", {\n\tget : function(){\n\t\treturn this._right;\n\t},\n\tset : function(node){\n\t\tthis._right = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  null out references.\n */\nIntervalNode.prototype.dispose = function(){\n\tthis.parent = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis.event = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEND INTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\nexport default Tone.IntervalTimeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\n\n/**\n * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n *        to calculate the number of elapsed ticks. exponential and target curves\n *        are approximated with multiple linear ramps.\n *\n *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n *        describing integrating timing functions for tempo calculations.\n *\n * @param {Number} value The initial value of the signal\n * @extends {Tone.Signal}\n */\nTone.TickSignal = function(value){\n\n\tvalue = Tone.defaultArg(value, 1);\n\n\tTone.Signal.call(this, {\n\t\t\"units\" : Tone.Type.Ticks,\n\t\t\"value\" : value\n\t});\n\n\t//extend the memory\n\tthis._events.memory = Infinity;\n\n\t//clear the clock from the beginning\n\tthis.cancelScheduledValues(0);\n\t//set an initial event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"time\" : 0,\n\t\t\"value\" : value\n\t});\n};\n\nTone.extend(Tone.TickSignal, Tone.Signal);\n\n/**\n * Wraps Tone.Signal methods so that they also\n * record the ticks.\n * @param  {Function} method\n * @return {Function}\n * @private\n */\nfunction _wrapScheduleMethods(method){\n\treturn function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tmethod.apply(this, arguments);\n\t\tvar event = this._events.get(time);\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t};\n}\n\nTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\nTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tthis.setRampPoint(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\tvar segments = Math.round(Math.max(1 / constant, 1));\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = constant * i + time;\n\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\t//approx 10 segments per second\n\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\tvar segmentDur = ((time - prevEvent.time)/segments);\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @private\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\tif (event === null){\n\t\tevent = {\n\t\t\t\"ticks\" : 0,\n\t\t\t\"time\" : 0\n\t\t};\n\t} else if (Tone.isUndef(event.ticks)){\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t}\n\tvar val0 = this.getValueAtTime(event.time);\n\tvar val1 = this.getValueAtTime(time);\n\t//if it's right on the line, take the previous value\n\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t}\n\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar event = this._events.get(time);\n\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n};\n\n/**\n * Return the elapsed time of the number of ticks from the given time\n * @param {Ticks} ticks The number of ticks to calculate\n * @param  {Time} time The time to get the next tick from\n * @return {Seconds} The duration of the number of ticks from the given time in seconds\n */\nTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tvar currentTick = this.getTicksAtTime(time);\n\treturn this.getTimeOfTick(currentTick + ticks) - time;\n};\n\n/**\n * Given a tick, returns the time that tick occurs at.\n * @param  {Ticks} tick\n * @return {Time}      The time that the tick occurs.\n */\nTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\tvar before = this._events.get(tick, \"ticks\");\n\tvar after = this._events.getAfter(tick, \"ticks\");\n\tif (before && before.ticks === tick){\n\t\treturn before.time;\n\t} else if (before && after &&\n\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\tbefore.value !== after.value){\n\t\tvar val0 = this.getValueAtTime(before.time);\n\t\tvar val1 = this.getValueAtTime(after.time);\n\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\tvar sol1 = (-val0 + k) / delta;\n\t\tvar sol2 = (-val0 - k) / delta;\n\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t} else if (before){\n\t\tif (before.value === 0){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t}\n\t} else {\n\t\treturn tick / this._initialValue;\n\t}\n};\n\n/**\n * Convert some number of ticks their the duration in seconds accounting\n * for any automation curves starting at the given time.\n * @param  {Ticks} ticks The number of ticks to convert to seconds.\n * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n * @return {Tone.Time}       The duration in seconds of the ticks.\n */\nTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\twhen = this.toSeconds(when);\n\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n};\n\n/**\n * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n * seconds to the corresponding number of ticks accounting for any\n * automation curves starting at the given time.\n * @param  {Time} duration The time interval to convert to ticks.\n * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n * @return {Tone.Ticks}          The duration in ticks.\n */\nTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\twhen = this.toSeconds(when);\n\tduration = this.toSeconds(duration);\n\tvar startTicks = this.getTicksAtTime(when);\n\tvar endTicks = this.getTicksAtTime(when + duration);\n\treturn new Tone.Ticks(endTicks - startTicks);\n};\n\nexport default Tone.TickSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/TickSource\";\nimport \"../core/TimelineState\";\nimport \"../core/Emitter\";\nimport \"../core/Context\";\n\n/**\n *  @class  A sample accurate clock which provides a callback at the given rate.\n *          While the callback is not sample-accurate (it is still susceptible to\n *          loose JS timing), the time passed in as the argument to the callback\n *          is precise. For most applications, it is better to use Tone.Transport\n *          instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * \t@constructor\n *  @extends {Tone.Emitter}\n * \t@param {function} callback The callback to be invoked with the time of the audio event\n * \t@param {Frequency} frequency The rate of the callback\n * \t@example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * var clock = new Tone.Clock(function(time){\n * \tconsole.log(time);\n * }, 1);\n */\nTone.Clock = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\tTone.Emitter.call(this);\n\n\t/**\n\t *  The callback function to invoke at the scheduled tick.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The next time the callback is scheduled.\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._nextTick = 0;\n\n\t/**\n\t *  The tick counter\n\t *  @type  {Tone.TickSource}\n\t *  @private\n\t */\n\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t/**\n\t *  The last time the loop callback was invoked\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._lastUpdate = 0;\n\n\t/**\n\t *  The rate the callback function should be invoked.\n\t *  @type  {BPM}\n\t *  @signal\n\t */\n\tthis.frequency = this._tickSource.frequency;\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t//add an initial state\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t *  The loop function bound to its context.\n\t *  This is necessary to remove the event in the end.\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._boundLoop = this._loop.bind(this);\n\n\t//bind a callback to the worker thread\n\tthis.context.on(\"tick\", this._boundLoop);\n};\n\nTone.extend(Tone.Clock, Tone.Emitter);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Clock.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Clock#\n *  @name state\n */\nObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n *  @return  {Tone.Clock}  this\n */\nTone.Clock.prototype.start = function(time, offset){\n\t//make sure the context is started\n\tthis.context.resume();\n\t//start the loop\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis._tickSource.start(time, offset);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n *  @example\n * clock.stop();\n */\nTone.Clock.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis._tickSource.stop(time);\n\tif (time < this._lastUpdate){\n\t\tthis.emit(\"stop\", time);\n\t}\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\tthis._tickSource.pause(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked.\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t},\n\tset : function(t){\n\t\tthis._tickSource.ticks = t;\n\t}\n});\n\n/**\n *  The time since ticks=0 that the Clock has been running. Accounts\n *  for tempo curves\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._tickSource.seconds;\n\t},\n\tset : function(s){\n\t\tthis._tickSource.seconds = s;\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Clock.prototype.getSecondsAtTime = function(time){\n\treturn this._tickSource.getSecondsAtTime(time);\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\tthis._tickSource.setTicksAtTime(ticks, time);\n\treturn this;\n};\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Clock.prototype.getTicksAtTime = function(time){\n\treturn this._tickSource.getTicksAtTime(time);\n};\n\n/**\n * Get the time of the next tick\n * @param  {Ticks} ticks The tick number.\n * @param  {Time} before \n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.nextTickTime = function(offset, when){\n\twhen = this.toSeconds(when);\n\tvar currentTick = this.getTicksAtTime(when);\n\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n};\n\n/**\n *  The scheduling loop.\n *  @private\n */\nTone.Clock.prototype._loop = function(){\n\n\tvar startTime = this._lastUpdate;\n\tvar endTime = this.now();\n\tthis._lastUpdate = endTime;\n\n\tif (startTime !== endTime){\n\t\t//the state change events\n\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\tswitch (e.state){\n\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}.bind(this));\n\t\t//the tick callbacks\n\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\tthis.callback(time, ticks);\n\t\t}.bind(this));\n\t}\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * clock.start(\"+0.1\");\n * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.Clock.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis.context.off(\"tick\", this._boundLoop);\n\tthis._writable(\"frequency\");\n\tthis._tickSource.dispose();\n\tthis._tickSource = null;\n\tthis.frequency = null;\n\tthis._boundLoop = null;\n\tthis._nextTick = Infinity;\n\tthis.callback = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Clock;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var gt0 = new Tone.GreaterThanZero();\n * var sig = new Tone.Signal(0.01).connect(gt0);\n * //the output of gt0 is 1.\n * sig.value = 0;\n * //the output of gt0 is 0.\n */\nTone.GreaterThanZero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = this.output = new Tone.WaveShaper(function(val){\n\t\tif (val <= 0){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}, 127);\n\n\t/**\n\t *  scale the first thresholded signal by a large value.\n\t *  this will help with values which are very close to 0\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(10000);\n\n\t//connections\n\tthis._scale.connect(this._thresh);\n};\n\nTone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThanZero} this\n */\nTone.GreaterThanZero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThanZero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/GreaterThanZero\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n *          can compare two signals or a signal and a number.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number} [value=0] the value to compare to the incoming signal\n *  @example\n * var gt = new Tone.GreaterThan(2);\n * var sig = new Tone.Signal(4).connect(gt);\n * //output of gt is equal 1.\n */\nTone.GreaterThan = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  subtract the amount from the incoming signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._param = this.input[0] = new Tone.Subtract(value);\n\tthis.input[1] = this._param.input[1];\n\n\t/**\n\t *  compare that amount to zero\n\t *  @type {Tone.GreaterThanZero}\n\t *  @private\n\t */\n\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t//connect\n\tthis._param.connect(this._gtz);\n};\n\nTone.extend(Tone.GreaterThan, Tone.Signal);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThan} this\n */\nTone.GreaterThan.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._gtz.dispose();\n\tthis._gtz = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThan;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../signal/Scale\";\n\n/**\n *  @class Tone.ScaledEnvelop is an envelope which can be scaled\n *         to any range. It's useful for applying an envelope\n *         to a frequency or any other non-NormalRange signal\n *         parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var scaledEnv = new Tone.ScaledEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"min\" : 200,\n *  \t\"max\" : 2000\n *  });\n *  scaledEnv.connect(oscillator.frequency);\n */\nTone.ScaledEnvelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.Envelope.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\n\t/**\n\t *  scale the incoming signal by an exponent\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.output = new Tone.Pow(options.exponent);\n\n\t/**\n\t *  scale the signal to the desired range\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(options.min, options.max);\n\n\tthis._sig.chain(this._exp, this._scale);\n};\n\nTone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.ScaledEnvelope.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's min output value. This is the value which it\n * starts at.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The envelope's max output value. In other words, the value\n * at the peak of the attack portion of the envelope.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.ScaledEnvelope} this\n */\nTone.ScaledEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaledEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Return the absolute value of an incoming signal.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var signal = new Tone.Signal(-1);\n * var abs = new Tone.Abs();\n * signal.connect(abs);\n * //the output of abs is 1.\n */\nTone.Abs = function(){\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.LessThan}\n\t *  @private\n\t */\n\tthis._abs = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Math.abs(val);\n\t\t}\n\t}, 1024);\n};\n\nTone.extend(Tone.Abs, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.Abs} this\n */\nTone.Abs.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Abs;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Solo lets you isolate a specific audio stream. When\n *         an instance is set to `solo=true`, it will mute all other instances.\n *  @extends {Tone.AudioNode}\n *  @example\n * var soloA = new Tone.Solo()\n * var soloB = new Tone.Solo()\n * soloA.solo = true\n * //no audio will pass through soloB\n */\nTone.Solo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"solo\"], Tone.Solo);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The input and output node\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\t/**\n\t *  A bound _soloed method\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._soloBind = this._soloed.bind(this);\n\n\t//listen for solo events class-wide.\n\tthis.context.on(\"solo\", this._soloBind);\n\t//set initially\n\tthis.solo = options.solo;\n};\n\nTone.extend(Tone.Solo, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @static\n */\nTone.Solo.defaults = {\n\tsolo : false,\n};\n\n/**\n *  Isolates this instance and mutes all other instances of Tone.Solo.\n *  Only one instance can be soloed at a time. A soloed\n *  instance will report `solo=false` when another instance is soloed.\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name solo\n */\nObject.defineProperty(Tone.Solo.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._isSoloed();\n\t},\n\tset : function(solo){\n\t\tif (solo){\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\tthis.context.emit(\"solo\", this);\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Solo.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this.input.gain.value === 0;\n\t}\n});\n\n/**\n * Add this to the soloed array\n * @private\n */\nTone.Solo.prototype._addSolo = function(){\n\tif (!Tone.isArray(this.context._currentSolo)){\n\t\tthis.context._currentSolo = [];\n\t}\n\tif (!this._isSoloed()){\n\t\tthis.context._currentSolo.push(this);\n\t}\n};\n\n/**\n * Remove this from the soloed array\n * @private\n */\nTone.Solo.prototype._removeSolo = function(){\n\tif (this._isSoloed()){\n\t\tvar index = this.context._currentSolo.indexOf(this);\n\t\tthis.context._currentSolo.splice(index, 1);\n\t}\n};\n\n/**\n * @return {Boolean} Is this on the soloed array\n * @private\n */\nTone.Solo.prototype._isSoloed = function(){\n\tif (Tone.isArray(this.context._currentSolo)){\n\t\treturn this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {Boolean} Returns true if no one is soloed\n * @private\n */\nTone.Solo.prototype._noSolos = function(){\n\treturn !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n};\n\n/**\n *  Solo the current instance and unsolo all other instances.\n *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n *  @private\n */\nTone.Solo.prototype._soloed = function(){\n\tif (this._isSoloed()){\n\t\tthis.input.gain.value = 1;\n\t} else if (this._noSolos()){\n\t\t//no one is soloed\n\t\tthis.input.gain.value = 1;\n\t} else {\n\t\tthis.input.gain.value = 0;\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Solo}  this\n */\nTone.Solo.prototype.dispose = function(){\n\tthis.context.off(\"solo\", this._soloBind);\n\tthis._removeSolo();\n\tthis._soloBind = null;\n\tTone.AudioNode.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Solo;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var eqPowGain = new Tone.EqualPowerGain();\n */\nTone.EqualPowerGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._eqPower = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\t//should output 0 when input is 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Tone.equalPowerScale(val);\n\t\t}\n\t}.bind(this), 4096);\n};\n\nTone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.EqualPowerGain} this\n */\nTone.EqualPowerGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._eqPower.dispose();\n\tthis._eqPower = null;\n\treturn this;\n};\n\nexport default Tone.EqualPowerGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var neg = new Tone.Negate();\n * var sig = new Tone.Signal(-2).connect(neg);\n * //output of neg is positive 2. \n */\nTone.Negate = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  negation is done by multiplying by -1\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = this.input = this.output = new Tone.Multiply(-1);\n};\n\nTone.extend(Tone.Negate, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.Negate} this\n */\nTone.Negate.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\treturn this;\n}; \n\nexport default Tone.Negate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Panner\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {AudioRange} pan the initial pan\n *  @param {number} volume The output volume.\n *  @example\n * //pan the incoming signal left and drop the volume\n * var panVol = new Tone.PanVol(-0.25, -12);\n */\nTone.PanVol = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\", \"volume\"], Tone.PanVol);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panning node\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = this.input = new Tone.Panner(options.pan);\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panner.pan;\n\n\t/**\n\t *  The volume node\n\t *  @type {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._volume.volume;\n\n\t//connections\n\tthis._panner.connect(this._volume);\n\tthis.mute = options.mute;\n\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.PanVol, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.PanVol.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.PanVol#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.PanVol.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.PanVol} this\n */\nTone.PanVol.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis.pan = null;\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.PanVol;\n\n","import Tone from \"../core/Tone\";\nif (Tone.supported){\n\n\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t}\n\n\t//returns promise?\n\tvar context = new OfflineAudioContext(1, 1, 44100);\n\tvar ret = context.startRendering();\n\tif (!(ret && Tone.isFunction(ret.then))){\n\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\treturn new Promise(function(done){\n\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t};\n\t\t\t\tthis._native_startRendering();\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","export default \"13.8.34\";\n","import Tone from \"../core/Tone\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Midi is a primitive type for encoding Time values.\n *         Tone.Midi can be constructed with or without the `new` keyword. Tone.Midi can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.Frequency}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Midi(\"4n\");//a quarter note\n */\nTone.Midi = function(val, units){\n\tif (this instanceof Tone.Midi){\n\n\t\tTone.Frequency.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Midi(val, units);\n\t}\n};\n\nTone.extend(Tone.Midi, Tone.Frequency);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Midi.prototype._defaultUnits = \"midi\";\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._frequencyToUnits = function(freq){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._frequencyToUnits.call(this, freq));\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._ticksToUnits = function(ticks){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._ticksToUnits.call(this, ticks));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._beatsToUnits = function(beats){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._beatsToUnits.call(this, beats));\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._secondsToUnits = function(seconds){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._secondsToUnits.call(this, seconds));\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toMidi(); //60\n */\nTone.Midi.prototype.toMidi = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toFrequency(); //261.6255653005986\n */\nTone.Midi.prototype.toFrequency = function(){\n\treturn Tone.Frequency.mtof(this.toMidi());\n};\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Midi(\"A4\").transpose(3); //\"C5\"\n */\nTone.Midi.prototype.transpose = function(interval){\n\treturn new this.constructor(this.toMidi() + interval);\n};\n\nexport default Tone.Midi;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n *          and external microphone or audio input. Check\n *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n *          to see which browsers are supported. Access to an external input\n *          is limited to secure (HTTPS) connections.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels=} volume The level of the input\n *  @example\n * //list the inputs and open the third one\n * var motu = new Tone.UserMedia();\n *\n * //opening the input asks the user to activate their mic\n * motu.open().then(function(){\n * \t//promise resolves when input is available\n * });\n */\n\nTone.UserMedia = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.UserMedia);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The MediaStreamNode\n\t *  @type {MediaStreamAudioSourceNode}\n\t *  @private\n\t */\n\tthis._mediaStream = null;\n\n\t/**\n\t *  The media stream created by getUserMedia.\n\t *  @type {LocalMediaStream}\n\t *  @private\n\t */\n\tthis._stream = null;\n\n\t/**\n\t *  The open device\n\t *  @type  {MediaDeviceInfo}\n\t *  @private\n\t */\n\tthis._device = null;\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * input.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.UserMedia, Tone.AudioNode);\n\n/**\n * the default parameters\n * @type {Object}\n */\nTone.UserMedia.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Open the media stream. If a string is passed in, it is assumed\n *  to be the label or id of the stream, if a number is passed in,\n *  it is the input number of the stream.\n *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n *                                                With no argument, the default stream is opened.\n *  @return {Promise} The promise is resolved when the stream is open.\n */\nTone.UserMedia.prototype.open = function(labelOrId){\n\t//close the previous stream\n\tif (this.state === Tone.State.Started){\n\t\tthis.close();\n\t}\n\treturn Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\tvar device;\n\t\tif (Tone.isNumber(labelOrId)){\n\t\t\tdevice = devices[labelOrId];\n\t\t} else {\n\t\t\tdevice = devices.find(function(device){\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t//didn't find a matching device\n\t\t\tif (!device && devices.length > 0){\n\t\t\t\tdevice = devices[0];\n\t\t\t} else if (!device && Tone.isDefined(labelOrId)){\n\t\t\t\tthrow new Error(\"Tone.UserMedia: no matching device: \"+labelOrId);\n\t\t\t}\n\t\t}\n\t\tthis._device = device;\n\t\t//do getUserMedia\n\t\tvar constraints = {\n\t\t\taudio : {\n\t\t\t\t\"echoCancellation\" : false,\n\t\t\t\t\"sampleRate\" : this.context.sampleRate,\n\t\t\t\t\"noiseSuppression\" : false,\n\t\t\t\t\"mozNoiseSuppression\" : false,\n\t\t\t}\n\t\t};\n\t\tif (device){\n\t\t\tconstraints.audio.deviceId = device.deviceId;\t\t\t\t\n\t\t}\n\t\treturn navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\t\t\t//start a new source only if the previous one is closed\n\t\t\tif (!this._stream){\n\t\t\t\tthis._stream = stream;\n\t\t\t\t//Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\t\tthis._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t\t\t//Connect the MediaStreamSourceNode to a gate gain node\n\t\t\t\tTone.connect(this._mediaStream, this.output);\n\t\t\t}\n\t\t\treturn this;\n\t\t}.bind(this));\n\t}.bind(this));\n};\n\n/**\n *  Close the media stream\n *  @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.close = function(){\n\tif (this._stream){\n\t\tthis._stream.getAudioTracks().forEach(function(track){\n\t\t\ttrack.stop();\n\t\t});\n\t\tthis._stream = null;\n\t\t//remove the old media stream\n\t\tthis._mediaStream.disconnect();\n\t\tthis._mediaStream = null;\n\t}\n\tthis._device = null;\n\treturn this;\n};\n\n/**\n *  Returns a promise which resolves with the list of audio input devices available.\n *  @return {Promise} The promise that is resolved with the devices\n *  @static\n *  @example\n * Tone.UserMedia.enumerateDevices().then(function(devices){\n * \tconsole.log(devices)\n * })\n */\nTone.UserMedia.enumerateDevices = function(){\n\treturn navigator.mediaDevices.enumerateDevices().then(function(devices){\n\t\treturn devices.filter(function(device){\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t});\n};\n\n/**\n *  Returns the playback state of the source, \"started\" when the microphone is open\n *  and \"stopped\" when the mic is closed.\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name state\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n * \tReturns an identifier for the represented device that is\n * \tpersisted across sessions. It is un-guessable by other applications and\n * \tunique to the origin of the calling application. It is reset when the\n * \tuser clears cookies (for Private Browsing, a different identifier is\n * \tused that is not persisted across sessions). Returns undefined when the\n * \tdevice is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name deviceId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"deviceId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a group identifier. Two devices have the\n * \tsame group identifier if they belong to the same physical device.\n * \tReturns undefined when the device is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"groupId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a label describing this device (for example \"Built-in Microphone\").\n * \tReturns undefined when the device is not open or label is not available\n * \tbecause of permissions.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"label\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.UserMedia#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * userMedia.mute = true;\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * Clean up.\n * @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.close();\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\n/**\n *  If getUserMedia is supported by the browser.\n *  @type  {Boolean}\n *  @memberOf Tone.UserMedia#\n *  @name supported\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.UserMedia, \"supported\", {\n\tget : function(){\n\t\treturn Tone.isDefined(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t}\n});\n\nexport default Tone.UserMedia;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Player\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Object} urls An object mapping a name to a url.\n *  @param {function=} onload The function to invoke when all buffers are loaded.\n */\nTone.Players = function(urls){\n\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\"], Tone.Players);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n\n\t/**\n\t * The container of all of the players\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._players = {};\n\n\t/**\n\t * The loading count\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._loadingCount = 0;\n\n\t/**\n\t * private holder of the fadeIn time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeIn = options.fadeIn;\n\n\t/**\n\t * private holder of the fadeOut time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeOut = options.fadeOut;\n\n\t//add all of the players\n\tfor (var name in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Players, Tone.AudioNode);\n\n/**\n * The default values\n * @type {Object}\n */\nTone.Players.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback\n *  @private\n */\nTone.Players.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Players.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * The fadeIn time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeIn\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeIn\", {\n\tget : function(){\n\t\treturn this._fadeIn;\n\t},\n\tset : function(fadeIn){\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n});\n\n/**\n * The fadeOut time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeOut\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeOut\", {\n\tget : function(){\n\t\treturn this._fadeOut;\n\t},\n\tset : function(fadeOut){\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n});\n\n/**\n * The state of the players object. Returns \"started\" if any of the players are playing.\n * @memberOf Tone.Players#\n * @type {String}\n * @name state\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"state\", {\n\tget : function(){\n\t\tvar playing = false;\n\t\tthis._forEach(function(player){\n\t\t\tplaying = playing || player.state === Tone.State.Started;\n\t\t});\n\t\treturn playing ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the\n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Players.prototype.has = function(name){\n\treturn this._players.hasOwnProperty(name);\n};\n\n/**\n *  Get a player by name.\n *  @param  {String}  name  The players name as defined in\n *                          the constructor object or `add` method.\n *  @return  {Tone.Player}\n */\nTone.Players.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._players[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Players: no player named \"+name);\n\t}\n};\n\n/**\n * Iterate over all of the players\n * @param  {Function} callback\n * @return {Tone.Players}            this\n * @private\n */\nTone.Players.prototype._forEach = function(callback){\n\tfor (var playerName in this._players){\n\t\tcallback(this._players[playerName], playerName);\n\t}\n\treturn this;\n};\n\n/**\n * If all the buffers are loaded or not\n * @memberOf Tone.Players#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tthis._forEach(function(player){\n\t\t\tisLoaded = isLoaded && player.loaded;\n\t\t});\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a player by name and url to the Players\n *  @param  {String}    name      A unique name to give the player\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Players.prototype.add = function(name, url, callback){\n\tthis._players[name] = new Tone.Player(url, callback).connect(this.output);\n\tthis._players[name].fadeIn = this._fadeIn;\n\tthis._players[name].fadeOut = this._fadeOut;\n\treturn this;\n};\n\n/**\n * Stop all of the players at the given time\n * @param {Time} time The time to stop all of the players.\n * @return {Tone.Players} this\n */\nTone.Players.prototype.stopAll = function(time){\n\tthis._forEach(function(player){\n\t\tplayer.stop(time);\n\t});\n};\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Players} this\n */\nTone.Players.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable(\"volume\");\n\tthis.volume = null;\n\tthis.output = null;\n\tthis._forEach(function(player){\n\t\tplayer.dispose();\n\t});\n\tthis._players = null;\n\treturn this;\n};\n\nexport default Tone.Players;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n *        amount of time each small chunk of audio is played for and the overlap is the\n *        amount of crossfading transition time between successive grains.\n * @extends {Tone.Source}\n * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n * @param {Function=} callback The callback to invoke after the url is loaded.\n */\nTone.GrainPlayer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.GrainPlayer);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The audio buffer belonging to the player.\n\t *  @type  {Tone.Buffer}\n\t */\n\tthis.buffer = new Tone.Buffer(options.url, options.onload.bind(undefined, this));\n\n\t/**\n\t *  Create a repeating tick to schedule\n\t *  the grains.\n\t *  @type  {Tone.Clock}\n\t *  @private\n\t */\n\tthis._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = 0;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t * @type {Array}\n\t * @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._grainSize = options.grainSize;\n\n\t/**\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._overlap = options.overlap;\n\n\t/**\n\t *  Adjust the pitch independently of the playbackRate.\n\t *  @type  {Cents}\n\t */\n\tthis.detune = options.detune;\n\n\t//setup\n\tthis.overlap = options.overlap;\n\tthis.loop = options.loop;\n\tthis.playbackRate = options.playbackRate;\n\tthis.grainSize = options.grainSize;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n\tthis.reverse = options.reverse;\n\n\tthis._clock.on(\"stop\", this._onstop.bind(this));\n};\n\nTone.extend(Tone.GrainPlayer, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.GrainPlayer.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"overlap\" : 0.1,\n\t\"grainSize\" : 0.2,\n\t\"playbackRate\" : 1,\n\t\"detune\" : 0,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.GrainPlayer} this\n *  @memberOf Tone.GrainPlayer#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @param {Time} offset\n *  @private\n */\nTone.GrainPlayer.prototype._start = function(time, offset, duration){\n\toffset = Tone.defaultArg(offset, 0);\n\toffset = this.toSeconds(offset);\n\ttime = this.toSeconds(time);\n\n\tthis._offset = offset;\n\tthis._clock.start(time);\n\n\tif (duration){\n\t\tthis.stop(time + this.toSeconds(duration));\n\t}\n};\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @private\n */\nTone.GrainPlayer.prototype._stop = function(time){\n\tthis._clock.stop(time);\n};\n\n/**\n * Invoked when the clock is stopped\n * @param  {Number} time\n * @private\n */\nTone.GrainPlayer.prototype._onstop = function(time){\n\t//stop the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.fadeOut = 0;\n\t\tsource.stop(time);\n\t});\n};\n\n/**\n *  Invoked on each clock tick. scheduled a new\n *  grain at this time.\n *  @param  {Time}  time\n *  @private\n */\nTone.GrainPlayer.prototype._tick = function(time){\n\n\t//check if it should stop looping\n\tif (!this.loop && this._offset > this.buffer.duration){\n\t\tthis.stop(time);\n\t\treturn;\n\t}\n\n\t//at the beginning of the file, the fade in should be 0\n\tvar fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\n\t//create a buffer source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this.buffer,\n\t\t\"fadeIn\" : fadeIn,\n\t\t\"fadeOut\" : this._overlap,\n\t\t\"loop\" : this.loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t//compute the playbackRate based on the detune\n\t\t\"playbackRate\" : Tone.intervalToFrequencyRatio(this.detune / 100)\n\t}).connect(this.output);\n\n\tsource.start(time, this._offset);\n\tthis._offset += this.grainSize;\n\tsource.stop(time + this.grainSize / this.playbackRate);\n\n\t//add it to the active sources\n\tthis._activeSources.push(source);\n\t//remove it when it's done\n\tsource.onended = function(){\n\t\tvar index = this._activeSources.indexOf(source);\n\t\tif (index !== -1){\n\t\t\tthis._activeSources.splice(index, 1);\n\t\t}\n\t}.bind(this);\n};\n\n/**\n * The playback rate of the sample\n * @memberOf Tone.GrainPlayer#\n * @type {Positive}\n * @name playbackRate\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n});\n\n/**\n * The loop start time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(time){\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n});\n\n/**\n * The loop end time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(time){\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.GrainPlayer#\n * @type {boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this.buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis.buffer.reverse = rev;\n\t}\n});\n\n/**\n * The size of each chunk of audio that the\n * buffer is chopped into and played back at.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name grainSize\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"grainSize\", {\n\tget : function(){\n\t\treturn this._grainSize;\n\t},\n\tset : function(size){\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.value = this._playbackRate / this._grainSize;\n\t}\n});\n\n/**\n * This is the duration of the cross-fade between\n * sucessive grains.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name overlap\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"overlap\", {\n\tget : function(){\n\t\treturn this._overlap;\n\t},\n\tset : function(time){\n\t\tthis._overlap = this.toSeconds(time);\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.GrainPlayer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this.buffer.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.GrainPlayer} this\n */\nTone.GrainPlayer.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis.buffer.dispose();\n\tthis.buffer = null;\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.GrainPlayer;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../signal/Signal\";\nimport \"../type/TransportTime\";\n\n/**\n * @class Tone.TransportTimelineSignal extends Tone.Signal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n * @extends {Tone.Signal}\n */\nTone.TransportTimelineSignal = function(){\n\tTone.Signal.apply(this, arguments);\n\n\t/**\n\t * The real signal output\n\t * @type {Tone.Signal}\n\t * @private\n\t */\n\tthis.output = this._outputSig = new Tone.Signal(this._initialValue);\n\n\t/**\n\t * Keep track of the last value. (small optimization)\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._lastVal = this.value;\n\n\t/**\n\t * The event id of the tick update loop\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t/**\n\t * A bound version of the anchor value methods\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._bindAnchorValue = this._anchorValue.bind(this);\n\tTone.Transport.on(\"start stop pause\", this._bindAnchorValue);\n\n\tthis._events.memory = Infinity;\n};\n\nTone.extend(Tone.TransportTimelineSignal, Tone.Signal);\n\n/**\n * Callback which is invoked every tick.\n * @private\n * @param  {Number} time\n * @return {Tone.TransportTimelineSignal}      this\n */\nTone.TransportTimelineSignal.prototype._onTick = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tif (this._lastVal !== val){\n\t\tthis._lastVal = val;\n\t\t//approximate ramp curves with linear ramps\n\t\tthis._outputSig.linearRampToValueAtTime(val, time);\n\t}\n};\n\n/**\n * Anchor the value at the start and stop of the Transport\n * @param  {Number} time The time of the event\n * @return {Tone.TransportTimelineSignal}      this\n * @private\n */\nTone.TransportTimelineSignal.prototype._anchorValue = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tthis._lastVal = val;\n\tthis._outputSig.cancelScheduledValues(time);\n\tthis._outputSig.setValueAtTime(val, time);\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {TransportTime}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.TransportTimelineSignal.prototype.getValueAtTime = function(time){\n\ttime = Tone.TransportTime(time);\n\treturn Tone.Signal.prototype.getValueAtTime.call(this, time);\n};\n\n/**\n * Set the output of the signal at the given time\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.setValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Linear ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.linearRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Exponential ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {TransportTime} startTime\n *  @param {number} timeConstant\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *  @param  {TransportTime} startTime\n *  @returns {Tone.Param} this\n */\nTone.TransportTimelineSignal.prototype.cancelScheduledValues = function(startTime){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.cancelScheduledValues.call(this, startTime);\n\treturn this;\n};\n\n/**\n *  Set an array of arbitrary values starting at the given time for the given duration.\n *  @param {Float32Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Signal} this\n */\nTone.TransportTimelineSignal.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tstartTime = Tone.TransportTime(startTime);\n\tduration = Tone.TransportTime(duration);\n\tTone.Signal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function(time){\n\treturn Tone.Signal.prototype.cancelAndHoldAtTime.call(this, Tone.TransportTime(time));\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.dispose = function(){\n\tTone.Transport.clear(this._synced);\n\tTone.Transport.off(\"start stop pause\", this._syncedCallback);\n\tthis._events.cancel(0);\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._outputSig.dispose();\n\tthis._outputSig = null;\n};\n\nexport default Tone.TransportTimelineSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {number} inputMin the min input value\n *  @param {number} inputMax the max input value\n *  @example\n * var norm = new Tone.Normalize(2, 4);\n * var sig = new Tone.Signal(3).connect(norm);\n * //output of norm is 0.5. \n */\nTone.Normalize = function(inputMin, inputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  the min input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMin = Tone.defaultArg(inputMin, 0);\n\n\t/**\n\t *  the max input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMax = Tone.defaultArg(inputMax, 1);\n\n\t/**\n\t *  subtract the min from the input\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._sub = this.input = new Tone.Add(0);\n\n\t/**\n\t *  divide by the difference between the input and output\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._div = this.output = new Tone.Multiply(1);\n\n\tthis._sub.connect(this._div);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Normalize, Tone.SignalBase);\n\n/**\n * The minimum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Normalize.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._inputMin;\n\t},\n\tset : function(min){\n\t\tthis._inputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Normalize.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._inputMax;\n\t},\n\tset : function(max){\n\t\tthis._inputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Normalize.prototype._setRange = function(){\n\tthis._sub.value = -this._inputMin;\n\tthis._div.value = 1 / (this._inputMax - this._inputMin);\n};\n\n/**\n *  clean up\n *  @returns {Tone.Normalize} this\n */\nTone.Normalize.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._sub.dispose();\n\tthis._sub = null;\n\tthis._div.dispose();\n\tthis._div = null;\n\treturn this;\n};\n\nexport default Tone.Normalize;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n *         See also Tone.AudioToGain. \n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var g2a = new Tone.GainToAudio();\n */\nTone.GainToAudio = function(){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn Math.abs(x) * 2 - 1;\n\t});\n};\n\nTone.extend(Tone.GainToAudio, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.GainToAudio} this\n */\nTone.GainToAudio.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.GainToAudio;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../core/Buffers\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n * @param {Object} samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param {Function=} onload The callback to invoke when all of the samples are loaded.\n * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Tone.Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n * @extends {Tone.Instrument}\n */\nTone.Sampler = function(urls){\n\n\t// shift arguments over one. Those are the remainder of the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Sampler);\n\tTone.Instrument.call(this, options);\n\n\tvar urlMap = {};\n\tfor (var note in urls){\n\t\tif (Tone.isNote(note)){\n\t\t\t//convert the note name to MIDI\n\t\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\t\turlMap[mid] = urls[note];\n\t\t} else if (!isNaN(parseFloat(note))){\n\t\t\t//otherwise if it's numbers assume it's midi\n\t\t\turlMap[note] = urls[note];\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Sampler: url keys must be the note's pitch\");\n\t\t}\n\t}\n\n\t/**\n\t * The stored and loaded buffers\n\t * @type {Tone.Buffers}\n\t * @private\n\t */\n\tthis._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._activeSources = {};\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  The shape of the attack/release curve.\n\t *  Either \"linear\" or \"exponential\"\n\t *  @type {String}\n\t */\n\tthis.curve = options.curve;\n};\n\nTone.extend(Tone.Sampler, Tone.Instrument);\n\n/**\n * The defaults\n * @const\n * @type {Object}\n */\nTone.Sampler.defaults = {\n\t\"attack\" : 0,\n\t\"release\" : 0.1,\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\",\n\t\"curve\" : \"exponential\"\n};\n\n/**\n * Returns the difference in steps between the given midi note at the closets sample.\n * @param  {Midi} midi\n * @return {Interval}\n * @private\n */\nTone.Sampler.prototype._findClosest = function(midi){\n\t//searches within 8 octaves of the given midi note\n\tvar MAX_INTERVAL = 96; \n\tvar interval = 0;\n\twhile (interval < MAX_INTERVAL){\n\t\t// check above and below\n\t\tif (this._buffers.has(midi + interval)){\n\t\t\treturn -interval;\n\t\t} else if (this._buffers.has(midi - interval)){\n\t\t\treturn interval;\n\t\t}\n\t\tinterval++;\n\t}\n\tthrow new Error(\"No available buffers for note: \"+midi);\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to play, or an array of notes.\n * @param  {Time=} time     When to play the note\n * @param  {NormalRange=} velocity The velocity to play the sample back.\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttack = function(notes, time, velocity){\n\tthis.log(\"triggerAttack\", notes, time, velocity);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){ \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the closest note pitch\n\t\tvar difference = this._findClosest(midi);\n\t\tvar closestNote = midi - difference;\n\t\tvar buffer = this._buffers.get(closestNote);\n\t\tvar playbackRate = Tone.intervalToFrequencyRatio(difference);\n\t\t// play that note\n\t\tvar source = new Tone.BufferSource({\n\t\t\t\"buffer\" : buffer,\n\t\t\t\"playbackRate\" : playbackRate,\n\t\t\t\"fadeIn\" : this.attack,\n\t\t\t\"fadeOut\" : this.release,\n\t\t\t\"curve\" : this.curve,\n\t\t}).connect(this.output);\n\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t// add it to the active sources\n\t\tif (!Tone.isArray(this._activeSources[midi])){\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t\tthis._activeSources[midi].push(source);\n\n\t\t//remove it when it's done\n\t\tsource.onended = function(){\n\t\t\tif (this._activeSources && this._activeSources[midi]){\n\t\t\t\tvar index = this._activeSources[midi].indexOf(source);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tthis._activeSources[midi].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\treturn this;\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to release, or an array of notes.\n * @param  {Time=} time     \tWhen to release the note.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.triggerRelease = function(notes, time){\n\tthis.log(\"triggerRelease\", notes, time);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){  \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the note\n\t\tif (this._activeSources[midi] && this._activeSources[midi].length){\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//stop all the sources on that midi note\n\t\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\t\tsource.stop(time);\n\t\t\t});\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Release all currently active notes.\n * @param  {Time=} time     \tWhen to release the notes.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tfor (var note in this._activeSources){\n\t\tvar sources = this._activeSources[note];\n\t\twhile (sources.length){\n\t\t\tvar source = sources.shift();\n\t\t\tsource.stop(time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Sampler.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n * Invoke the attack phase, then after the duration, invoke the release.\n * @param  {(Frequency|Frequency[])} notes\tThe note to play and release, or an array of notes.\n * @param  {(Time|Time[])} duration The time the note should be held\n * @param  {Time=} time     When to start the attack\n * @param  {NormalRange} [velocity=1] The velocity of the attack\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n *  Add a note to the sampler.\n *  @param  {Note|Midi}   note      The buffer's pitch.\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Sampler.prototype.add = function(note, url, callback){\n\tif (Tone.isNote(note)){\n\t\t//convert the note name to MIDI\n\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\tthis._buffers.add(mid, url, callback);\n\t} else if (!isNaN(parseFloat(note))){\n\t\t//otherwise if it's numbers assume it's midi\n\t\tthis._buffers.add(note, url, callback);\n\t} else {\n\t\tthrow new Error(\"Tone.Sampler: note must be the note's pitch. Instead got \"+note);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Sampler#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Sampler.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this._buffers.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.Sampler} this\n */\nTone.Sampler.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._buffers.dispose();\n\tthis._buffers = null;\n\tfor (var midi in this._activeSources){\n\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\tsource.dispose();\n\t\t});\n\t}\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.Sampler;\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../source/Source\";\n\n/**\n *  @class  Tone.PolySynth handles voice creation and allocation for any\n *          instruments passed in as the second paramter. PolySynth is\n *          not a synthesizer by itself, it merely manages voices of\n *          one of the other types of synths, allowing any of the\n *          monophonic synthesizers to be polyphonic.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {number|Object} [polyphony=4] The number of voices to create\n *  @param {function} [voice=Tone.Synth] The constructor of the voices\n *                                            uses Tone.Synth by default.\n *  @param {...*}\tvoiceArgs\tAll additional arguments will be passed into the class constructor.\n *  @example\n * //a polysynth composed of 6 Voices of Synth\n * var synth = new Tone.PolySynth(6, Tone.Synth, {\n *   oscillator : {\n * \t\ttype : \"square\"\n * \t}\n * }).toMaster();\n * //set the attributes using the set interface\n * synth.set(\"detune\", -1200);\n * //play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n */\nTone.PolySynth = function(){\n\n\tvar options = Tone.defaults(arguments, [\"polyphony\", \"voice\"], Tone.PolySynth);\n\tTone.Instrument.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\n\t//max polyphony\n\toptions.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\n\t/**\n\t *  the array of voices\n\t *  @type {Array}\n\t */\n\tthis.voices = new Array(options.polyphony);\n\tthis.assert(options.polyphony > 0, \"polyphony must be greater than 0\");\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\tthis._readOnly(\"detune\");\n\n\t//create the voices\n\tfor (var i = 0; i < options.polyphony; i++){\n\t\tvar v = new options.voice(arguments[2], arguments[3]);\n\t\tif (!(v instanceof Tone.Monophonic)){\n\t\t\tthrow new Error(\"Synth constructor must be instance of Tone.Monophonic\");\n\t\t}\n\t\tthis.voices[i] = v;\n\t\tv.index = i;\n\t\tv.connect(this.output);\n\t\tif (v.hasOwnProperty(\"detune\")){\n\t\t\tthis.detune.connect(v.detune);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.PolySynth, Tone.Instrument);\n\n/**\n *  the defaults\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.PolySynth.defaults = {\n\t\"polyphony\" : 4,\n\t\"volume\" : 0,\n\t\"detune\" : 0,\n\t\"voice\" : Tone.Synth\n};\n\n/**\n *  Get the closest available voice, that is the\n *  one that is either the closest to the note,\n *  or has the lowest envelope value.\n *  @param {Time} time return the voice that has the lowest energy at this time.\n *  @param  {Note}  note  if there is a voice with this note, that should be returned\n *  @return  {Tone.Monophonic}  A synth voice.\n *  @private\n */\nTone.PolySynth.prototype._getClosestVoice = function(time, note){\n\t//play the note which has the same frequency, if that exists\n\tvar sameNote = this.voices.find(function(voice){\n\t\t//break if it's within a small epsion of the voice's frequency\n\t\tif (Math.abs(voice.frequency.getValueAtTime(time) - Tone.Frequency(note)) < 1e-4 && \n\t\t\t//and that note is currently active\n\t\t\tvoice.getLevelAtTime(time) > 1e-5){\n\t\t\treturn voice;\n\t\t} \n\t});\n\tif (sameNote){\n\t\treturn sameNote;\n\t}\n\n\tvar sortedVoices = this.voices.slice().sort(function(a, b){\n\t\t//check that it's not scheduled in the future\n\t\tvar aLevel = a.getLevelAtTime(time + this.blockTime);\n\t\tvar bLevel = b.getLevelAtTime(time + this.blockTime);\n\n\t\tvar silenceThresh = 1e-5;\n\t\tif (aLevel < silenceThresh){\n\t\t\taLevel = 0;\n\t\t}\n\t\tif (bLevel < silenceThresh){\n\t\t\tbLevel = 0;\n\t\t}\n\t\treturn aLevel - bLevel;\n\t}.bind(this));\n\n\treturn sortedVoices[0];\n};\n\n/**\n *  Trigger the attack portion of the note\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  The start time of the note.\n *  @param {number} [velocity=1] The velocity of the note.\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord immediately with a velocity of 0.2\n * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n */\nTone.PolySynth.prototype.triggerAttack = function(notes, time, velocity){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tvoice.triggerAttack(note, time, velocity);\n\t\tthis.log(\"triggerAttack\", voice.index, note);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the release of the note. Unlike monophonic instruments,\n *  a note (or array of notes) needs to be passed in as the first argument.\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  When the release will be triggered.\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n */\nTone.PolySynth.prototype.triggerRelease = function(notes, time){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tthis.log(\"triggerRelease\", voice.index, note);\n\t\tvoice.triggerRelease(time);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release after the specified duration\n *\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     if no time is given, defaults to now\n *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord for a duration of a half note\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n *  @example\n * //can pass in an array of durations as well\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n */\nTone.PolySynth.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.PolySynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n *  Set a member/attribute of the voices.\n *  @param {Object|string} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.set({\n * \t\"filter\" : {\n * \t\t\"type\" : \"highpass\"\n * \t},\n * \t\"envelope\" : {\n * \t\t\"attack\" : 0.25\n * \t}\n * });\n */\nTone.PolySynth.prototype.set = function(params, value, rampTime){\n\tfor (var i = 0; i < this.voices.length; i++){\n\t\tthis.voices[i].set(params, value, rampTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the synth's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=} params the parameters to get, otherwise will return\n *  \t\t\t\t\t   all available.\n */\nTone.PolySynth.prototype.get = function(params){\n\treturn this.voices[0].get(params);\n};\n\n/**\n *  Trigger the release portion of all the currently active voices.\n *  @param {Time} [time=now] When the notes should be released.\n *  @return {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.triggerRelease(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.dispose();\n\t});\n\tthis._writable(\"detune\");\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.voices = null;\n\treturn this;\n};\n\n/**\n *  The maximum number of notes that can be allocated\n *  to a polysynth.\n *  @type  {Number}\n *  @static\n */\nTone.PolySynth.MAX_POLYPHONY = 20;\n\nexport default Tone.PolySynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/Noise\";\nimport \"../component/LowpassCombFilter\";\n\n/**\n *  @class Karplus-String string synthesis. Often out of tune.\n *         Will change when the AudioWorkerNode is available across\n *         browsers.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] see the defaults\n *  @example\n * var plucky = new Tone.PluckSynth().toMaster();\n * plucky.triggerAttack(\"C4\");\n */\nTone.PluckSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  @type {Tone.Noise}\n\t *  @private\n\t */\n\tthis._noise = new Tone.Noise(\"pink\");\n\n\t/**\n\t *  The amount of noise at the attack.\n\t *  Nominal range of [0.1, 20]\n\t *  @type {number}\n\t */\n\tthis.attackNoise = options.attackNoise;\n\n\t/**\n\t *  the LFCF\n\t *  @type {Tone.LowpassCombFilter}\n\t *  @private\n\t */\n\tthis._lfcf = new Tone.LowpassCombFilter({\n\t\t\"resonance\" : options.resonance,\n\t\t\"dampening\" : options.dampening\n\t});\n\n\t/**\n\t *  The resonance control.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._lfcf.resonance;\n\n\t/**\n\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lfcf.dampening;\n\n\t//connections\n\tthis._noise.connect(this._lfcf);\n\tthis._lfcf.connect(this.output);\n\tthis._readOnly([\"resonance\", \"dampening\"]);\n};\n\nTone.extend(Tone.PluckSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PluckSynth.defaults = {\n\t\"attackNoise\" : 1,\n\t\"dampening\" : 4000,\n\t\"resonance\" : 0.7\n};\n\n/**\n *  Trigger the note.\n *  @param {Frequency} note The note to trigger.\n *  @param {Time} [time=now] When the note should be triggered.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.triggerAttack = function(note, time){\n\tnote = this.toFrequency(note);\n\ttime = this.toSeconds(time);\n\tvar delayAmount = 1 / note;\n\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\tthis._noise.start(time);\n\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\treturn this;\n};\n\n/**\n *\tMake this method which belongs to the parent class private since\n *\tPluckSynth does not have any 'release' method.\n * \t@memberOf Tone.PluckSynth#\n *  @function\n *  @private\n *  @name triggerAttackRelease\n */\n\n/**\n *  Clean up.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._noise.dispose();\n\tthis._lfcf.dispose();\n\tthis._noise = null;\n\tthis._lfcf = null;\n\tthis._writable([\"resonance\", \"dampening\"]);\n\tthis.dampening = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.PluckSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/Noise\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Instrument\";\n\n/**\n *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter),\n *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n *          of the noise and the other is controls the cutoff frequency of the filter.\n *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n * @example\n * var noiseSynth = new Tone.NoiseSynth().toMaster();\n * noiseSynth.triggerAttackRelease(\"8n\");\n */\nTone.NoiseSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The noise source.\n\t *  @type {Tone.Noise}\n\t *  @example\n\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t */\n\tthis.noise = new Tone.Noise(options.noise);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the noise to the output\n\tthis.noise.chain(this.envelope, this.output);\n\tthis._readOnly([\"noise\", \"envelope\"]);\n};\n\nTone.extend(Tone.NoiseSynth, Tone.Instrument);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.NoiseSynth.defaults = {\n\t\"noise\" : {\n\t\t\"type\" : \"white\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.0,\n\t}\n};\n\n/**\n *  Start the attack portion of the envelopes. Unlike other\n *  instruments, Tone.NoiseSynth doesn't have a note.\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.NoiseSynth} this\n *  @example\n * noiseSynth.triggerAttack();\n */\nTone.NoiseSynth.prototype.triggerAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\t//start the noise\n\tthis.noise.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.noise.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Start the release portion of the envelopes.\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.noise.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.NoiseSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     the time of the attack\n *  @param  {number} [velocity=1] the velocity\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"noise\", \"envelope\"]);\n\tthis.noise.dispose();\n\tthis.noise = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.NoiseSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/FMOscillator\";\nimport \"../component/Filter\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../core/Gain\";\nimport \"../signal/Scale\";\nimport \"../signal/Multiply\";\n\n/**\n *  Inharmonic ratio of frequencies based on the Roland TR-808\n *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n *  @private\n *  @static\n *  @type {Array}\n */\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n\n/**\n *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n *          and amplitude envelope which is good for making metalophone sounds. Based\n *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] The options availble for the synth\n *                             see defaults below\n */\nTone.MetalSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The frequency of the cymbal\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The array of FMOscillators\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The frequency multipliers\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._freqMultipliers = [];\n\n\t/**\n\t *  The amplitude for the body\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitue = new Tone.Gain(0).connect(this.output);\n\n\t/**\n\t *  highpass the output\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._highpass = new Tone.Filter({\n\t\t\"type\" : \"highpass\",\n\t\t\"Q\" : -3.0102999566398125\n\t}).connect(this._amplitue);\n\n\t/**\n\t *  The number of octaves the highpass\n\t *  filter frequency ramps\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  Scale the body envelope\n\t *  for the bandpass\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\n\t/**\n\t *  The envelope which is connected both to the\n\t *  amplitude and highpass filter's cutoff frequency\n\t *  @type  {Tone.Envelope}\n\t */\n\tthis.envelope = new Tone.Envelope({\n\t\t\"attack\" : options.envelope.attack,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decay\" : options.envelope.decay,\n\t\t\"sustain\" : 0,\n\t\t\"release\" : options.envelope.release,\n\t}).chain(this._filterFreqScaler, this._highpass.frequency);\n\tthis.envelope.connect(this._amplitue.gain);\n\n\tfor (var i = 0; i < inharmRatios.length; i++){\n\t\tvar osc = new Tone.FMOscillator({\n\t\t\t\"type\" : \"square\",\n\t\t\t\"modulationType\" : \"square\",\n\t\t\t\"harmonicity\" : options.harmonicity,\n\t\t\t\"modulationIndex\" : options.modulationIndex\n\t\t});\n\t\tosc.connect(this._highpass);\n\t\tthis._oscillators[i] = osc;\n\n\t\tvar mult = new Tone.Multiply(inharmRatios[i]);\n\t\tthis._freqMultipliers[i] = mult;\n\t\tthis.frequency.chain(mult, osc.frequency);\n\t}\n\n\t//set the octaves\n\tthis.octaves = options.octaves;\n\n};\n\nTone.extend(Tone.MetalSynth, Tone.Instrument);\n\n/**\n *  default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.MetalSynth.defaults = {\n\t\"frequency\" : 200,\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 1.4,\n\t\t\"release\" : 0.2\n\t},\n\t\"harmonicity\" : 5.1,\n\t\"modulationIndex\" : 32,\n\t\"resonance\" : 4000,\n\t\"octaves\" : 1.5\n};\n\n/**\n *  Trigger the attack.\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttack = function(time, vel){\n\ttime = this.toSeconds(time);\n\tvel = Tone.defaultArg(vel, 1);\n\tthis.envelope.triggerAttack(time, vel);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.start(time);\n\t});\n\t//if the sustain is 0, stop the oscillator as well\n\tif (this.envelope.sustain === 0){\n\t\tthis._oscillators.forEach(function(osc){\n\t\t\tosc.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}.bind(this));\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release of the envelope.\n *  @param  {Time}  time      When the release should be triggered.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.stop(time + this.envelope.release);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.MetalSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release of the envelope after the given\n *  duration.\n *  @param  {Time}  duration  The duration before triggering the release\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  The modulationIndex of the oscillators which make up the source.\n *  see Tone.FMOscillator.modulationIndex\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  modulationIndex\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].modulationIndex.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The harmonicity of the oscillators which make up the source.\n *  see Tone.FMOscillator.harmonicity\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  harmonicity\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"harmonicity\", {\n\tget : function(){\n\t\treturn this._oscillators[0].harmonicity.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].harmonicity.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The frequency of the highpass filter attached to the envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Frequency}\n *  @name  resonance\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"resonance\", {\n\tget : function(){\n\t\treturn this._filterFreqScaler.min;\n\t},\n\tset : function(val){\n\t\tthis._filterFreqScaler.min = val;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  The number of octaves above the \"resonance\" frequency\n *  that the filter ramps during the attack/decay envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Number}\n *  @name  octaves\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octs){\n\t\tthis._octaves = octs;\n\t\tthis._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t}\n});\n\n/**\n *  Clean up\n *  @returns {Tone.MetalSynth} this\n */\nTone.MetalSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\tthis._oscillators[i].dispose();\n\t\tthis._freqMultipliers[i].dispose();\n\t}\n\tthis._oscillators = null;\n\tthis._freqMultipliers = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._filterFreqScaler.dispose();\n\tthis._filterFreqScaler = null;\n\tthis._amplitue.dispose();\n\tthis._amplitue = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis._highpass.dispose();\n\tthis._highpass = null;\n};\n\nexport default Tone.MetalSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Instrument\";\nimport \"../component/AmplitudeEnvelope\";\n\n/**\n *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n *          quality of the sound comes from the frequency envelope applied\n *          during Tone.MembraneSynth.triggerAttack(note). The frequency envelope\n *          starts at <code>note * .octaves</code> and ramps to <code>note</code>\n *          over the duration of <code>.pitchDecay</code>.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MembraneSynth().toMaster();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n */\nTone.MembraneSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t/**\n\t *  The number of octaves the pitch envelope ramps.\n\t *  @type {Positive}\n\t */\n\tthis.octaves = options.octaves;\n\n\t/**\n\t *  The amount of time the frequency envelope takes.\n\t *  @type {Time}\n\t */\n\tthis.pitchDecay = options.pitchDecay;\n\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"envelope\"]);\n};\n\nTone.extend(Tone.MembraneSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.MembraneSynth.defaults = {\n\t\"pitchDecay\" : 0.05,\n\t\"octaves\" : 10,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\",\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.4,\n\t\t\"sustain\" : 0.01,\n\t\t\"release\" : 1.4,\n\t\t\"attackCurve\" : \"exponential\"\n\t}\n};\n\n/**\n *  Trigger the note at the given time with the given velocity.\n *\n *  @param  {Frequency} note     the note\n *  @param  {Time} [time=now]     the time, if not given is now\n *  @param  {number} [velocity=1] velocity defaults to 1\n *  @returns {Tone.MembraneSynth} this\n *  @example\n *  kick.triggerAttack(60);\n */\nTone.MembraneSynth.prototype.triggerAttack = function(note, time, velocity){\n\ttime = this.toSeconds(time);\n\tnote = this.toFrequency(note);\n\tvar maxNote = note * this.octaves;\n\tthis.oscillator.frequency.setValueAtTime(maxNote, time);\n\tthis.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the note.\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.MembraneSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n *          the frequency of a second Tone.Synth. A lot of spectral content\n *          can be explored using the modulationIndex parameter. Read more about\n *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var fmSynth = new Tone.FMSynth().toMaster();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n */\nTone.FMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth(options.carrier);\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator;\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth(options.modulator);\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.FMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"modulationIndex\" : 10,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * \ttrigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {number} [velocity=1] the velocity of the note\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.FMSynth} this\n */\nTone.FMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.FMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/MonoSynth\";\nimport \"../component/LFO\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../core/Param\";\n\n/**\n *  @class  Tone.DuoSynth is a monophonic synth composed of two\n *          MonoSynths run in parallel with control over the\n *          frequency ratio between the two voices and vibrato effect.\n *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var duoSynth = new Tone.DuoSynth().toMaster();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n */\nTone.DuoSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  the first voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice0 = new Tone.MonoSynth(options.voice0);\n\tthis.voice0.volume.value = -10;\n\n\t/**\n\t *  the second voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice1 = new Tone.MonoSynth(options.voice1);\n\tthis.voice1.volume.value = -10;\n\n\t/**\n\t *  The vibrato LFO.\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\tthis._vibrato.start();\n\n\t/**\n\t * the vibrato frequency\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.vibratoRate = this._vibrato.frequency;\n\n\t/**\n\t *  the vibrato gain\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\n\t/**\n\t * The amount of vibrato\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t/**\n\t *  the frequency control\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this.voice0.frequency);\n\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\tthis._vibrato.connect(this._vibratoGain);\n\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\tthis.voice0.connect(this.output);\n\tthis.voice1.connect(this.output);\n\tthis._readOnly([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n};\n\nTone.extend(Tone.DuoSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.DuoSynth.defaults = {\n\t\"vibratoAmount\" : 0.5,\n\t\"vibratoRate\" : 5,\n\t\"harmonicity\" : 1.5,\n\t\"voice0\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t},\n\t\"voice1\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t}\n};\n\n/**\n *  start the attack portion of the envelopes\n *\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelopes\n *\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.voice0._triggerEnvelopeRelease(time);\n\tthis.voice1._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.DuoSynth.prototype.getLevelAtTime = function(time){\n\treturn (this.voice0.getLevelAtTime(time) + this.voice1.getLevelAtTime(time))/2;\n};\n\n/**\n *  clean up\n *  @returns {Tone.DuoSynth} this\n */\nTone.DuoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\tthis.voice0.dispose();\n\tthis.voice0 = null;\n\tthis.voice1.dispose();\n\tthis.voice1 = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._vibratoGain.dispose();\n\tthis._vibratoGain = null;\n\tthis._vibrato = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis.vibratoAmount.dispose();\n\tthis.vibratoAmount = null;\n\tthis.vibratoRate = null;\n\treturn this;\n};\n\nexport default Tone.DuoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../signal/AudioToGain\";\nimport \"../core/Gain\";\n\n/**\n *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n *          the two signals) affects the timbre of the output signal greatly.\n *          Read more about Amplitude Modulation Synthesis on\n *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                            see defaults below\n *  @example\n * var synth = new Tone.AMSynth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n */\nTone.AMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth();\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator.set(options.oscillator);\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth();\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain();\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.AMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n *  trigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {NormalRange} [velocity=1] the velocity of the note\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the port glide\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.AMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Part\";\nimport \"../core/Transport\";\n\n/**\n *  @class A sequence is an alternate notation of a part. Instead\n *         of passing in an array of [time, event] pairs, pass\n *         in an array of events which will be spaced at the\n *         given subdivision. Sub-arrays will subdivide that beat\n *         by the number of items are in the array.\n *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n *  @param  {Function}  callback  The callback to invoke with every note\n *  @param  {Array}    events  The sequence\n *  @param  {Time} subdivision  The subdivision between which events are placed.\n *  @extends {Tone.Part}\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //straight quater notes\n * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n */\nTone.Sequence = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\", \"subdivision\"], Tone.Sequence);\n\n\t//remove the events\n\tvar events = options.events;\n\tdelete options.events;\n\n\tTone.Part.call(this, options);\n\n\t/**\n\t *  The subdivison of each note\n\t *  @type  {Ticks}\n\t *  @private\n\t */\n\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t//if no time was passed in, the loop end is the end of the cycle\n\tif (Tone.isUndef(options.loopEnd) && Tone.isDefined(events)){\n\t\tthis._loopEnd = (events.length * this._subdivision);\n\t}\n\t//defaults to looping\n\tthis._loop = true;\n\n\t//add all of the events\n\tif (Tone.isDefined(events)){\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tthis.add(i, events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Sequence, Tone.Part);\n\n/**\n *  The default values.\n *  @type  {Object}\n */\nTone.Sequence.defaults = {\n\t\"subdivision\" : \"4n\",\n};\n\n/**\n *  The subdivision of the sequence. This can only be\n *  set in the constructor. The subdivision is the\n *  interval between successive steps.\n *  @type {Time}\n *  @memberOf Tone.Sequence#\n *  @name subdivision\n *  @readOnly\n */\nObject.defineProperty(Tone.Sequence.prototype, \"subdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._subdivision).toSeconds();\n\t}\n});\n\n/**\n *  Get/Set an index of the sequence. If the index contains a subarray,\n *  a Tone.Sequence representing that sub-array will be returned.\n *  @example\n * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n * sequence.at(0)// => returns \"E4\"\n * //set a value\n * sequence.at(0, \"G3\");\n * //get a nested sequence\n * sequence.at(3).at(1)// => returns \"Bb3\"\n * @param {Positive} index The index to get or set\n * @param {*} value Optionally pass in the value to set at the given index.\n */\nTone.Sequence.prototype.at = function(index, value){\n\t//if the value is an array,\n\tif (Tone.isArray(value)){\n\t\t//remove the current event at that index\n\t\tthis.remove(index);\n\t}\n\t//call the parent's method\n\treturn Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n};\n\n/**\n *  Add an event at an index, if there's already something\n *  at that index, overwrite it. If `value` is an array,\n *  it will be parsed as a subsequence.\n *  @param {Number} index The index to add the event to\n *  @param {*} value The value to add at that index\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.add = function(index, value){\n\tif (value === null){\n\t\treturn this;\n\t}\n\tif (Tone.isArray(value)){\n\t\t//make a subsequence and add that to the sequence\n\t\tvar subSubdivision = Math.round(this._subdivision / value.length);\n\t\tvalue = new Tone.Sequence(this._tick.bind(this), value, Tone.Ticks(subSubdivision));\n\t}\n\tTone.Part.prototype.add.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Remove a value from the sequence by index\n *  @param {Number} index The index of the event to remove\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.remove = function(index, value){\n\tTone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Get the time of the index given the Sequence's subdivision\n *  @param  {Number}  index\n *  @return  {Time}  The time of that index\n *  @private\n */\nTone.Sequence.prototype._indexTime = function(index){\n\tif (index instanceof Tone.TransportTime){\n\t\treturn index;\n\t} else {\n\t\treturn Tone.Ticks(index * this._subdivision + this.startOffset).toSeconds();\n\t}\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Sequence} this\n */\nTone.Sequence.prototype.dispose = function(){\n\tTone.Part.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Sequence;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Loop\";\nimport \"../control/CtrlPattern\";\n\n/**\n *  @class Tone.Pattern arpeggiates between the given notes\n *         in a number of patterns. See Tone.CtrlPattern for\n *         a full list of patterns.\n *  @example\n * var pattern = new Tone.Pattern(function(time, note){\n *   //the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n *  @extends {Tone.Loop}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Array} values The values to arpeggiate over.\n */\nTone.Pattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"values\", \"pattern\"], Tone.Pattern);\n\tTone.Loop.call(this, options);\n\n\t/**\n\t *  The pattern manager\n\t *  @type {Tone.CtrlPattern}\n\t *  @private\n\t */\n\tthis._pattern = new Tone.CtrlPattern({\n\t\t\"values\" : options.values, \n\t\t\"type\" : options.pattern,\n\t\t\"index\" : options.index\n\t});\n};\n\nTone.extend(Tone.Pattern, Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Pattern.defaults = {\n\t\"pattern\" : Tone.CtrlPattern.Type.Up,\n\t\"callback\" : Tone.noOp,\n\t\"values\" : [],\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Pattern.prototype._tick = function(time){\n\tthis.callback(time, this._pattern.value);\n\tthis._pattern.next();\n};\n\n/**\n *  The current index in the values array.\n *  @memberOf Tone.Pattern#\n *  @type {Positive}\n *  @name index\n */\nObject.defineProperty(Tone.Pattern.prototype, \"index\", {\n\tget : function(){\n\t\treturn this._pattern.index;\n\t},\n\tset : function(i){\n\t\tthis._pattern.index = i;\n\t}\n});\n\n/**\n *  The array of events.\n *  @memberOf Tone.Pattern#\n *  @type {Array}\n *  @name values\n */\nObject.defineProperty(Tone.Pattern.prototype, \"values\", {\n\tget : function(){\n\t\treturn this._pattern.values;\n\t},\n\tset : function(vals){\n\t\tthis._pattern.values = vals;\n\t}\n});\n\n/**\n *  The current value of the pattern.\n *  @memberOf Tone.Pattern#\n *  @type {*}\n *  @name value\n *  @readOnly\n */\nObject.defineProperty(Tone.Pattern.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._pattern.value;\n\t}\n});\n\n/**\n *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n *  @memberOf Tone.Pattern#\n *  @type {String}\n *  @name pattern\n */\nObject.defineProperty(Tone.Pattern.prototype, \"pattern\", {\n\tget : function(){\n\t\treturn this._pattern.type;\n\t},\n\tset : function(pattern){\n\t\tthis._pattern.type = pattern;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Pattern}  this\n */\nTone.Pattern.prototype.dispose = function(){\n\tTone.Loop.prototype.dispose.call(this);\n\tthis._pattern.dispose();\n\tthis._pattern = null;\n};\n\nexport default Tone.Pattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../core/Delay\";\nimport \"../component/LFO\";\n\n/**\n *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n *         modulates the delayTime of the delay, causing the pitch to rise\n *         and fall. \n *  @extends {Tone.Effect}\n *  @param {Frequency} frequency The frequency of the vibrato.\n *  @param {NormalRange} depth The amount the pitch is modulated.\n */\nTone.Vibrato = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Vibrato);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The delay node used for the vibrato effect\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(0, options.maxDelay);\n\n\t/**\n\t *  The LFO used to control the vibrato\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"type\" : options.type,\n\t\t\"min\" : 0,\n\t\t\"max\" : options.maxDelay, \n\t\t\"frequency\" : options.frequency,\n\t\t\"phase\" : -90 //offse the phase so the resting position is in the center\n\t}).start().connect(this._delayNode.delayTime);\n\n\t/**\n\t *  The frequency of the vibrato\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The depth of the vibrato. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\tthis.depth.value = options.depth;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n};\n\nTone.extend(Tone.Vibrato, Tone.Effect);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n */\nTone.Vibrato.defaults = {\n\t\"maxDelay\" : 0.005,\n\t\"frequency\" : 5,\n\t\"depth\" : 0.1,\n\t\"type\" : \"sine\"\n};\n\n/**\n * Type of oscillator attached to the Vibrato.\n * @memberOf Tone.Vibrato#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Vibrato.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Vibrato} this\n */\nTone.Vibrato.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n};\n\nexport default Tone.Vibrato;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n *         The type, frequency, and depth of the LFO is controllable.\n *\n *  @extends {Tone.StereoEffect}\n *  @constructor\n *  @param {Frequency} [frequency] The rate of the effect.\n *  @param {NormalRange} [depth] The depth of the effect.\n *  @example\n * //create a tremolo and start it's LFO\n * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n * //route an oscillator through the tremolo and start it\n * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n */\nTone.Tremolo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Tremolo);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeL = new Tone.Gain();\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeR = new Tone.Gain();\n\n\t/**\n\t *  The frequency of the tremolo.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The depth of the effect. A depth of 0, has no effect\n\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t *  modulate fully between 0 and 1.\n\t *  @type  {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\tthis._lfoL.connect(this._amplitudeL.gain);\n\tthis._lfoR.connect(this._amplitudeR.gain);\n\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\tthis.type = options.type;\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Tremolo, Tone.StereoEffect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Tremolo.defaults = {\n\t\"frequency\" : 10,\n\t\"type\" : \"sine\",\n\t\"depth\" : 0.5,\n\t\"spread\" : 180,\n};\n\n/**\n * Start the tremolo.\n * @param {Time} [time=now] When the tremolo begins.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.start = function(time){\n\tthis._lfoL.start(time);\n\tthis._lfoR.start(time);\n\treturn this;\n};\n\n/**\n * Stop the tremolo.\n * @param {Time} [time=now] When the tremolo stops.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.stop = function(time){\n\tthis._lfoL.stop(time);\n\tthis._lfoR.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the effect to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                              Transport has started.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.sync = function(delay){\n\tthis._lfoL.sync(delay);\n\tthis._lfoR.sync(delay);\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.unsync = function(){\n\tthis._lfoL.unsync();\n\tthis._lfoR.unsync();\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The Tremolo's oscillator type.\n * @memberOf Tone.Tremolo#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Tremolo#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase; //180\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._amplitudeL.dispose();\n\tthis._amplitudeL = null;\n\tthis._amplitudeR.dispose();\n\tthis._amplitudeR = null;\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.Tremolo;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/MidSideEffect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Applies a width factor to the mid/side seperation.\n *         0 is all mid and 1 is all side.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         <code>\n *         Mid *= 2*(1-width)<br>\n *         Side *= 2*width\n *         </code>\n *\n *  @extends {Tone.MidSideEffect}\n *  @constructor\n *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n */\nTone.StereoWidener = function(){\n\n\tvar options = Tone.defaults(arguments, [\"width\"], Tone.StereoWidener);\n\tTone.MidSideEffect.call(this, options);\n\n\t/**\n\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\tthis._readOnly([\"width\"]);\n\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthMid = new Tone.Multiply(2);\n\n\t/**\n\t * Two times the width for the side channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthSide = new Tone.Multiply(2);\n\n\t/**\n\t *  Mid multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._midMult = new Tone.Multiply();\n\tthis._twoTimesWidthMid.connect(this._midMult, 0, 1);\n\tthis.midSend.chain(this._midMult, this.midReturn);\n\n\t/**\n\t * 1 - width\n\t * @type {Tone.Subtract}\n\t * @private\n\t */\n\tthis._oneMinusWidth = new Tone.Subtract();\n\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\tTone.connect(this.context.getConstant(1), this._oneMinusWidth, 0, 0);\n\tthis.width.connect(this._oneMinusWidth, 0, 1);\n\n\t/**\n\t *  Side multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._sideMult = new Tone.Multiply();\n\tthis.width.connect(this._twoTimesWidthSide);\n\tthis._twoTimesWidthSide.connect(this._sideMult, 0, 1);\n\tthis.sideSend.chain(this._sideMult, this.sideReturn);\n};\n\nTone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.StereoWidener.defaults = {\n\t\"width\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoWidener} this\n */\nTone.StereoWidener.prototype.dispose = function(){\n\tTone.MidSideEffect.prototype.dispose.call(this);\n\tthis._writable([\"width\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._midMult.dispose();\n\tthis._midMult = null;\n\tthis._sideMult.dispose();\n\tthis._sideMult = null;\n\tthis._twoTimesWidthMid.dispose();\n\tthis._twoTimesWidthMid = null;\n\tthis._twoTimesWidthSide.dispose();\n\tthis._twoTimesWidthSide = null;\n\tthis._oneMinusWidth.dispose();\n\tthis._oneMinusWidth = null;\n\treturn this;\n};\n\nexport default Tone.StereoWidener;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Gain\";\n\n/**\n *  @class Base class for stereo feedback effects where the effectReturn\n *         is fed back into the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  controls the amount of feedback\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackL = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackR = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\tthis.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoFeedbackEffect} this\n */\nTone.StereoFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackL.dispose();\n\tthis._feedbackL = null;\n\tthis._feedbackR.dispose();\n\tthis._feedbackR = null;\n\treturn this;\n};\n\nexport default Tone.StereoFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Offline\";\nimport \"../component/Filter\";\nimport \"../component/Merge\";\nimport \"../source/Noise\";\nimport \"../core/Gain\";\nimport \"../effect/Convolver\";\n\n/**\n *  @class Simple convolution created with decaying noise.\n *  \t\tGenerates an Impulse Response Buffer\n * \t\t\twith Tone.Offline then feeds the IR into ConvolverNode.\n * \t\t\tNote: the Reverb will not make any sound until [generate](#generate)\n * \t\t\thas been invoked and resolved.\n *\n * \t\t\tInspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * \t\t\tCopyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n *  @extends {Tone.Convolver}\n *  @param {Time=} decay The amount of time it will reverberate for.\n */\nTone.Reverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"decay\"], Tone.Reverb);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  Convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb\n\t * @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * The amount of time before the reverb is fully\n\t * ramped in.\n\t * @type {Time}\n\t */\n\tthis.preDelay = options.preDelay;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Reverb, Tone.Effect);\n\n/**\n * The defaults\n * @type {Object}\n * @static\n */\nTone.Reverb.defaults = {\n\t\"decay\" : 1.5,\n\t\"preDelay\" : 0.01,\n};\n\n/**\n * Generate the Impulse Response. Returns a promise while the IR is being\n * generated.\n * @return {Promise<Tone.Reverb>} Promise which returns this object.\n */\nTone.Reverb.prototype.generate = function(){\n\treturn Tone.Offline(function(){\n\t\t//create a noise burst which decays over the duration\n\t\tvar noiseL = new Tone.Noise();\n\t\tvar noiseR = new Tone.Noise();\n\t\tvar merge = new Tone.Merge();\n\t\tnoiseL.connect(merge.left);\n\t\tnoiseR.connect(merge.right);\n\t\tvar gainNode = new Tone.Gain().toMaster();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t//predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this.preDelay);\n\t\t//decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this.preDelay, this.decay + this.preDelay);\n\t}.bind(this), this.decay + this.preDelay).then(function(buffer){\n\t\tthis._convolver.buffer = buffer.get();\n\t\treturn this;\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Reverb}  this\n */\nTone.Reverb.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Reverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/CrossFade\";\nimport \"../signal/Signal\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal.\n *         The effect is achieved by speeding up or slowing down the delayTime\n *         of a DelayNode using a sawtooth wave.\n *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n *\n *  @extends {Tone.FeedbackEffect}\n *  @param {Interval=} pitch The interval to transpose the incoming signal by.\n */\nTone.PitchShift = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pitch\"], Tone.PitchShift);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  The pitch signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._frequency = new Tone.Signal(0);\n\n\t/**\n\t *  Uses two DelayNodes to cover up the jump in\n\t *  the sawtooth wave.\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayA = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoA = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\"\n\t}).connect(this._delayA.delayTime);\n\n\t/**\n\t *  The second DelayNode\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayB = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoB = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"phase\" : 180\n\t}).connect(this._delayB.delayTime);\n\n\t/**\n\t *  Crossfade quickly between the two delay lines\n\t *  to cover up the jump in the sawtooth wave\n\t *  @type  {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._crossFade = new Tone.CrossFade();\n\n\t/**\n\t *  LFO which alternates between the two\n\t *  delay lines to cover up the disparity in the\n\t *  sawtooth wave.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._crossFadeLFO = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"type\" : \"triangle\",\n\t\t\"phase\" : 90\n\t}).connect(this._crossFade.fade);\n\n\t/**\n\t *  The delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._feedbackDelay = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay on the input signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._feedbackDelay.delayTime;\n\tthis._readOnly(\"delayTime\");\n\n\t/**\n\t *  Hold the current pitch\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._pitch = options.pitch;\n\n\t/**\n\t *  Hold the current windowSize\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._windowSize = options.windowSize;\n\n\t//connect the two delay lines up\n\tthis._delayA.connect(this._crossFade.a);\n\tthis._delayB.connect(this._crossFade.b);\n\t//connect the frequency\n\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t//route the input\n\tthis.effectSend.fan(this._delayA, this._delayB);\n\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t//start the LFOs at the same time\n\tvar now = this.now();\n\tthis._lfoA.start(now);\n\tthis._lfoB.start(now);\n\tthis._crossFadeLFO.start(now);\n\t//set the initial value\n\tthis.windowSize = this._windowSize;\n};\n\nTone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PitchShift.defaults = {\n\t\"pitch\" : 0,\n\t\"windowSize\" : 0.1,\n\t\"delayTime\" : 0,\n\t\"feedback\" : 0\n};\n\n/**\n * Repitch the incoming signal by some interval (measured\n * in semi-tones).\n * @memberOf Tone.PitchShift#\n * @type {Interval}\n * @name pitch\n * @example\n * pitchShift.pitch = -12; //down one octave\n * pitchShift.pitch = 7; //up a fifth\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"pitch\", {\n\tget : function(){\n\t\treturn this._pitch;\n\t},\n\tset : function(interval){\n\t\tthis._pitch = interval;\n\t\tvar factor = 0;\n\t\tif (interval < 0){\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n});\n\n/**\n * The window size corresponds roughly to the sample length in a looping sampler.\n * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n * signal, but larger values will result in smoother pitch shifting for larger intervals.\n * A nominal range of 0.03 to 0.1 is recommended.\n * @memberOf Tone.PitchShift#\n * @type {Time}\n * @name windowSize\n * @example\n * pitchShift.windowSize = 0.1;\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"windowSize\", {\n\tget : function(){\n\t\treturn this._windowSize;\n\t},\n\tset : function(size){\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.PitchShift}  this\n */\nTone.PitchShift.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._frequency.dispose();\n\tthis._frequency = null;\n\tthis._delayA.disconnect();\n\tthis._delayA = null;\n\tthis._delayB.disconnect();\n\tthis._delayB = null;\n\tthis._lfoA.dispose();\n\tthis._lfoA = null;\n\tthis._lfoB.dispose();\n\tthis._lfoB = null;\n\tthis._crossFade.dispose();\n\tthis._crossFade = null;\n\tthis._crossFadeLFO.dispose();\n\tthis._crossFadeLFO = null;\n\tthis._writable(\"delayTime\");\n\tthis._feedbackDelay.dispose();\n\tthis._feedbackDelay = null;\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PitchShift;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoXFeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n *          first in one channel and next in the opposite channel. In a stereo\n *          system these are the right and left channels.\n *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n *          with independent delay values. Each delay is routed to one channel\n *          (left or right), and the channel triggered second will always\n *          trigger at the same interval after the first.\n *\n * \t@constructor\n * \t@extends {Tone.StereoXFeedbackEffect}\n *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                                 is fed back through the delay.\n *  @example\n * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n * var drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n */\nTone.PingPongDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.PingPongDelay);\n\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node on the left side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay node on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the predelay on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay time signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\n\t//connect it up\n\tthis.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\tthis.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t//rearranged the feedback to be after the rightPreDelay\n\tthis._feedbackLR.disconnect();\n\tthis._feedbackLR.connect(this._rightDelay);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.PingPongDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelayTime\" : 1\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PingPongDelay} this\n */\nTone.PingPongDelay.prototype.dispose = function(){\n\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\tthis._leftDelay.dispose();\n\tthis._leftDelay = null;\n\tthis._rightDelay.dispose();\n\tthis._rightDelay = null;\n\tthis._rightPreDelay.dispose();\n\tthis._rightPreDelay = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime.dispose();\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PingPongDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n *         of different frequency components of an incoming signal. Read more on\n *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n *\n *\t@extends {Tone.StereoEffect}\n *\t@constructor\n *\t@param {Frequency|Object} [frequency] The speed of the phasing.\n *\t@param {number} [octaves] The octaves of the effect.\n *\t@param {Frequency} [baseFrequency] The base frequency of the filters.\n *\t@example\n * var phaser = new Tone.Phaser({\n * \t\"frequency\" : 15,\n * \t\"octaves\" : 5,\n * \t\"baseFrequency\" : 1000\n * }).toMaster();\n * var synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n */\nTone.Phaser = function(){\n\n\t//set the defaults\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"octaves\", \"baseFrequency\"], Tone.Phaser);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the lfo which controls the frequency on the left side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\n\t/**\n\t *  the lfo which controls the frequency on the right side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\tthis._lfoR.phase = 180;\n\n\t/**\n\t *  the base modulation frequency\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  the octaves of the phasing\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  The quality factor of the filters\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\n\t/**\n\t * the frequency of the effect\n\t * @type {Tone.Signal}\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\tthis.frequency.value = options.frequency;\n\n\t//connect them up\n\tthis.effectSendL.connect(this._filtersL[0]);\n\tthis.effectSendR.connect(this._filtersR[0]);\n\tTone.connect(this._filtersL[options.stages - 1], this.effectReturnL);\n\tTone.connect(this._filtersR[options.stages - 1], this.effectReturnR);\n\t//control the frequency with one LFO\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the options\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\tthis._readOnly([\"frequency\", \"Q\"]);\n};\n\nTone.extend(Tone.Phaser, Tone.StereoEffect);\n\n/**\n *  defaults\n *  @static\n *  @type {object}\n */\nTone.Phaser.defaults = {\n\t\"frequency\" : 0.5,\n\t\"octaves\" : 3,\n\t\"stages\" : 10,\n\t\"Q\" : 10,\n\t\"baseFrequency\" : 350,\n};\n\n/**\n *  @param {number} stages\n *  @returns {Array} the number of filters all connected together\n *  @private\n */\nTone.Phaser.prototype._makeFilters = function(stages, connectToFreq, Q){\n\tvar filters = new Array(stages);\n\t//make all the filters\n\tfor (var i = 0; i < stages; i++){\n\t\tvar filter = this.context.createBiquadFilter();\n\t\tfilter.type = \"allpass\";\n\t\tQ.connect(filter.Q);\n\t\tconnectToFreq.connect(filter.frequency);\n\t\tfilters[i] = filter;\n\t}\n\tTone.connectSeries.apply(Tone, filters);\n\treturn filters;\n};\n\n/**\n * The number of octaves the phase goes above\n * the baseFrequency\n * @memberOf Tone.Phaser#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.Phaser.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tvar max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n});\n\n/**\n * The the base frequency of the filters.\n * @memberOf Tone.Phaser#\n * @type {number}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.Phaser.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(freq){\n\t\tthis._baseFrequency = freq;\n\t\tthis._lfoL.min = freq;\n\t\tthis._lfoR.min = freq;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Phaser} this\n */\nTone.Phaser.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"Q\"]);\n\tthis.Q.dispose();\n\tthis.Q = null;\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tfor (var i = 0; i < this._filtersL.length; i++){\n\t\tthis._filtersL[i].disconnect();\n\t\tthis._filtersL[i] = null;\n\t}\n\tthis._filtersL = null;\n\tfor (var j = 0; j < this._filtersR.length; j++){\n\t\tthis._filtersR[j].disconnect();\n\t\tthis._filtersR[j] = null;\n\t}\n\tthis._filtersR = null;\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Phaser;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/FeedbackCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Scale\";\n\n/**\n *  an array of the comb filter delay time values\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n *  the resonances of each of the comb filters\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n *  the allpass filter frequencies\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFreqs = [347, 113, 37];\n\n/**\n *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n *         tuned by John Chowning in 1970.\n *         It is made up of three allpass filters and four Tone.FeedbackCombFilter.\n *\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n *  @example\n * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n * var delay = new Tone.FeedbackDelay(0.5);\n * //connecting the synth to reverb through delay\n * var synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\",\"8n\");\n */\nTone.JCReverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\"], Tone.JCReverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  room size control values between [0,1]\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  scale the room size\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\n\t/**\n\t *  a series of allpass filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFilters = [];\n\n\t/**\n\t *  parallel feedback comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._feedbackCombFilters = [];\n\n\t//make the allpass filters\n\tfor (var af = 0; af < allpassFilterFreqs.length; af++){\n\t\tvar allpass = this.context.createBiquadFilter();\n\t\tallpass.type = \"allpass\";\n\t\tallpass.frequency.value = allpassFilterFreqs[af];\n\t\tthis._allpassFilters.push(allpass);\n\t}\n\n\t//and the comb filters\n\tfor (var cf = 0; cf < combFilterDelayTimes.length; cf++){\n\t\tvar fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\tfbcf.resonance.value = combFilterResonances[cf];\n\t\tTone.connect(this._allpassFilters[this._allpassFilters.length - 1], fbcf);\n\t\tif (cf < combFilterDelayTimes.length / 2){\n\t\t\tfbcf.connect(this.effectReturnL);\n\t\t} else {\n\t\t\tfbcf.connect(this.effectReturnR);\n\t\t}\n\t\tthis._feedbackCombFilters.push(fbcf);\n\t}\n\n\t//chain the allpass filters together\n\tthis.roomSize.connect(this._scaleRoomSize);\n\tTone.connectSeries.apply(Tone, this._allpassFilters);\n\tthis.effectSendL.connect(this._allpassFilters[0]);\n\tthis.effectSendR.connect(this._allpassFilters[0]);\n\tthis._readOnly([\"roomSize\"]);\n};\n\nTone.extend(Tone.JCReverb, Tone.StereoEffect);\n\n/**\n *  the default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.JCReverb.defaults = {\n\t\"roomSize\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.JCReverb} this\n */\nTone.JCReverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var apf = 0; apf < this._allpassFilters.length; apf++){\n\t\tthis._allpassFilters[apf].disconnect();\n\t\tthis._allpassFilters[apf] = null;\n\t}\n\tthis._allpassFilters = null;\n\tfor (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++){\n\t\tthis._feedbackCombFilters[fbcf].dispose();\n\t\tthis._feedbackCombFilters[fbcf] = null;\n\t}\n\tthis._feedbackCombFilters = null;\n\tthis._writable([\"roomSize\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis._scaleRoomSize.dispose();\n\tthis._scaleRoomSize = null;\n\treturn this;\n};\n\nexport default Tone.JCReverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LowpassCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../signal/ScaleExp\";\n\n/**\n *  an array of comb filter delay values from Freeverb implementation\n *  @static\n *  @private\n *  @type {Array}\n */\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n *  an array of allpass filter frequency values from Freeverb implementation\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n *                                 of the reverb.\n *  @example\n * var freeverb = new Tone.Freeverb().toMaster();\n * freeverb.dampening.value = 1000;\n * //routing synth through the reverb\n * var synth = new Tone.AMSynth().connect(freeverb);\n */\nTone.Freeverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\", \"dampening\"], Tone.Freeverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The roomSize value between. A larger roomSize\n\t *  will result in a longer decay.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of dampening of the reverberant signal.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\n\t/**\n\t *  the comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._combFilters = [];\n\n\t/**\n\t *  the allpass filters on the left\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersL = [];\n\n\t/**\n\t *  the allpass filters on the right\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersR = [];\n\n\t//make the allpass filters on the right\n\tfor (var l = 0; l < allpassFilterFrequencies.length; l++){\n\t\tvar allpassL = this.context.createBiquadFilter();\n\t\tallpassL.type = \"allpass\";\n\t\tallpassL.frequency.value = allpassFilterFrequencies[l];\n\t\tthis._allpassFiltersL.push(allpassL);\n\t}\n\n\t//make the allpass filters on the left\n\tfor (var r = 0; r < allpassFilterFrequencies.length; r++){\n\t\tvar allpassR = this.context.createBiquadFilter();\n\t\tallpassR.type = \"allpass\";\n\t\tallpassR.frequency.value = allpassFilterFrequencies[r];\n\t\tthis._allpassFiltersR.push(allpassR);\n\t}\n\n\t//make the comb filters\n\tfor (var c = 0; c < combFilterTunings.length; c++){\n\t\tvar lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\tif (c < combFilterTunings.length / 2){\n\t\t\tthis.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t} else {\n\t\t\tthis.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t}\n\t\tthis.roomSize.connect(lfpf.resonance);\n\t\tthis.dampening.connect(lfpf.dampening);\n\t\tthis._combFilters.push(lfpf);\n\t}\n\n\t//chain the allpass filters togetehr\n\tTone.connectSeries.apply(Tone, this._allpassFiltersL);\n\tTone.connectSeries.apply(Tone, this._allpassFiltersR);\n\tTone.connect(this._allpassFiltersL[this._allpassFiltersL.length - 1], this.effectReturnL);\n\tTone.connect(this._allpassFiltersR[this._allpassFiltersR.length - 1], this.effectReturnR);\n\tthis._readOnly([\"roomSize\", \"dampening\"]);\n};\n\nTone.extend(Tone.Freeverb, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Freeverb.defaults = {\n\t\"roomSize\" : 0.7,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Freeverb} this\n */\nTone.Freeverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var al = 0; al < this._allpassFiltersL.length; al++){\n\t\tthis._allpassFiltersL[al].disconnect();\n\t\tthis._allpassFiltersL[al] = null;\n\t}\n\tthis._allpassFiltersL = null;\n\tfor (var ar = 0; ar < this._allpassFiltersR.length; ar++){\n\t\tthis._allpassFiltersR[ar].disconnect();\n\t\tthis._allpassFiltersR[ar] = null;\n\t}\n\tthis._allpassFiltersR = null;\n\tfor (var cf = 0; cf < this._combFilters.length; cf++){\n\t\tthis._combFilters[cf].dispose();\n\t\tthis._combFilters[cf] = null;\n\t}\n\tthis._combFilters = null;\n\tthis._writable([\"roomSize\", \"dampening\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis.dampening.dispose();\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.Freeverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/FeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n *          signal is fed back into the delay.\n *\n *  @constructor\n *  @extends {Tone.FeedbackEffect}\n *  @param {Time|Object} [delayTime] The delay applied to the incoming signal.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                            is fed back through the delay.\n *  @example\n * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n * var tom = new Tone.MembraneSynth({\n * \t\"octaves\" : 4,\n * \t\"pitchDecay\" : 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\",\"32n\");\n */\nTone.FeedbackDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.FeedbackDelay);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(options.delayTime, options.maxDelay);\n\n\t/**\n\t *  The delayTime of the DelayNode.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delayNode.delayTime;\n\n\t// connect it up\n\tthis.connectEffect(this._delayNode);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\n/**\n *  The default values.\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.FeedbackDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelay\" : 1\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackDelay} this\n */\nTone.FeedbackDelay.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n *  @example\n * var dist = new Tone.Distortion(0.8).toMaster();\n * var fm = new Tone.SimpleFM().connect(dist);\n * //this sounds good on bass notes\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n */\nTone.Distortion = function(){\n\n\tvar options = Tone.defaults(arguments, [\"distortion\"], Tone.Distortion);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds the distortion amount\n\t * @type {number}\n\t * @private\n\t */\n\tthis._distortion = options.distortion;\n\n\tthis.connectEffect(this._shaper);\n\tthis.distortion = options.distortion;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Distortion, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Distortion.defaults = {\n\t\"distortion\" : 0.4,\n\t\"oversample\" : \"none\"\n};\n\n/**\n * The amount of distortion.\n * @memberOf Tone.Distortion#\n * @type {NormalRange}\n * @name distortion\n */\nObject.defineProperty(Tone.Distortion.prototype, \"distortion\", {\n\tget : function(){\n\t\treturn this._distortion;\n\t},\n\tset : function(amount){\n\t\tthis._distortion = amount;\n\t\tvar k = amount * 100;\n\t\tvar deg = Math.PI / 180;\n\t\tthis._shaper.setMap(function(x){\n\t\t\tif (Math.abs(x) < 0.001){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Distortion#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Distortion.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Distortion} this\n */\nTone.Distortion.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Distortion;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.Chorus is a stereo chorus effect composed of\n *         a left and right delay with a Tone.LFO applied to the delayTime of each channel.\n *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms.\n *\t@param {NormalRange} [depth] The depth of the chorus.\n *\t@example\n * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n */\nTone.Chorus = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"delayTime\", \"depth\"], Tone.Chorus);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the depth of the chorus\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._depth = options.depth;\n\n\t/**\n\t *  the delayTime\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._delayTime = options.delayTime / 1000;\n\n\t/**\n\t *  the lfo which controls the delayTime\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t *  another LFO for the right side with a 180 degree phase diff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"phase\" : 180\n\t});\n\n\t/**\n\t *  delay for left\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeL = new Tone.Delay();\n\n\t/**\n\t *  delay for right\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeR = new Tone.Delay();\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\n\t//connections\n\tthis.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t//and pass through to make the detune apparent\n\tthis.effectSendL.connect(this.effectReturnL);\n\tthis.effectSendR.connect(this.effectReturnR);\n\t//lfo setup\n\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\t//have one LFO frequency control the other\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the initial values\n\tthis.depth = this._depth;\n\tthis.frequency.value = options.frequency;\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\"]);\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Chorus, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Chorus.defaults = {\n\t\"frequency\" : 1.5,\n\t\"delayTime\" : 3.5,\n\t\"depth\" : 0.7,\n\t\"type\" : \"sine\",\n\t\"spread\" : 180\n};\n\n/**\n * The depth of the effect. A depth of 1 makes the delayTime\n * modulate between 0 and 2*delayTime (centered around the delayTime).\n * @memberOf Tone.Chorus#\n * @type {NormalRange}\n * @name depth\n */\nObject.defineProperty(Tone.Chorus.prototype, \"depth\", {\n\tget : function(){\n\t\treturn this._depth;\n\t},\n\tset : function(depth){\n\t\tthis._depth = depth;\n\t\tvar deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n});\n\n/**\n * The delayTime in milliseconds of the chorus. A larger delayTime\n * will give a more pronounced effect. Nominal range a delayTime\n * is between 2 and 20ms.\n * @memberOf Tone.Chorus#\n * @type {Milliseconds}\n * @name delayTime\n */\nObject.defineProperty(Tone.Chorus.prototype, \"delayTime\", {\n\tget : function(){\n\t\treturn this._delayTime * 1000;\n\t},\n\tset : function(delayTime){\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n});\n\n/**\n * The oscillator type of the LFO.\n * @memberOf Tone.Chorus#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Chorus.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Chorus#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Chorus.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Chorus} this\n */\nTone.Chorus.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._delayNodeL.dispose();\n\tthis._delayNodeL = null;\n\tthis._delayNodeR.dispose();\n\tthis._delayNodeR = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Chorus;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n *         for making different types of distortion sounds.\n *         Note that odd orders sound very different from even ones, \n *         and order = 1 is no change. \n *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n *  @example\n * //create a new cheby\n * var cheby = new Tone.Chebyshev(50);\n * //create a monosynth connected to our cheby\n * synth = new Tone.MonoSynth().connect(cheby);\n */\nTone.Chebyshev = function(){\n\n\tvar options = Tone.defaults(arguments, [\"order\"], Tone.Chebyshev);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds onto the order of the filter\n\t * @type {number}\n\t * @private\n\t */\n\tthis._order = options.order;\n\n\tthis.connectEffect(this._shaper);\n\tthis.order = options.order;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Chebyshev, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Chebyshev.defaults = {\n\t\"order\" : 1,\n\t\"oversample\" : \"none\"\n};\n\n/**\n *  get the coefficient for that degree\n *  @param {number} x the x value\n *  @param   {number} degree \n *  @param {Object} memo memoize the computed value. \n *                       this speeds up computation greatly. \n *  @return  {number}       the coefficient \n *  @private\n */\nTone.Chebyshev.prototype._getCoefficient = function(x, degree, memo){\n\tif (memo.hasOwnProperty(degree)){\n\t\treturn memo[degree];\n\t} else if (degree === 0){\n\t\tmemo[degree] = 0;\n\t} else if (degree === 1){\n\t\tmemo[degree] = x;\n\t} else {\n\t\tmemo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t}\n\treturn memo[degree];\n};\n\n/**\n * The order of the Chebyshev polynomial which creates\n * the equation which is applied to the incoming \n * signal through a Tone.WaveShaper. The equations\n * are in the form:<br>\n * order 2: 2x^2 + 1<br>\n * order 3: 4x^3 + 3x <br>\n * @memberOf Tone.Chebyshev#\n * @type {Positive}\n * @name order\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"order\", {\n\tget : function(){\n\t\treturn this._order;\n\t},\n\tset : function(order){\n\t\tthis._order = order;\n\t\tvar curve = new Array(4096);\n\t\tvar len = curve.length;\n\t\tfor (var i = 0; i < len; ++i){\n\t\t\tvar x = i * 2 / len - 1;\n\t\t\tif (x === 0){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\tcurve[i] = 0;\n\t\t\t} else {\n\t\t\t\tcurve[i] = this._getCoefficient(x, order, {});\n\t\t\t}\n\t\t}\n\t\tthis._shaper.curve = curve;\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Chebyshev#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Chebyshev} this\n */\nTone.Chebyshev.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Chebyshev;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Subtract\";\nimport \"../signal/Modulo\";\n\n/**\n *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth.\n *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n *                       of 1 to 8.\n *  @example\n * //initialize crusher and route a synth through it\n * var crusher = new Tone.BitCrusher(4).toMaster();\n * var synth = new Tone.MonoSynth().connect(crusher);\n */\nTone.BitCrusher = function(){\n\n\tvar options = Tone.defaults(arguments, [\"bits\"], Tone.BitCrusher);\n\tTone.Effect.call(this, options);\n\n\tvar invStepSize = 1 / Math.pow(2, options.bits - 1);\n\n\t/**\n\t *  Subtract the input signal and the modulus of the input signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = new Tone.Subtract();\n\n\t/**\n\t *  The mod function\n\t *  @type  {Tone.Modulo}\n\t *  @private\n\t */\n\tthis._modulo = new Tone.Modulo(invStepSize);\n\n\t/**\n\t *  keeps track of the bits\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._bits = options.bits;\n\n\t//connect it up\n\tthis.effectSend.fan(this._subtract, this._modulo);\n\tthis._modulo.connect(this._subtract, 0, 1);\n\tthis._subtract.connect(this.effectReturn);\n};\n\nTone.extend(Tone.BitCrusher, Tone.Effect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.BitCrusher.defaults = {\n\t\"bits\" : 4\n};\n\n/**\n * The bit depth of the effect. Nominal range of 1-8.\n * @memberOf Tone.BitCrusher#\n * @type {number}\n * @name bits\n */\nObject.defineProperty(Tone.BitCrusher.prototype, \"bits\", {\n\tget : function(){\n\t\treturn this._bits;\n\t},\n\tset : function(bits){\n\t\tthis._bits = bits;\n\t\tvar invStepSize = 1 / Math.pow(2, bits - 1);\n\t\tthis._modulo.value = invStepSize;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.BitCrusher} this\n */\nTone.BitCrusher.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modulo.dispose();\n\tthis._modulo = null;\n\treturn this;\n};\n\nexport default Tone.BitCrusher;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/ScaleExp\";\nimport \"../effect/Effect\";\nimport \"../component/Filter\";\n\n/**\n *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n *          The frequency of the filter is adjusted proportionally to the\n *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set\n *                                            to at the low point of the wah\n *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n *                                the filter will sweep to when fully open\n *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for\n *                                   the incoming signal. Normal range of -40 to 0.\n *  @example\n * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n * //initialize the synth and connect to autowah\n * var synth = new Synth.connect(autoWah);\n * //Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * //more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\")\n */\nTone.AutoWah = function(){\n\n\tvar options = Tone.defaults(arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"], Tone.AutoWah);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The envelope follower. Set the attack/release\n\t *  timing to adjust how the envelope is followed.\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis.follower = new Tone.Follower(options.follower);\n\n\t/**\n\t *  scales the follower value to the frequency domain\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  the input gain to adjust the sensitivity\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._inputBoost = new Tone.Gain();\n\n\t/**\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._bandpass = new Tone.Filter({\n\t\t\"rolloff\" : -48,\n\t\t\"frequency\" : 0,\n\t\t\"Q\" : options.Q,\n\t});\n\n\t/**\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._peaking = new Tone.Filter(0, \"peaking\");\n\tthis._peaking.gain.value = options.gain;\n\n\t/**\n\t * The gain of the filter.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.gain = this._peaking.gain;\n\n\t/**\n\t * The quality of the filter.\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.Q = this._bandpass.Q;\n\n\t//the control signal path\n\tthis.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\tthis._sweepRange.connect(this._bandpass.frequency);\n\tthis._sweepRange.connect(this._peaking.frequency);\n\t//the filtered path\n\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t//set the initial value\n\tthis._setSweepRange();\n\tthis.sensitivity = options.sensitivity;\n\n\tthis._readOnly([\"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.AutoWah, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AutoWah.defaults = {\n\t\"baseFrequency\" : 100,\n\t\"octaves\" : 6,\n\t\"sensitivity\" : 0,\n\t\"Q\" : 2,\n\t\"gain\" : 2,\n\t\"follower\" : {\n\t\t\"attack\" : 0.3,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * The number of octaves that the filter will sweep above the\n * baseFrequency.\n * @memberOf Tone.AutoWah#\n * @type {Number}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The base frequency from which the sweep will start from.\n * @memberOf Tone.AutoWah#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(baseFreq){\n\t\tthis._baseFrequency = baseFreq;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The sensitivity to control how responsive to the input signal the filter is.\n * @memberOf Tone.AutoWah#\n * @type {Decibels}\n * @name sensitivity\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"sensitivity\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t},\n\tset : function(sensitivy){\n\t\tthis._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t}\n});\n\n/**\n *  sets the sweep range of the scaler\n *  @private\n */\nTone.AutoWah.prototype._setSweepRange = function(){\n\tthis._sweepRange.min = this._baseFrequency;\n\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.AutoWah} this\n */\nTone.AutoWah.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis.follower.dispose();\n\tthis.follower = null;\n\tthis._sweepRange.dispose();\n\tthis._sweepRange = null;\n\tthis._bandpass.dispose();\n\tthis._bandpass = null;\n\tthis._peaking.dispose();\n\tthis._peaking = null;\n\tthis._inputBoost.dispose();\n\tthis._inputBoost = null;\n\tthis._writable([\"gain\", \"Q\"]);\n\tthis.gain = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.AutoWah;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Panner\";\n\n/**\n *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n *  @example\n * //create an autopanner and start it's LFO\n * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n * //route an oscillator through the panner and start it\n * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n */\nTone.AutoPanner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.AutoPanner);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the panning\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t\t\"min\" : -1,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t * The amount of panning between left and right. \n\t * 0 = always center. 1 = full range between left and right. \n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t *  the panner node which does the panning\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = new Tone.Panner();\n\n\t/**\n\t * How fast the panner modulates between left and right. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t//connections\n\tthis.connectEffect(this._panner);\n\tthis._lfo.connect(this._panner.pan);\n\tthis.type = options.type;\n\tthis._readOnly([\"depth\", \"frequency\"]);\n};\n\n//extend Effect\nTone.extend(Tone.AutoPanner, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoPanner.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the panner to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the panner from the transport\n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoPanner.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis._writable([\"depth\", \"frequency\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoPanner;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\n\n/**\n *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n *         Setting the LFO rate and depth allows for control over the filter modulation rate \n *         and depth.\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Time|Object} [frequency] The rate of the LFO.\n *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n *  @example\n * //create an autofilter and start it's LFO\n * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n * //route an oscillator through the filter and start it\n * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n */\nTone.AutoFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"baseFrequency\", \"octaves\"], Tone.AutoFilter);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the filter cutoff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t});\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The filter node\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\n\t/**\n\t *  The octaves placeholder\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = 0;\n\n\t//connections\n\tthis.connectEffect(this.filter);\n\tthis._lfo.connect(this.filter.frequency);\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.octaves = options.octaves;\n\tthis.baseFrequency = options.baseFrequency;\n};\n\n//extend Effect\nTone.extend(Tone.AutoFilter, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoFilter.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1,\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 2.6,\n\t\"filter\" : {\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -12,\n\t\t\"Q\" : 1,\n\t}\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the filter to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport.\n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n * The minimum value of the filter's cutoff frequency.\n * @memberOf Tone.AutoFilter#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._lfo.min;\n\t},\n\tset : function(freq){\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t//and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The maximum value of the filter's cutoff frequency. \n * @memberOf Tone.AutoFilter#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(oct){\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t}\n});\n\n/**\n *  Clean up. \n *  @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space\n *          using a right-handed cartesian coordinate system.\n *          The units used in the coordinate system are not defined;\n *          these coordinates are independent/invariant of any particular\n *          units such as meters or feet. Tone.Panner3D objects have an forward\n *          vector representing the direction the sound is projecting. Additionally,\n *          they have a sound cone representing how directional the sound is.\n *          For example, the sound could be omnidirectional, in which case it would\n *          be heard anywhere regardless of its forward, or it can be more directional\n *          and heard only if it is facing the listener. Tone.Listener objects\n *          (representing a person's ears) have an forward and up vector\n *          representing in which direction the person is facing. Because both the\n *          source stream and the listener can be moving, they both have a velocity\n *          vector representing both the speed and direction of movement. Taken together,\n *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n *          <br><br>\n *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n */\nTone.Listener = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  Holds the current forward orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [0, 0, 0, 0, 0, 0];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [0, 0, 0];\n\n\tTone.getContext(function(){\n\t\t// set the default position/forward\n\t\tthis.set(ListenerConstructor.defaults);\n\n\t\t//listener is a singleton so it adds itself to the context\n\t\t// this.context.listener = this;\n\t}.bind(this));\n\n};\n\nTone.extend(Tone.Listener);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Listener.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"forwardX\" : 0,\n\t\"forwardY\" : 0,\n\t\"forwardZ\" : 1,\n\t\"upX\" : 0,\n\t\"upY\" : 1,\n\t\"upZ\" : 0\n};\n\n/**\n * Is an instanceof Tone.Listener\n * @type {Boolean}\n */\nTone.Listener.prototype.isListener = true;\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Listener.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the listener in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setPosition = function(x, y, z){\n\tif (this.context.rawContext.listener.positionX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the listener using two vectors, the forward\n *  vector (which direction the listener is facing) and the up vector\n *  (which the up direction of the listener). An up vector\n *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @param  {Number}  upX\n *  @param  {Number}  upY\n *  @param  {Number}  upZ\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setOrientation = function(x, y, z, upX, upY, upZ){\n\tif (this.context.rawContext.listener.forwardX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionX\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionY\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardX\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardY\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upX\n */\nObject.defineProperty(Tone.Listener.prototype, \"upX\", {\n\tset : function(pos){\n\t\tthis._orientation[3] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[3];\n\t}\n});\n\n/**\n *  The y coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upY\n */\nObject.defineProperty(Tone.Listener.prototype, \"upY\", {\n\tset : function(pos){\n\t\tthis._orientation[4] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[4];\n\t}\n});\n\n/**\n *  The z coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"upZ\", {\n\tset : function(pos){\n\t\tthis._orientation[5] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[5];\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Listener} this\n */\nTone.Listener.prototype.dispose = function(){\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\n//SINGLETON SETUP\nvar ListenerConstructor = Tone.Listener;\nTone.Listener = new ListenerConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.listener && context.listener.isListener){\n\t\t//a single listener object\n\t\tTone.Listener = context.listener;\n\t} else {\n\t\t//make new Listener insides\n\t\tTone.Listener = new ListenerConstructor();\n\t}\n});\n//END SINGLETON SETUP\n\nexport default Tone.Listener;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n *         Callbacks from Tone.Transport or any of the Tone.Event classes\n *         always happen _before_ the scheduled time and are not synchronized\n *         to the animation frame so they are not good for triggering tightly\n *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n *         callbacks using the AudioContext time and uses requestAnimationFrame.\n *         \n *  @singleton\n *  @extends {Tone}\n *  @example\n * Tone.Transport.schedule(function(time){\n * \t//use the time argument to schedule a callback with Tone.Draw\n * \tTone.Draw.schedule(function(){\n * \t\t//do drawing or DOM manipulation here\n * \t}, time)\n * }, \"+0.5\")\n */\nTone.Draw = function(){\n\n\tTone.call(this);\n\t\n\t/**\n\t *  All of the events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._events = new Tone.Timeline();\n\n\t/**\n\t *  The duration after which events are not invoked.\n\t *  @type  {Number}\n\t *  @default 0.25\n\t */\n\tthis.expiration = 0.25;\n\n\t/**\n\t *  The amount of time before the scheduled time \n\t *  that the callback can be invoked. Default is\n\t *  half the time of an animation frame (0.008 seconds).\n\t *  @type  {Number}\n\t *  @default 0.008\n\t */\n\tthis.anticipation = 0.008;\n\n\t/**\n\t *  The draw loop\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._boundDrawLoop = this._drawLoop.bind(this);\n};\n\nTone.extend(Tone.Draw);\n\n/**\n *  Schedule a function at the given time to be invoked\n *  on the nearest animation frame.\n *  @param  {Function}  callback  Callback is invoked at the given time.\n *  @param  {Time}    time      The time relative to the AudioContext time\n *                              to invoke the callback.\n *  @return  {Tone.Draw}    this\n */\nTone.Draw.prototype.schedule = function(callback, time){\n\tthis._events.add({\n\t\tcallback : callback,\n\t\ttime : this.toSeconds(time)\n\t});\n\t//start the draw loop on the first event\n\tif (this._events.length === 1){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events scheduled after the given time\n *  @param  {Time=}  after  Time after which scheduled events will \n *                          be removed from the scheduling timeline.\n *  @return  {Tone.Draw}  this\n */\nTone.Draw.prototype.cancel = function(after){\n\tthis._events.cancel(this.toSeconds(after));\n\treturn this;\n};\n\n/**\n *  The draw loop\n *  @private\n */\nTone.Draw.prototype._drawLoop = function(){\n\tvar now = Tone.context.currentTime;\n\twhile (this._events.length && this._events.peek().time - this.anticipation <= now){\n\t\tvar event = this._events.shift();\n\t\tif (now - event.time <= this.expiration){\n\t\t\tevent.callback();\n\t\t}\n\t}\n\tif (this._events.length > 0){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n};\n\n//make a singleton\nTone.Draw = new Tone.Draw();\n\nexport default Tone.Draw;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\n\n/**\n *  buses are another way of routing audio\n *\n *  augments Tone.prototype to include send and receive\n */\n\n/**\n *  All of the routes\n *\n *  @type {Object}\n *  @static\n *  @private\n */\nvar Buses = {};\n\n/**\n *  Send this signal to the channel name.\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Decibels} amount The amount of the source to send to the bus.\n *  @return {GainNode} The gain node which connects this node to the desired channel.\n *                     Can be used to adjust the levels of the send.\n *  @example\n * source.send(\"reverb\", -12);\n */\nTone.prototype.send = function(channelName, amount){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tamount = Tone.defaultArg(amount, 0);\n\tvar sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\tthis.connect(sendKnob);\n\tsendKnob.connect(Buses[channelName]);\n\treturn sendKnob;\n};\n\n/**\n *  Receive the input from the desired channelName to the input\n *\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Number=} channelNumber The channel to connect to\n *  @returns {Tone} this\n *  @example\n * reverbEffect.receive(\"reverb\");\n */\nTone.prototype.receive = function(channelName, inputNum){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tTone.connect(Buses[channelName], this, 0, inputNum);\n\treturn this;\n};\n\n//remove all the send/receives when a new audio context is passed in\nTone.Context.on(\"init\", function(context){\n\tif (context.buses){\n\t\tBuses = context.buses;\n\t} else {\n\t\tBuses = {};\n\t\tcontext.buses = Buses;\n\t}\n});\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class  Choose a random value.\n *  @extends {Tone}\n *  @example\n * var randomWalk = new Tone.CtrlRandom({\n * \t\"min\" : 0,\n * \t\"max\" : 10,\n * \t\"integer\" : true\n * });\n * randomWalk.eval();\n *\n *  @param {Number|Time=} min The minimum return value.\n *  @param {Number|Time=} max The maximum return value.\n */\nTone.CtrlRandom = function(){\n\n\tvar options = Tone.defaults(arguments, [\"min\", \"max\"], Tone.CtrlRandom);\n\tTone.call(this);\n\n\t/**\n\t *  The minimum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.min = options.min;\n\n\t/**\n\t *  The maximum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.max = options.max;\n\n\t/**\n\t *  If the return value should be an integer\n\t *  @type  {Boolean}\n\t */\n\tthis.integer = options.integer;\n};\n\nTone.extend(Tone.CtrlRandom);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlRandom.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"integer\" : false\n};\n\n/**\n *  Return a random value between min and max. \n *  @readOnly\n *  @memberOf Tone.CtrlRandom#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlRandom.prototype, \"value\", {\n\tget : function(){\n\t\tvar min = this.toSeconds(this.min);\n\t\tvar max = this.toSeconds(this.max);\n\t\tvar rand = Math.random(); \n\t\tvar val = rand * min + (1 - rand) * max;\n\t\tif (this.integer){\n\t\t\tval = Math.floor(val);\n\t\t}\n\t\treturn val;\n\t}\n});\n\nexport default Tone.CtrlRandom;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n *         to Tone.CtrlMarkov.next will move to the next state. If the next\n *         state choice is an array, the next state is chosen randomly with\n *         even probability for all of the choices. For a weighted probability\n *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n *         The probabilities will be normalized and then chosen. If no next options\n *         are given for the current state, the state will stay there. \n *  @extends {Tone}\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [\"end\", \"middle\"],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n *\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n *  @param {Object} values An object with the state names as the keys\n *                         and the next state(s) as the values. \n */\nTone.CtrlMarkov = function(values, initial){\n\n\tTone.call(this);\n\n\t/**\n\t *  The Markov values with states as the keys\n\t *  and next state(s) as the values. \n\t *  @type {Object}\n\t */\n\tthis.values = Tone.defaultArg(values, {});\n\t\n\t/**\n\t *  The current state of the Markov values. The next\n\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t *  is invoked.\n\t *  @type {String}\n\t */\n\tthis.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n};\n\nTone.extend(Tone.CtrlMarkov);\n\n/**\n *  Returns the next state of the Markov values. \n *  @return  {String}\n */\nTone.CtrlMarkov.prototype.next = function(){\n\tif (this.values.hasOwnProperty(this.value)){\n\t\tvar next = this.values[this.value];\n\t\tif (Tone.isArray(next)){\n\t\t\tvar distribution = this._getProbDistribution(next);\n\t\t\tvar rand = Math.random();\n\t\t\tvar total = 0;\n\t\t\tfor (var i = 0; i < distribution.length; i++){\n\t\t\t\tvar dist = distribution[i];\n\t\t\t\tif (rand > total && rand < total + dist){\n\t\t\t\t\tvar chosen = next[i];\n\t\t\t\t\tif (Tone.isObject(chosen)){\n\t\t\t\t\t\tthis.value = chosen.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.value = chosen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotal += dist;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = next;\n\t\t}\n\t} \n\treturn this.value;\n};\n\n/**\n *  Choose randomly from an array weighted options in the form \n *  {\"state\" : string, \"probability\" : number} or an array of values\n *  @param  {Array}  options \n *  @return  {Array}  The randomly selected choice\n *  @private\n */\nTone.CtrlMarkov.prototype._getProbDistribution = function(options){\n\tvar distribution = [];\n\tvar total = 0;\n\tvar needsNormalizing = false;\n\tfor (var i = 0; i < options.length; i++){\n\t\tvar option = options[i];\n\t\tif (Tone.isObject(option)){\n\t\t\tneedsNormalizing = true;\n\t\t\tdistribution[i] = option.probability;\n\t\t} else {\n\t\t\tdistribution[i] = 1 / options.length;\n\t\t}\n\t\ttotal += distribution[i];\n\t}\n\tif (needsNormalizing){\n\t\t//normalize the values\n\t\tfor (var j = 0; j < distribution.length; j++){\n\t\t\tdistribution[j] = distribution[j] / total;\n\t\t}\n\t}\n\treturn distribution;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlMarkov}  this\n */\nTone.CtrlMarkov.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlMarkov;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Tone.CtrlInterpolate will interpolate between given values based\n *         on the \"index\" property. Passing in an array or object literal\n *         will interpolate each of the parameters. Note (i.e. \"C3\")\n *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n *         assumed to be numbers. \n *  @example\n * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n * interp.index = 0.75;\n * interp.value; //returns 1.5\n *\n *  @example\n * var interp = new Tone.CtrlInterpolate([\n * \t[2, 4, 5],\n * \t[9, 3, 2],\n * ]);\n * @param {Array} values The array of values to interpolate over\n * @param {Positive} index The initial interpolation index.\n * @extends {Tone}\n */\nTone.CtrlInterpolate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"index\"], Tone.CtrlInterpolate);\n\tTone.call(this);\n\n\t/**\n\t *  The values to interpolate between\n\t *  @type  {Array}\n\t */\n\tthis.values = options.values;\n\n\t/**\n\t *  The interpolated index between values. For example: a value of 1.5\n\t *  would interpolate equally between the value at index 1\n\t *  and the value at index 2. \n\t *  @example\n\t * interp.index = 0; \n\t * interp.value; //returns the value at 0\n\t * interp.index = 0.5;\n\t * interp.value; //returns the value between indices 0 and 1. \n\t *  @type  {Positive}\n\t */\n\tthis.index = options.index;\n};\n\nTone.extend(Tone.CtrlInterpolate);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlInterpolate.defaults = {\n\t\"index\" : 0,\n\t\"values\" : []\n};\n\n/**\n *  The current interpolated value based on the index\n *  @readOnly\n *  @memberOf Tone.CtrlInterpolate#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlInterpolate.prototype, \"value\", {\n\tget : function(){\n\t\tvar index = this.index;\n\t\tindex = Math.min(index, this.values.length - 1);\n\t\tvar lowerPosition = Math.floor(index);\n\t\tvar lower = this.values[lowerPosition];\n\t\tvar upper = this.values[Math.ceil(index)];\n\t\treturn this._interpolate(index - lowerPosition, lower, upper);\n\t}\n});\n\n/**\n *  Internal interpolation routine\n *  @param  {NormalRange}  index  The index between the lower and upper\n *  @param  {*}  lower \n *  @param  {*}  upper \n *  @return  {*}  The interpolated value\n *  @private\n */\nTone.CtrlInterpolate.prototype._interpolate = function(index, lower, upper){\n\tif (Tone.isArray(lower)){\n\t\tvar retArray = [];\n\t\tfor (var i = 0; i < lower.length; i++){\n\t\t\tretArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t}\n\t\treturn retArray;\n\t} else if (Tone.isObject(lower)){\n\t\tvar retObj = {};\n\t\tfor (var attr in lower){\n\t\t\tretObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t}\n\t\treturn retObj;\n\t} else {\n\t\tlower = this._toNumber(lower);\n\t\tupper = this._toNumber(upper);\n\t\treturn (1 - index) * lower + index * upper;\n\t}\n};\n\n/**\n *  Convert from the given type into a number\n *  @param  {Number|String}  value\n *  @return  {Number}\n *  @private\n */\nTone.CtrlInterpolate.prototype._toNumber = function(val){\n\tif (Tone.isNumber(val)){\n\t\treturn val;\n\t} else {\n\t\t//otherwise assume that it's Time...\n\t\treturn this.toSeconds(val);\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlInterpolate}  this\n */\nTone.CtrlInterpolate.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlInterpolate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current waveform data of the connected audio source.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 32 to 32768.\n */\nTone.Waveform = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.Waveform);\n\toptions.type = Tone.Analyser.Type.Waveform;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.Waveform, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Waveform.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the waveform of the audio source. Returns the waveform data\n *  of length [size](#size) as a Float32Array with values between -1 and 1.\n *  @returns {TypedArray}\n */\nTone.Waveform.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 32 to 32768.\n *  @memberOf Tone.Waveform#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Waveform.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n/**\n *  Clean up.\n *  @return  {Tone.Waveform}  this\n */\nTone.Waveform.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.Waveform;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n *          Tries to normalize the API across various browsers. See Tone.Listener\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Number} positionX The initial x position.\n *  @param {Number} positionY The initial y position.\n *  @param {Number} positionZ The initial z position.\n */\nTone.Panner3D = function(){\n\n\tvar options = Tone.defaults(arguments, [\"positionX\", \"positionY\", \"positionZ\"], Tone.Panner3D);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panner node\n\t *  @type {PannerNode}\n\t *  @private\n\t */\n\tthis._panner = this.input = this.output = this.context.createPanner();\n\t//set some values\n\tthis._panner.panningModel = options.panningModel;\n\tthis._panner.maxDistance = options.maxDistance;\n\tthis._panner.distanceModel = options.distanceModel;\n\tthis._panner.coneOuterGain = options.coneOuterGain;\n\tthis._panner.coneOuterAngle = options.coneOuterAngle;\n\tthis._panner.coneInnerAngle = options.coneInnerAngle;\n\tthis._panner.refDistance = options.refDistance;\n\tthis._panner.rolloffFactor = options.rolloffFactor;\n\n\t/**\n\t *  Holds the current orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [options.orientationX, options.orientationY, options.orientationZ];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [options.positionX, options.positionY, options.positionZ];\n\n\t// set the default position/orientation\n\tthis.orientationX = options.orientationX;\n\tthis.orientationY = options.orientationY;\n\tthis.orientationZ = options.orientationZ;\n\tthis.positionX = options.positionX;\n\tthis.positionY = options.positionY;\n\tthis.positionZ = options.positionZ;\n};\n\nTone.extend(Tone.Panner3D, Tone.AudioNode);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Panner3D.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"orientationX\" : 0,\n\t\"orientationY\" : 0,\n\t\"orientationZ\" : 0,\n\t\"panningModel\" : \"equalpower\",\n\t\"maxDistance\" : 10000,\n\t\"distanceModel\" : \"inverse\",\n\t\"coneOuterGain\" : 0,\n\t\"coneOuterAngle\" : 360,\n\t\"coneInnerAngle\" : 360,\n\t\"refDistance\" : 1,\n\t\"rolloffFactor\" : 1\n};\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Panner3D.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setPosition = function(x, y, z){\n\tif (this._panner.positionX){\n\t\tvar now = this.now();\n\t\tthis._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setOrientation = function(x, y, z){\n\tif (this._panner.orientationX){\n\t\tvar now = this.now();\n\t\tthis._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setOrientation(x, y, z);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  Proxy a property on the panner to an exposed public propery\n *  @param  {String}  prop\n *  @private\n */\nTone.Panner3D._aliasProperty = function(prop){\n\tObject.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\tset : function(val){\n\t\t\tthis._panner[prop] = val;\n\t\t},\n\t\tget : function(){\n\t\t\treturn this._panner[prop];\n\t\t}\n\t});\n};\n\n/**\n *  The panning model. Either \"equalpower\" or \"HRTF\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name panningModel\n */\nTone.Panner3D._aliasProperty(\"panningModel\");\n\n/**\n *  A reference distance for reducing volume as source move further from the listener\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name refDistance\n */\nTone.Panner3D._aliasProperty(\"refDistance\");\n\n/**\n *  Describes how quickly the volume is reduced as source moves away from listener.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name rolloffFactor\n */\nTone.Panner3D._aliasProperty(\"rolloffFactor\");\n\n/**\n *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name distanceModel\n */\nTone.Panner3D._aliasProperty(\"distanceModel\");\n\n/**\n *  The angle, in degrees, inside of which there will be no volume reduction\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneInnerAngle\n */\nTone.Panner3D._aliasProperty(\"coneInnerAngle\");\n\n/**\n *  The angle, in degrees, outside of which the volume will be reduced\n *  to a constant value of coneOuterGain\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterAngle\n */\nTone.Panner3D._aliasProperty(\"coneOuterAngle\");\n\n/**\n *  The gain outside of the coneOuterAngle\n *  @type {Gain}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterGain\n */\nTone.Panner3D._aliasProperty(\"coneOuterGain\");\n\n/**\n *  The maximum distance between source and listener,\n *  after which the volume will not be reduced any further.\n *  @type {Positive}\n *  @memberOf Tone.Panner3D#\n *  @name maxDistance\n */\nTone.Panner3D._aliasProperty(\"maxDistance\");\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\nexport default Tone.Panner3D;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A compressor with seperate controls over low/mid/high dynamics\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Object} options The low/mid/high compressor settings.\n *  @example\n *  var multiband = new Tone.MultibandCompressor({\n *  \t\"lowFrequency\" : 200,\n *  \t\"highFrequency\" : 1300\n *  \t\"low\" : {\n *  \t\t\"threshold\" : -12\n *  \t}\n *  })\n */\nTone.MultibandCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\n\t/**\n\t *  split the incoming signal into high/mid/low\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._splitter = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._splitter.lowFrequency;\n\n\t/**\n\t *  mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._splitter.highFrequency;\n\n\t/**\n\t *  the output\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  The compressor applied to the low frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.low = new Tone.Compressor(options.low);\n\n\t/**\n\t *  The compressor applied to the mid frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the high frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.high = new Tone.Compressor(options.high);\n\n\t//connect the compressor\n\tthis._splitter.low.chain(this.low, this.output);\n\tthis._splitter.mid.chain(this.mid, this.output);\n\tthis._splitter.high.chain(this.high, this.output);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MultibandCompressor.defaults = {\n\t\"low\" : Tone.Compressor.defaults,\n\t\"mid\" : Tone.Compressor.defaults,\n\t\"high\" : Tone.Compressor.defaults,\n\t\"lowFrequency\" : 250,\n\t\"highFrequency\" : 2000\n};\n\n/**\n *  clean up\n *  @returns {Tone.MultibandCompressor} this\n */\nTone.MultibandCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.dispose();\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.mid.dispose();\n\tthis.high.dispose();\n\tthis._splitter = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\treturn this;\n};\n\nexport default Tone.MultibandCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Merge\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n *         where both left and right channels have the same value. This can be useful\n *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.Mono = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  merge the signal\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tTone.connect(this.input, this._merge, 0, 0);\n\tTone.connect(this.input, this._merge, 0, 1);\n};\n\nTone.extend(Tone.Mono, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.Mono} this\n */\nTone.Mono.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.Mono;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.MidSideCompressor applies two different compressors to the mid\n *         and side signal components. See Tone.MidSideSplit.\n *\n *  @extends {Tone.AudioNode}\n *  @param {Object} options The options that are passed to the mid and side\n *                          compressors.\n *  @constructor\n */\nTone.MidSideCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\n\t/**\n\t *  the mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = this.input = new Tone.MidSideSplit();\n\n\t/**\n\t *  the mid/side recombination\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = this.output = new Tone.MidSideMerge();\n\n\t/**\n\t *  The compressor applied to the mid signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the side signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.side = new Tone.Compressor(options.side);\n\n\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\tthis._readOnly([\"mid\", \"side\"]);\n};\n\nTone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MidSideCompressor.defaults = {\n\t\"mid\" : {\n\t\t\"ratio\" : 3,\n\t\t\"threshold\" : -24,\n\t\t\"release\" : 0.03,\n\t\t\"attack\" : 0.02,\n\t\t\"knee\" : 16\n\t},\n\t\"side\" : {\n\t\t\"ratio\" : 6,\n\t\t\"threshold\" : -30,\n\t\t\"release\" : 0.25,\n\t\t\"attack\" : 0.03,\n\t\t\"knee\" : 10\n\t}\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideCompressor} this\n */\nTone.MidSideCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"mid\", \"side\"]);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n *          of an input signal. It can also get the raw\n *          value of the input signal.\n *\n *  @constructor\n *  @param {Number} smoothing The amount of smoothing applied between frames.\n *  @extends {Tone.AudioNode}\n *  @example\n * var meter = new Tone.Meter();\n * var mic = new Tone.UserMedia().open();\n * //connect mic to the meter\n * mic.connect(meter);\n * //the current level of the mic input in decibels\n * var level = meter.getLevel();\n */\nTone.Meter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Meter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t * @type {Number}\n\t */\n\tthis.smoothing = options.smoothing;\n\n\t/**\n\t * The previous frame's value\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._rms = 0;\n\n\t/**\n\t *  The analyser node which computes the levels.\n\t *  @private\n\t *  @type  {Tone.Analyser}\n\t */\n\tthis.input = this.output = this._analyser = new Tone.Analyser(\"waveform\", 256);\n};\n\nTone.extend(Tone.Meter, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type {Object}\n *  @static\n *  @const\n */\nTone.Meter.defaults = {\n\t\"smoothing\" : 0.8,\n};\n\n/**\n *  Get the current decibel value of the incoming signal\n *  @returns {Decibels}\n */\nTone.Meter.prototype.getLevel = function(){\n\tvar values = this._analyser.getValue();\n\tvar totalSquared = 0;\n\tfor (var i = 0; i < values.length; i++){\n\t\tvar value = values[i];\n\t\ttotalSquared += value * value;\n\t}\n\tvar rms = Math.sqrt(totalSquared / values.length);\n\n\t//the rms can only fall at the rate of the smoothing\n\t//but can jump up instantly\n\tthis._rms = Math.max(rms, this._rms * this.smoothing);\n\n\treturn Tone.gainToDb(this._rms);\n};\n\n/**\n *  Get the signal value of the incoming signal\n *  @returns {Number}\n */\nTone.Meter.prototype.getValue = function(){\n\tvar value = this._analyser.getValue();\n\treturn value[0];\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Meter} this\n */\nTone.Meter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n\treturn this;\n};\n\nexport default Tone.Meter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Limiter will limit the loudness of an incoming signal.\n *         It is composed of a Tone.Compressor with a fast attack\n *         and release. Limiters are commonly used to safeguard against\n *         signal clipping. Unlike a compressor, limiters do not provide\n *         smooth gain reduction and almost completely prevent\n *         additional gain above the threshold.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {number} threshold The theshold above which the limiting is applied.\n *  @example\n *  var limiter = new Tone.Limiter(-6);\n */\nTone.Limiter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\"], Tone.Limiter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor\n\t *  @private\n\t *  @type {Tone.Compressor}\n\t */\n\tthis._compressor = this.input = this.output = new Tone.Compressor({\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.001,\n\t\t\"threshold\" : options.threshold\n\t});\n\n\t/**\n\t * The threshold of of the limiter\n\t * @type {Decibel}\n\t * @signal\n\t */\n\tthis.threshold = this._compressor.threshold;\n\n\tthis._readOnly(\"threshold\");\n};\n\nTone.extend(Tone.Limiter, Tone.AudioNode);\n\n/**\n *  The default value\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Limiter.defaults = {\n\t\"threshold\" : -12\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Limiter} this\n */\nTone.Limiter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._compressor.dispose();\n\tthis._compressor = null;\n\tthis._writable(\"threshold\");\n\tthis.threshold = null;\n\treturn this;\n};\n\nexport default Tone.Limiter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/GreaterThan\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Gate only passes a signal through when the incoming\n *          signal exceeds a specified threshold. To do this, Gate uses\n *          a Tone.Follower to follow the amplitude of the incoming signal.\n *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n *  @param {Time=} smoothing The follower's smoothing time\n *  @example\n * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n * var mic = new Tone.UserMedia().connect(gate);\n * //the gate will only pass through the incoming\n * //signal when it's louder than -30db\n */\nTone.Gate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"smoothing\"], Tone.Gate);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis._follower = new Tone.Follower(options.smoothing);\n\n\t/**\n\t *  @type {Tone.GreaterThan}\n\t *  @private\n\t */\n\tthis._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\n\t//the connections\n\tTone.connect(this.input, this.output);\n\t//the control signal\n\tTone.connectSeries(this.input, this._follower, this._gt, this.output.gain);\n};\n\nTone.extend(Tone.Gate, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Gate.defaults = {\n\t\"smoothing\" : 0.1,\n\t\"threshold\" : -40\n};\n\n/**\n * The threshold of the gate in decibels\n * @memberOf Tone.Gate#\n * @type {Decibels}\n * @name threshold\n */\nObject.defineProperty(Tone.Gate.prototype, \"threshold\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(this._gt.value);\n\t},\n\tset : function(thresh){\n\t\tthis._gt.value = Tone.dbToGain(thresh);\n\t}\n});\n\n/**\n * The attack/decay speed of the gate\n * @memberOf Tone.Gate#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Gate.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._follower.smoothing;\n\t},\n\tset : function(smoothingTime){\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Gate} this\n */\nTone.Gate.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._follower.dispose();\n\tthis._gt.dispose();\n\tthis._follower = null;\n\tthis._gt = null;\n\treturn this;\n};\n\nexport default Tone.Gate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current frequency data of the connected audio source\n *          using a fast Fourier transform.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.FFT = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.FFT);\n\toptions.type = Tone.Analyser.Type.FFT;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.FFT, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.FFT.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the current frequency data from the connected audio source. \n *  Returns the frequency data of length [size](#size) as a Float32Array of decibel values. \n *  @returns {TypedArray}\n */\nTone.FFT.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  Determines the size of the array returned by [getValue](#getvalue) (i.e. the number of\n *  frequency bins). Large FFT sizes may be costly to compute.\n *  @memberOf Tone.FFT#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.FFT.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.FFT}  this\n */\nTone.FFT.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.FFT;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n *         well as the low and high crossover frequencies.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *\n *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n *  @param {Decibels} [midLevel] The gain applied to the mid.\n *  @param {Decibels} [highLevel] The gain applied to the high.\n *  @example\n * var eq = new Tone.EQ3(-10, 3, -20);\n */\nTone.EQ3 = function(){\n\n\tvar options = Tone.defaults(arguments, [\"low\", \"mid\", \"high\"], Tone.EQ3);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the output node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  the multiband split\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  The gain for the lower signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\n\t/**\n\t *  The gain for the mid signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Tone.Gain}\n\t * @private\n\t */\n\tthis._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the low part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.low = this._lowGain.gain;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.mid = this._midGain.gain;\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.high = this._highGain.gain;\n\n\t/**\n\t *  The Q value for all of the filters.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = this._multibandSplit.Q;\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._multibandSplit.highFrequency;\n\n\t//the frequency bands\n\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\tthis._readOnly([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n};\n\nTone.extend(Tone.EQ3, Tone.AudioNode);\n\n/**\n *  the default values\n */\nTone.EQ3.defaults = {\n\t\"low\" : 0,\n\t\"mid\" : 0,\n\t\"high\" : 0,\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500\n};\n\n/**\n *  clean up\n *  @returns {Tone.EQ3} this\n */\nTone.EQ3.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\tthis._multibandSplit.dispose();\n\tthis._multibandSplit = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\tthis._lowGain.dispose();\n\tthis._lowGain = null;\n\tthis._midGain.dispose();\n\tthis._midGain = null;\n\tthis._highGain.dispose();\n\tthis._highGain = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.EQ3;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/PanVol\";\nimport \"../component/Solo\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Channel provides a channel strip interface with \n *  volume, pan, solo and mute controls. \n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} volume The output volume.\n *  @param {AudioRange} pan the initial pan\n *  @example\n * //pan the incoming signal left and drop the volume\n * var channel = new Tone.Channel(-0.25, -12);\n */\nTone.Channel = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\", \"pan\"], Tone.PanVol);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The soloing interface\n\t *  @type {Tone.Solo}\n\t *  @private\n\t */\n\tthis._solo = this.input = new Tone.Solo(options.solo);\n\n\t/**\n\t *  The panning and volume node\n\t *  @type {Tone.PanVol}\n\t *  @private\n\t */\n\tthis._panVol = this.output = new Tone.PanVol({\n\t\t\"pan\" : options.pan, \n\t\t\"volume\" : options.volume,\n\t\t\"mute\" : options.mute\n\t});\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panVol.pan;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._panVol.volume;\n\n\tthis._solo.connect(this._panVol);\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.Channel, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Channel.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"solo\" : false\n};\n\n/**\n * Solo/unsolo the channel. Soloing is only relative to other\n * Tone.Channels and Tone.Solos. \n * @memberOf Tone.Channel#\n * @name solo\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._solo.solo;\n\t},\n\tset : function(solo){\n\t\tthis._solo.solo = solo;\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed,\n *  or the channel is muted\n *  @memberOf Tone.Channel#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Channel.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this._solo.muted || this.mute;\n\t}\n});\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.Channel#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._panVol.mute;\n\t},\n\tset : function(mute){\n\t\tthis._panVol.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Channel} this\n */\nTone.Channel.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panVol.dispose();\n\tthis._panVol = null;\n\tthis.pan = null;\n\tthis.volume = null;\n\tthis._solo.dispose();\n\tthis._solo = null;\n\treturn this;\n};\n\nexport default Tone.Channel;\n\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","require(\"./component/AmplitudeEnvelope\");\nrequire(\"./component/Analyser\");\nrequire(\"./component/Channel\");\nrequire(\"./component/Compressor\");\nrequire(\"./component/CrossFade\");\nrequire(\"./component/Envelope\");\nrequire(\"./component/EQ3\");\nrequire(\"./component/FeedbackCombFilter\");\nrequire(\"./component/FFT\");\nrequire(\"./component/Filter\");\nrequire(\"./component/Follower\");\nrequire(\"./component/FrequencyEnvelope\");\nrequire(\"./component/Gate\");\nrequire(\"./component/LFO\");\nrequire(\"./component/Limiter\");\nrequire(\"./component/LowpassCombFilter\");\nrequire(\"./component/Merge\");\nrequire(\"./component/Meter\");\nrequire(\"./component/MidSideCompressor\");\nrequire(\"./component/MidSideMerge\");\nrequire(\"./component/MidSideSplit\");\nrequire(\"./component/Mono\");\nrequire(\"./component/MultibandCompressor\");\nrequire(\"./component/MultibandSplit\");\nrequire(\"./component/Panner\");\nrequire(\"./component/Panner3D\");\nrequire(\"./component/PanVol\");\nrequire(\"./component/ScaledEnvelope\");\nrequire(\"./component/Solo\");\nrequire(\"./component/Split\");\nrequire(\"./component/Volume\");\nrequire(\"./component/Waveform\");\nrequire(\"./control/CtrlInterpolate\");\nrequire(\"./control/CtrlMarkov\");\nrequire(\"./control/CtrlPattern\");\nrequire(\"./control/CtrlRandom\");\nrequire(\"./core/AudioNode\");\nrequire(\"./core/Buffer\");\nrequire(\"./core/Buffers\");\nrequire(\"./core/Bus\");\nrequire(\"./core/Clock\");\nrequire(\"./core/Context\");\nrequire(\"./core/Delay\");\nrequire(\"./core/Draw\");\nrequire(\"./core/Emitter\");\nrequire(\"./core/Gain\");\nrequire(\"./core/IntervalTimeline\");\nrequire(\"./core/Listener\");\nrequire(\"./core/Master\");\nrequire(\"./core/Offline\");\nrequire(\"./core/OfflineContext\");\nrequire(\"./core/Param\");\nrequire(\"./core/Timeline\");\nrequire(\"./core/TimelineState\");\nrequire(\"./core/Transport\");\nrequire(\"./core/TransportEvent\");\nrequire(\"./core/TransportRepeatEvent\");\nrequire(\"./effect/AutoFilter\");\nrequire(\"./effect/AutoPanner\");\nrequire(\"./effect/AutoWah\");\nrequire(\"./effect/BitCrusher\");\nrequire(\"./effect/Chebyshev\");\nrequire(\"./effect/Chorus\");\nrequire(\"./effect/Convolver\");\nrequire(\"./effect/Distortion\");\nrequire(\"./effect/Effect\");\nrequire(\"./effect/FeedbackDelay\");\nrequire(\"./effect/FeedbackEffect\");\nrequire(\"./effect/Freeverb\");\nrequire(\"./effect/JCReverb\");\nrequire(\"./effect/MidSideEffect\");\nrequire(\"./effect/Phaser\");\nrequire(\"./effect/PingPongDelay\");\nrequire(\"./effect/PitchShift\");\nrequire(\"./effect/Reverb\");\nrequire(\"./effect/StereoEffect\");\nrequire(\"./effect/StereoFeedbackEffect\");\nrequire(\"./effect/StereoWidener\");\nrequire(\"./effect/StereoXFeedbackEffect\");\nrequire(\"./effect/Tremolo\");\nrequire(\"./effect/Vibrato\");\nrequire(\"./event/Event\");\nrequire(\"./event/Loop\");\nrequire(\"./event/Part\");\nrequire(\"./event/Pattern\");\nrequire(\"./event/Sequence\");\nrequire(\"./instrument/AMSynth\");\nrequire(\"./instrument/DuoSynth\");\nrequire(\"./instrument/FMSynth\");\nrequire(\"./instrument/Instrument\");\nrequire(\"./instrument/MembraneSynth\");\nrequire(\"./instrument/MetalSynth\");\nrequire(\"./instrument/Monophonic\");\nrequire(\"./instrument/MonoSynth\");\nrequire(\"./instrument/NoiseSynth\");\nrequire(\"./instrument/PluckSynth\");\nrequire(\"./instrument/PolySynth\");\nrequire(\"./instrument/Sampler\");\nrequire(\"./instrument/Synth\");\nrequire(\"./signal/Abs\");\nrequire(\"./signal/Add\");\nrequire(\"./signal/AudioToGain\");\nrequire(\"./signal/EqualPowerGain\");\nrequire(\"./signal/GainToAudio\");\nrequire(\"./signal/GreaterThan\");\nrequire(\"./signal/GreaterThanZero\");\nrequire(\"./signal/Modulo\");\nrequire(\"./signal/Multiply\");\nrequire(\"./signal/Negate\");\nrequire(\"./signal/Normalize\");\nrequire(\"./signal/Pow\");\nrequire(\"./signal/Scale\");\nrequire(\"./signal/ScaleExp\");\nrequire(\"./signal/Signal\");\nrequire(\"./signal/SignalBase\");\nrequire(\"./signal/Subtract\");\nrequire(\"./signal/TickSignal\");\nrequire(\"./signal/TransportTimelineSignal\");\nrequire(\"./signal/WaveShaper\");\nrequire(\"./signal/Zero\");\nrequire(\"./source/AMOscillator\");\nrequire(\"./source/BufferSource\");\nrequire(\"./source/FatOscillator\");\nrequire(\"./source/FMOscillator\");\nrequire(\"./source/GrainPlayer\");\nrequire(\"./source/Noise\");\nrequire(\"./source/OmniOscillator\");\nrequire(\"./source/Oscillator\");\nrequire(\"./source/OscillatorNode\");\nrequire(\"./source/Player\");\nrequire(\"./source/Players\");\nrequire(\"./source/PulseOscillator\");\nrequire(\"./source/PWMOscillator\");\nrequire(\"./source/Source\");\nrequire(\"./source/TickSource\");\nrequire(\"./source/UserMedia\");\nrequire(\"./type/Frequency\");\nrequire(\"./type/Midi\");\nrequire(\"./type/Ticks\");\nrequire(\"./type/Time\");\nrequire(\"./type/TimeBase\");\nrequire(\"./type/TransportTime\");\nrequire(\"./type/Type\");\nmodule.exports = require(\"./core/Tone\").default;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([], factory)\n\t } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n\t} else {\n\t\troot.StartAudioContext = factory()\n  }\n}(this, function () {\n\n\t//TAP LISTENER/////////////////////////////////////////////////////////////\n\n\t/**\n\t * @class  Listens for non-dragging tap ends on the given element\n\t * @param {Element} element\n\t * @internal\n\t */\n\tvar TapListener = function(element, context){\n\n\t\tthis._dragged = false\n\n\t\tthis._element = element\n\n\t\tthis._bindedMove = this._moved.bind(this)\n\t\tthis._bindedEnd = this._ended.bind(this, context)\n\n\t\telement.addEventListener(\"touchstart\", this._bindedEnd)\n\t\telement.addEventListener(\"touchmove\", this._bindedMove)\n\t\telement.addEventListener(\"touchend\", this._bindedEnd)\n\t\telement.addEventListener(\"mouseup\", this._bindedEnd)\n\t}\n\n\t/**\n\t * drag move event\n\t */\n\tTapListener.prototype._moved = function(e){\n\t\tthis._dragged = true\n\t};\n\n\t/**\n\t * tap ended listener\n\t */\n\tTapListener.prototype._ended = function(context){\n\t\tif (!this._dragged){\n\t\t\tstartContext(context)\n\t\t}\n\t\tthis._dragged = false\n\t};\n\n\t/**\n\t * remove all the bound events\n\t */\n\tTapListener.prototype.dispose = function(){\n\t\tthis._element.removeEventListener(\"touchstart\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"touchmove\", this._bindedMove)\n\t\tthis._element.removeEventListener(\"touchend\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"mouseup\", this._bindedEnd)\n\t\tthis._bindedMove = null\n\t\tthis._bindedEnd = null\n\t\tthis._element = null\n\t};\n\n\t//END TAP LISTENER/////////////////////////////////////////////////////////\n\n\t/**\n\t * Plays a silent sound and also invoke the \"resume\" method\n\t * @param {AudioContext} context\n\t * @private\n\t */\n\tfunction startContext(context){\n\t\t// this accomplishes the iOS specific requirement\n\t\tvar buffer = context.createBuffer(1, 1, context.sampleRate)\n\t\tvar source = context.createBufferSource()\n\t\tsource.buffer = buffer\n\t\tsource.connect(context.destination)\n\t\tsource.start(0)\n\n\t\t// resume the audio context\n\t\tif (context.resume){\n\t\t\tcontext.resume()\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the audio context is started\n\t * @param  {AudioContext}  context\n\t * @return {Boolean}\n\t * @private\n\t */\n\tfunction isStarted(context){\n\t\t return context.state === \"running\"\n\t}\n\n\t/**\n\t * Invokes the callback as soon as the AudioContext\n\t * is started\n\t * @param  {AudioContext}   context\n\t * @param  {Function} callback\n\t */\n\tfunction onStarted(context, callback){\n\n\t\tfunction checkLoop(){\n\t\t\tif (isStarted(context)){\n\t\t\t\tcallback()\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(checkLoop)\n\t\t\t\tif (context.resume){\n\t\t\t\t\tcontext.resume()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isStarted(context)){\n\t\t\tcallback()\n\t\t} else {\n\t\t\tcheckLoop()\n\t\t}\n\t}\n\n\t/**\n\t * Add a tap listener to the audio context\n\t * @param  {Array|Element|String|jQuery} element\n\t * @param {Array} tapListeners\n\t */\n\tfunction bindTapListener(element, tapListeners, context){\n\t\tif (Array.isArray(element) || (NodeList && element instanceof NodeList)){\n\t\t\tfor (var i = 0; i < element.length; i++){\n\t\t\t\tbindTapListener(element[i], tapListeners, context)\n\t\t\t}\n\t\t} else if (typeof element === \"string\"){\n\t\t\tbindTapListener(document.querySelectorAll(element), tapListeners, context)\n\t\t} else if (element.jquery && typeof element.toArray === \"function\"){\n\t\t\tbindTapListener(element.toArray(), tapListeners, context)\n\t\t} else if (Element && element instanceof Element){\n\t\t\t//if it's an element, create a TapListener\n\t\t\tvar tap = new TapListener(element, context)\n\t\t\ttapListeners.push(tap)\n\t\t} \n\t}\n\n\t/**\n\t * @param {AudioContext} context The AudioContext to start.\n\t * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n\t *                                               to bind tap event listeners\n\t *                                               which will start the AudioContext. If\n\t *                                               no elements are given, it will bind\n\t *                                               to the document.body.\n\t * @param {Function=} callback The callback to invoke when the AudioContext is started.\n\t * @return {Promise} The promise is invoked when the AudioContext\n\t *                       is started.\n\t */\n\tfunction StartAudioContext(context, elements, callback){\n\n\t\t//the promise is invoked when the AudioContext is started\n\t\tvar promise = new Promise(function(success) {\n\t\t\tonStarted(context, success)\n\t\t})\n\n\t\t// The TapListeners bound to the elements\n\t\tvar tapListeners = []\n\n\t\t// add all the tap listeners\n\t\tif (!elements){\n\t\t\telements = document.body\n\t\t}\n\t\tbindTapListener(elements, tapListeners, context)\n\n\t\t//dispose all these tap listeners when the context is started\n\t\tpromise.then(function(){\n\t\t\tfor (var i = 0; i < tapListeners.length; i++){\n\t\t\t\ttapListeners[i].dispose()\n\t\t\t}\n\t\t\ttapListeners = null\n\n\t\t\tif (callback){\n\t\t\t\tcallback()\n\t\t\t}\n\t\t})\n\n\t\treturn promise\n\t}\n\n\treturn StartAudioContext\n}))","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"a230297f\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"breeze_front:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/breeze_front/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbreeze_front\"] = self[\"webpackChunkbreeze_front\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\n\nexport const getBatch = () => batch;","import React from 'react';\nexport const ReactReduxContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;","import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import { useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useSelector(selector, equalityFn = refEquality) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState\n    } = useReduxContext();\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"reactReduxForwardedRef\"];\n\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport hoistStatics from 'hoist-non-react-statics';\nimport React, { useContext, useMemo, useRef } from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport defaultSelectorFactory from '../connect/selectorFactory';\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps';\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps';\nimport { mergePropsFactory } from '../connect/mergeProps';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport shallowEqual from '../utils/shallowEqual';\nimport warning from '../utils/warning';\nimport { ReactReduxContext } from './Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStore = notInitialized;\nexport const initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !isValidElementType(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = useRef();\n      const lastWrapperProps = useRef(wrapperProps);\n      const childPropsFromStoreUpdate = useRef();\n      const renderIsScheduled = useRef(false);\n      const isProcessingDispatch = useRef(false);\n      const isMounted = useRef(false);\n      const latestSubscriptionCallbackError = useRef();\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = useMemo(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = useMemo(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = React.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nexport default connect;","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;","import type { Action, ActionCreator, StoreEnhancer } from 'redux'\r\nimport { compose } from 'redux'\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface DevToolsEnhancerOptions {\r\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\r\n  name?: string\r\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\r\n  actionCreators?: ActionCreator<any>[] | { [key: string]: ActionCreator<any> }\r\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\r\n  latency?: number\r\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\r\n  maxAge?: number\r\n  /**\r\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\r\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\r\n   * functions.\r\n   */\r\n  serialize?:\r\n    | boolean\r\n    | {\r\n        /**\r\n         * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\r\n         * - `false` - will handle also circular references.\r\n         * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\r\n         * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\r\n         *   For each of them you can indicate if to include (by setting as `true`).\r\n         *   For `function` key you can also specify a custom function which handles serialization.\r\n         *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\r\n         */\r\n        options?:\r\n          | undefined\r\n          | boolean\r\n          | {\r\n              date?: true\r\n              regex?: true\r\n              undefined?: true\r\n              error?: true\r\n              symbol?: true\r\n              map?: true\r\n              set?: true\r\n              function?: true | ((fn: (...args: any[]) => any) => string)\r\n            }\r\n        /**\r\n         * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\r\n         * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\r\n         * key. So you can deserialize it back while importing or persisting data.\r\n         * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\r\n         */\r\n        replacer?: (key: string, value: unknown) => any\r\n        /**\r\n         * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\r\n         * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\r\n         * as an example on how to serialize special data types and get them back.\r\n         */\r\n        reviver?: (key: string, value: unknown) => any\r\n        /**\r\n         * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\r\n         * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\r\n         * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\r\n         */\r\n        immutable?: any\r\n        /**\r\n         * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\r\n         */\r\n        refs?: any\r\n      }\r\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\r\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A\r\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\r\n  stateSanitizer?: <S>(state: S, index: number) => S\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsDenylist instead.\r\n   */\r\n  actionsBlacklist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsAllowlist instead.\r\n   */\r\n  actionsWhitelist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsDenylist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsAllowlist?: string | string[]\r\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\r\n   */\r\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean\r\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldRecordChanges?: boolean\r\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\r\n  pauseActionType?: string\r\n  /**\r\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\r\n  autoPause?: boolean\r\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldStartLocked?: boolean\r\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldHotReload?: boolean\r\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldCatchErrors?: boolean\r\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\r\n  features?: {\r\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\r\n    pause?: boolean\r\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\r\n    lock?: boolean\r\n    /**\r\n     * persist states on page reloading\r\n     */\r\n    persist?: boolean\r\n    /**\r\n     * export history of actions in a file\r\n     */\r\n    export?: boolean | 'custom'\r\n    /**\r\n     * import history of actions from a file\r\n     */\r\n    import?: boolean | 'custom'\r\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\r\n    jump?: boolean\r\n    /**\r\n     * skip (cancel) actions\r\n     */\r\n    skip?: boolean\r\n    /**\r\n     * drag and drop actions in the history list\r\n     */\r\n    reorder?: boolean\r\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\r\n    dispatch?: boolean\r\n    /**\r\n     * generate tests for the selected actions\r\n     */\r\n    test?: boolean\r\n  }\r\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\r\n  trace?: boolean | (<A extends Action>(action: A) => string)\r\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\r\n  traceLimit?: number\r\n}\r\n\r\ntype Compose = typeof compose\r\n\r\ninterface ComposeWithDevTools {\r\n  (options: DevToolsEnhancerOptions): Compose\r\n  <StoreExt>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const composeWithDevTools: ComposeWithDevTools =\r\n  typeof window !== 'undefined' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : function () {\r\n        if (arguments.length === 0) return undefined\r\n        if (typeof arguments[0] === 'object') return compose\r\n        return compose.apply(null, arguments as any as Function[])\r\n      }\r\n\r\n/**\r\n * @public\r\n */\r\nexport const devToolsEnhancer: {\r\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>\r\n} =\r\n  typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    : function () {\r\n        return function (noop) {\r\n          return noop\r\n        }\r\n      }\r\n","/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\r\nexport default function isPlainObject(value: unknown): value is object {\r\n  if (typeof value !== 'object' || value === null) return false\r\n\r\n  let proto = Object.getPrototypeOf(value)\r\n  if (proto === null) return true\r\n\r\n  let baseProto = proto\r\n  while (Object.getPrototypeOf(baseProto) !== null) {\r\n    baseProto = Object.getPrototypeOf(baseProto)\r\n  }\r\n\r\n  return proto === baseProto\r\n}\r\n","import createNextState, { isDraftable } from 'immer'\r\nimport type { Middleware } from 'redux'\r\n\r\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\r\n  let elapsed = 0\r\n  return {\r\n    measureTime<T>(fn: () => T): T {\r\n      const started = Date.now()\r\n      try {\r\n        return fn()\r\n      } finally {\r\n        const finished = Date.now()\r\n        elapsed += finished - started\r\n      }\r\n    },\r\n    warnIfExceeded() {\r\n      if (elapsed > maxDelay) {\r\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \r\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\r\nIt is disabled in production builds, so you don't need to worry about that.`)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class MiddlewareArray<\r\n  Middlewares extends Middleware<any, any>[]\r\n> extends Array<Middlewares[number]> {\r\n  constructor(...items: Middlewares)\r\n  constructor(...args: any[]) {\r\n    super(...args)\r\n    Object.setPrototypeOf(this, MiddlewareArray.prototype)\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return MiddlewareArray as any\r\n  }\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n  concat(...arr: any[]) {\r\n    return super.concat.apply(this, arr)\r\n  }\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new MiddlewareArray(...arr[0].concat(this))\r\n    }\r\n    return new MiddlewareArray(...arr.concat(this))\r\n  }\r\n}\r\n\r\nexport function freezeDraftable<T>(val: T) {\r\n  return isDraftable(val) ? createNextState(val, () => {}) : val\r\n}\r\n","import type { Middleware, AnyAction } from 'redux'\r\nimport type { ThunkMiddleware } from 'redux-thunk'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware'\r\n/* PROD_START_REMOVE_UMD */\r\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware'\r\n/* PROD_STOP_REMOVE_UMD */\r\n\r\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware'\r\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware'\r\nimport type { ExcludeFromTuple } from './tsHelpers'\r\nimport { MiddlewareArray } from './utils'\r\n\r\nfunction isBoolean(x: any): x is boolean {\r\n  return typeof x === 'boolean'\r\n}\r\n\r\ninterface ThunkOptions<E = any> {\r\n  extraArgument: E\r\n}\r\n\r\ninterface GetDefaultMiddlewareOptions {\r\n  thunk?: boolean | ThunkOptions\r\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions\r\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions\r\n}\r\n\r\nexport type ThunkMiddlewareFor<\r\n  S,\r\n  O extends GetDefaultMiddlewareOptions = {}\r\n> = O extends {\r\n  thunk: false\r\n}\r\n  ? never\r\n  : O extends { thunk: { extraArgument: infer E } }\r\n  ? ThunkMiddleware<S, AnyAction, E>\r\n  : ThunkMiddleware<S, AnyAction>\r\n\r\nexport type CurriedGetDefaultMiddleware<S = any> = <\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options?: O\r\n) => MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>\r\n\r\nexport function curryGetDefaultMiddleware<\r\n  S = any\r\n>(): CurriedGetDefaultMiddleware<S> {\r\n  return function curriedGetDefaultMiddleware(options) {\r\n    return getDefaultMiddleware(options)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n *\r\n * @deprecated Prefer to use the callback notation for the `middleware` option in `configureStore`\r\n * to access a pre-typed `getDefaultMiddleware` instead.\r\n */\r\nexport function getDefaultMiddleware<\r\n  S = any,\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n  }\r\n>(\r\n  options: O = {} as O\r\n): MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>> {\r\n  const {\r\n    thunk = true,\r\n    immutableCheck = true,\r\n    serializableCheck = true,\r\n  } = options\r\n\r\n  let middlewareArray = new MiddlewareArray<Middleware[]>()\r\n\r\n  if (thunk) {\r\n    if (isBoolean(thunk)) {\r\n      middlewareArray.push(thunkMiddleware)\r\n    } else {\r\n      middlewareArray.push(\r\n        thunkMiddleware.withExtraArgument(thunk.extraArgument)\r\n      )\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (immutableCheck) {\r\n      /* PROD_START_REMOVE_UMD */\r\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(immutableCheck)) {\r\n        immutableOptions = immutableCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createImmutableStateInvariantMiddleware(immutableOptions)\r\n      )\r\n      /* PROD_STOP_REMOVE_UMD */\r\n    }\r\n\r\n    if (serializableCheck) {\r\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(serializableCheck)) {\r\n        serializableOptions = serializableCheck\r\n      }\r\n\r\n      middlewareArray.push(\r\n        createSerializableStateInvariantMiddleware(serializableOptions)\r\n      )\r\n    }\r\n  }\r\n\r\n  return middlewareArray as any\r\n}\r\n","import type { Action } from 'redux'\r\nimport type {\r\n  IsUnknownOrNonInferrable,\r\n  IfMaybeUndefined,\r\n  IfVoid,\r\n  IsAny,\r\n} from './tsHelpers'\r\nimport isPlainObject from './isPlainObject'\r\n\r\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n * @template M The type of the action's meta (optional)\r\n * @template E The type of the action's error (optional)\r\n *\r\n * @public\r\n */\r\nexport type PayloadAction<\r\n  P = void,\r\n  T extends string = string,\r\n  M = never,\r\n  E = never\r\n> = {\r\n  payload: P\r\n  type: T\r\n} & ([M] extends [never]\r\n  ? {}\r\n  : {\r\n      meta: M\r\n    }) &\r\n  ([E] extends [never]\r\n    ? {}\r\n    : {\r\n        error: E\r\n      })\r\n\r\n/**\r\n * A \"prepare\" method to be used as the second parameter of `createAction`.\r\n * Takes any number of arguments and returns a Flux Standard Action without\r\n * type (will be added later) that *must* contain a payload (might be undefined).\r\n *\r\n * @public\r\n */\r\nexport type PrepareAction<P> =\r\n  | ((...args: any[]) => { payload: P })\r\n  | ((...args: any[]) => { payload: P; meta: any })\r\n  | ((...args: any[]) => { payload: P; error: any })\r\n  | ((...args: any[]) => { payload: P; meta: any; error: any })\r\n\r\n/**\r\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\r\n *\r\n * @internal\r\n */\r\nexport type _ActionCreatorWithPreparedPayload<\r\n  PA extends PrepareAction<any> | void,\r\n  T extends string = string\r\n> = PA extends PrepareAction<infer P>\r\n  ? ActionCreatorWithPreparedPayload<\r\n      Parameters<PA>,\r\n      P,\r\n      T,\r\n      ReturnType<PA> extends {\r\n        error: infer E\r\n      }\r\n        ? E\r\n        : never,\r\n      ReturnType<PA> extends {\r\n        meta: infer M\r\n      }\r\n        ? M\r\n        : never\r\n    >\r\n  : void\r\n\r\n/**\r\n * Basic type for all action creators.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n */\r\nexport interface BaseActionCreator<P, T extends string, M = never, E = never> {\r\n  type: T\r\n  match: (action: Action<unknown>) => action is PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator that takes multiple arguments that are passed\r\n * to a `PrepareAction` method to create the final Action.\r\n * @typeParam Args arguments for the action creator function\r\n * @typeParam P `payload` type\r\n * @typeParam T `type` name\r\n * @typeParam E optional `error` type\r\n * @typeParam M optional `meta` type\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPreparedPayload<\r\n  Args extends unknown[],\r\n  P,\r\n  T extends string = string,\r\n  E = never,\r\n  M = never\r\n> extends BaseActionCreator<P, T, M, E> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with `Args` will return\r\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\r\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\r\n   */\r\n  (...args: Args): PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes an optional payload of type `P`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\r\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\r\n   */\r\n  (payload?: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes no payload.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithoutPayload<T extends string = string>\r\n  extends BaseActionCreator<undefined, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\r\n   */\r\n  (): PayloadAction<undefined, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that requires a payload of type P.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\r\n   */\r\n  (payload: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithNonInferrablePayload<\r\n  T extends string = string\r\n> extends BaseActionCreator<unknown, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload\r\n   * of exactly the type of the argument.\r\n   */\r\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>\r\n}\r\n\r\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n *\r\n * @typeParam P the `payload` type\r\n * @typeParam T the `type` of the resulting action\r\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\r\n *\r\n * @public\r\n */\r\nexport type PayloadActionCreator<\r\n  P = void,\r\n  T extends string = string,\r\n  PA extends PrepareAction<P> | void = void\r\n> = IfPrepareActionMethodProvided<\r\n  PA,\r\n  _ActionCreatorWithPreparedPayload<PA, T>,\r\n  // else\r\n  IsAny<\r\n    P,\r\n    ActionCreatorWithPayload<any, T>,\r\n    IsUnknownOrNonInferrable<\r\n      P,\r\n      ActionCreatorWithNonInferrablePayload<T>,\r\n      // else\r\n      IfVoid<\r\n        P,\r\n        ActionCreatorWithoutPayload<T>,\r\n        // else\r\n        IfMaybeUndefined<\r\n          P,\r\n          ActionCreatorWithOptionalPayload<P, T>,\r\n          // else\r\n          ActionCreatorWithPayload<P, T>\r\n        >\r\n      >\r\n    >\r\n  >\r\n>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<P = void, T extends string = string>(\r\n  type: T\r\n): PayloadActionCreator<P, T>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<\r\n  PA extends PrepareAction<any>,\r\n  T extends string = string\r\n>(\r\n  type: T,\r\n  prepareAction: PA\r\n): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>\r\n\r\nexport function createAction(type: string, prepareAction?: Function): any {\r\n  function actionCreator(...args: any[]) {\r\n    if (prepareAction) {\r\n      let prepared = prepareAction(...args)\r\n      if (!prepared) {\r\n        throw new Error('prepareAction did not return an object')\r\n      }\r\n\r\n      return {\r\n        type,\r\n        payload: prepared.payload,\r\n        ...('meta' in prepared && { meta: prepared.meta }),\r\n        ...('error' in prepared && { error: prepared.error }),\r\n      }\r\n    }\r\n    return { type, payload: args[0] }\r\n  }\r\n\r\n  actionCreator.toString = () => `${type}`\r\n\r\n  actionCreator.type = type\r\n\r\n  actionCreator.match = (action: Action<unknown>): action is PayloadAction =>\r\n    action.type === type\r\n\r\n  return actionCreator\r\n}\r\n\r\nexport function isFSA(action: unknown): action is {\r\n  type: string\r\n  payload?: unknown\r\n  error?: unknown\r\n  meta?: unknown\r\n} {\r\n  return (\r\n    isPlainObject(action) &&\r\n    typeof (action as any).type === 'string' &&\r\n    Object.keys(action).every(isValidKey)\r\n  )\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1\r\n}\r\n\r\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\r\nexport function getType<T extends string>(\r\n  actionCreator: PayloadActionCreator<any, T>\r\n): T {\r\n  return `${actionCreator}` as T\r\n}\r\n\r\n// helper types for more readable typings\r\n\r\ntype IfPrepareActionMethodProvided<\r\n  PA extends PrepareAction<any> | void,\r\n  True,\r\n  False\r\n> = PA extends (...args: any[]) => any ? True : False\r\n","import type { Action, AnyAction } from 'redux'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ActionMatcherDescriptionCollection,\r\n} from './createReducer'\r\nimport type { TypeGuard } from './tsHelpers'\r\n\r\nexport interface TypedActionCreator<Type extends string> {\r\n  (...args: any[]): Action<Type>\r\n  type: Type\r\n}\r\n\r\n/**\r\n * A builder for an action <-> reducer map.\r\n *\r\n * @public\r\n */\r\nexport interface ActionReducerMapBuilder<State> {\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<ActionCreator extends TypedActionCreator<string>>(\r\n    actionCreator: ActionCreator,\r\n    reducer: CaseReducer<State, ReturnType<ActionCreator>>\r\n  ): ActionReducerMapBuilder<State>\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<Type extends string, A extends Action<Type>>(\r\n    type: Type,\r\n    reducer: CaseReducer<State, A>\r\n  ): ActionReducerMapBuilder<State>\r\n\r\n  /**\r\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\r\n   * @remarks\r\n   * If multiple matcher reducers match, all of them will be executed in the order\r\n   * they were defined in - even if a case reducer already matched.\r\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\r\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/advanced-types.html#using-type-predicates)\r\n   *   function\r\n   * @param reducer - The actual case reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AsyncThunk,\r\n  AnyAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\r\n\r\nconst initialState: Record<string, string> = {};\r\nconst resetAction = createAction(\"reset-tracked-loading-state\");\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith(\"/pending\");\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(resetAction, () => initialState)\r\n    // matcher can be defined outside as a type predicate function\r\n    .addMatcher(isPendingAction, (state, action) => {\r\n      state[action.meta.requestId] = \"pending\";\r\n    })\r\n    .addMatcher(\r\n      // matcher can be defined inline as a type predicate function\r\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"rejected\";\r\n      }\r\n    )\r\n    // matcher can just return boolean and the matcher can receive a generic argument\r\n    .addMatcher<FulfilledAction>(\r\n      (action) => action.type.endsWith(\"/fulfilled\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"fulfilled\";\r\n      }\r\n    );\r\n});\r\n```\r\n   */\r\n  addMatcher<A>(\r\n    matcher: TypeGuard<A> | ((action: any) => boolean),\r\n    reducer: CaseReducer<State, A extends AnyAction ? A : A & AnyAction>\r\n  ): Omit<ActionReducerMapBuilder<State>, 'addCase'>\r\n\r\n  /**\r\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\r\n   * reducer was executed for this action.\r\n   * @param reducer - The fallback \"default case\" reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nconst initialState = { otherActions: 0 }\r\nconst reducer = createReducer(initialState, builder => {\r\n  builder\r\n    // .addCase(...)\r\n    // .addMatcher(...)\r\n    .addDefaultCase((state, action) => {\r\n      state.otherActions++\r\n    })\r\n})\r\n```\r\n   */\r\n  addDefaultCase(reducer: CaseReducer<State, AnyAction>): {}\r\n}\r\n\r\nexport function executeReducerBuilderCallback<S>(\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): [\r\n  CaseReducers<S, any>,\r\n  ActionMatcherDescriptionCollection<S>,\r\n  CaseReducer<S, AnyAction> | undefined\r\n] {\r\n  const actionsMap: CaseReducers<S, any> = {}\r\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = []\r\n  let defaultCaseReducer: CaseReducer<S, AnyAction> | undefined\r\n  const builder = {\r\n    addCase(\r\n      typeOrActionCreator: string | TypedActionCreator<any>,\r\n      reducer: CaseReducer<S>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        /*\r\n         to keep the definition by the user in line with actual behavior, \r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\r\n        if (actionMatchers.length > 0) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addMatcher`'\r\n          )\r\n        }\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      const type =\r\n        typeof typeOrActionCreator === 'string'\r\n          ? typeOrActionCreator\r\n          : typeOrActionCreator.type\r\n      if (type in actionsMap) {\r\n        throw new Error(\r\n          'addCase cannot be called with two reducers for the same action type'\r\n        )\r\n      }\r\n      actionsMap[type] = reducer\r\n      return builder\r\n    },\r\n    addMatcher<A>(\r\n      matcher: TypeGuard<A>,\r\n      reducer: CaseReducer<S, A extends AnyAction ? A : A & AnyAction>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      actionMatchers.push({ matcher, reducer })\r\n      return builder\r\n    },\r\n    addDefaultCase(reducer: CaseReducer<S, AnyAction>) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error('`builder.addDefaultCase` can only be called once')\r\n        }\r\n      }\r\n      defaultCaseReducer = reducer\r\n      return builder\r\n    },\r\n  }\r\n  builderCallback(builder)\r\n  return [actionsMap, actionMatchers, defaultCaseReducer]\r\n}\r\n","// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\r\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\r\n// optimize the gzip compression for this alphabet.\r\nlet urlAlphabet =\r\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\r\n\r\n/**\r\n *\r\n * @public\r\n */\r\nexport let nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n","import type { Dispatch, AnyAction } from 'redux'\r\nimport type {\r\n  PayloadAction,\r\n  ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport type { FallbackIfUnknown, IsAny, IsUnknown } from './tsHelpers'\r\nimport { nanoid } from './nanoid'\r\n\r\n// @ts-ignore we need the import of these types due to a bundling issue.\r\ntype _Keep = PayloadAction | ActionCreatorWithPreparedPayload<any, unknown>\r\n\r\nexport type BaseThunkAPI<\r\n  S,\r\n  E,\r\n  D extends Dispatch = Dispatch,\r\n  RejectedValue = undefined,\r\n  RejectedMeta = unknown,\r\n  FulfilledMeta = unknown\r\n> = {\r\n  dispatch: D\r\n  getState: () => S\r\n  extra: E\r\n  requestId: string\r\n  signal: AbortSignal\r\n  rejectWithValue: IsUnknown<\r\n    RejectedMeta,\r\n    (value: RejectedValue) => RejectWithValue<RejectedValue, RejectedMeta>,\r\n    (\r\n      value: RejectedValue,\r\n      meta: RejectedMeta\r\n    ) => RejectWithValue<RejectedValue, RejectedMeta>\r\n  >\r\n  fulfillWithValue: IsUnknown<\r\n    FulfilledMeta,\r\n    <FulfilledValue>(\r\n      value: FulfilledValue\r\n    ) => FulfillWithMeta<FulfilledValue, FulfilledMeta>,\r\n    <FulfilledValue>(\r\n      value: FulfilledValue,\r\n      meta: FulfilledMeta\r\n    ) => FulfillWithMeta<FulfilledValue, FulfilledMeta>\r\n  >\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface SerializedError {\r\n  name?: string\r\n  message?: string\r\n  stack?: string\r\n  code?: string\r\n}\r\n\r\nconst commonProperties: Array<keyof SerializedError> = [\r\n  'name',\r\n  'message',\r\n  'stack',\r\n  'code',\r\n]\r\n\r\nclass RejectWithValue<Payload, RejectedMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'RejectWithValue'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: RejectedMeta\r\n  ) {}\r\n}\r\n\r\nclass FulfillWithMeta<Payload, FulfilledMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'FulfillWithMeta'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: FulfilledMeta\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Serializes an error into a plain object.\r\n * Reworked from https://github.com/sindresorhus/serialize-error\r\n *\r\n * @public\r\n */\r\nexport const miniSerializeError = (value: any): SerializedError => {\r\n  if (typeof value === 'object' && value !== null) {\r\n    const simpleError: SerializedError = {}\r\n    for (const property of commonProperties) {\r\n      if (typeof value[property] === 'string') {\r\n        simpleError[property] = value[property]\r\n      }\r\n    }\r\n\r\n    return simpleError\r\n  }\r\n\r\n  return { message: String(value) }\r\n}\r\n\r\ntype AsyncThunkConfig = {\r\n  state?: unknown\r\n  dispatch?: Dispatch\r\n  extra?: unknown\r\n  rejectValue?: unknown\r\n  serializedErrorType?: unknown\r\n  pendingMeta?: unknown\r\n  fulfilledMeta?: unknown\r\n  rejectedMeta?: unknown\r\n}\r\n\r\ntype GetState<ThunkApiConfig> = ThunkApiConfig extends {\r\n  state: infer State\r\n}\r\n  ? State\r\n  : unknown\r\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends { extra: infer Extra }\r\n  ? Extra\r\n  : unknown\r\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\r\n  dispatch: infer Dispatch\r\n}\r\n  ? FallbackIfUnknown<\r\n      Dispatch,\r\n      ThunkDispatch<\r\n        GetState<ThunkApiConfig>,\r\n        GetExtra<ThunkApiConfig>,\r\n        AnyAction\r\n      >\r\n    >\r\n  : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, AnyAction>\r\n\r\ntype GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<\r\n  GetState<ThunkApiConfig>,\r\n  GetExtra<ThunkApiConfig>,\r\n  GetDispatch<ThunkApiConfig>,\r\n  GetRejectValue<ThunkApiConfig>,\r\n  GetRejectedMeta<ThunkApiConfig>,\r\n  GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectValue: infer RejectValue\r\n}\r\n  ? RejectValue\r\n  : unknown\r\n\r\ntype GetPendingMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  pendingMeta: infer PendingMeta\r\n}\r\n  ? PendingMeta\r\n  : unknown\r\n\r\ntype GetFulfilledMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  fulfilledMeta: infer FulfilledMeta\r\n}\r\n  ? FulfilledMeta\r\n  : unknown\r\n\r\ntype GetRejectedMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectedMeta: infer RejectedMeta\r\n}\r\n  ? RejectedMeta\r\n  : unknown\r\n\r\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\r\n  serializedErrorType: infer GetSerializedErrorType\r\n}\r\n  ? GetSerializedErrorType\r\n  : SerializedError\r\n\r\ntype MaybePromise<T> = T | Promise<T> | (T extends any ? Promise<T> : never)\r\n\r\n/**\r\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreatorReturnValue<\r\n  Returned,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = MaybePromise<\r\n  | IsUnknown<\r\n      GetFulfilledMeta<ThunkApiConfig>,\r\n      Returned,\r\n      FulfillWithMeta<Returned, GetFulfilledMeta<ThunkApiConfig>>\r\n    >\r\n  | RejectWithValue<\r\n      GetRejectValue<ThunkApiConfig>,\r\n      GetRejectedMeta<ThunkApiConfig>\r\n    >\r\n>\r\n/**\r\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreator<\r\n  Returned,\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = (\r\n  arg: ThunkArg,\r\n  thunkAPI: GetThunkAPI<ThunkApiConfig>\r\n) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>\r\n\r\n/**\r\n * A ThunkAction created by `createAsyncThunk`.\r\n * Dispatching it returns a Promise for either a\r\n * fulfilled or rejected action.\r\n * Also, the returned value contains an `abort()` method\r\n * that allows the asyncAction to be cancelled from the outside.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkAction<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = (\r\n  dispatch: GetDispatch<ThunkApiConfig>,\r\n  getState: () => GetState<ThunkApiConfig>,\r\n  extra: GetExtra<ThunkApiConfig>\r\n) => Promise<\r\n  | ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>>\r\n  | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>\r\n> & {\r\n  abort: (reason?: string) => void\r\n  requestId: string\r\n  arg: ThunkArg\r\n  unwrap: () => Promise<Returned>\r\n}\r\n\r\ntype AsyncThunkActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = IsAny<\r\n  ThunkArg,\r\n  // any handling\r\n  (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n  // unknown handling\r\n  unknown extends ThunkArg\r\n    ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument not specified or specified as void or undefined\r\n    : [ThunkArg] extends [void] | [undefined]\r\n    ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains void\r\n    : [void] extends [ThunkArg] // make optional\r\n    ? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains undefined\r\n    : [undefined] extends [ThunkArg]\r\n    ? WithStrictNullChecks<\r\n        // with strict nullChecks: make optional\r\n        (\r\n          arg?: ThunkArg\r\n        ) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n        // without strict null checks this will match everything, so don't make it optional\r\n        (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n      > // default case: normal argument\r\n    : (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * Options object for `createAsyncThunk`.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkOptions<\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = {\r\n  /**\r\n   * A method to control whether the asyncThunk should be executed. Has access to the\r\n   * `arg`, `api.getState()` and `api.extra` arguments.\r\n   *\r\n   * @returns `false` if it should be skipped\r\n   */\r\n  condition?(\r\n    arg: ThunkArg,\r\n    api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n  ): MaybePromise<boolean | undefined>\r\n  /**\r\n   * If `condition` returns `false`, the asyncThunk will be skipped.\r\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\r\n   * will be dispatched or not.\r\n   *\r\n   * @default `false`\r\n   */\r\n  dispatchConditionRejection?: boolean\r\n\r\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>\r\n\r\n  /**\r\n   * A function to use when generating the `requestId` for the request sequence.\r\n   *\r\n   * @default `nanoid`\r\n   */\r\n  idGenerator?: (arg: ThunkArg) => string\r\n} & IsUnknown<\r\n  GetPendingMeta<ThunkApiConfig>,\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     *\r\n     * Using this optional overload will not modify the types correctly, this overload is only in place to support JavaScript users.\r\n     * Please use the `ThunkApiConfig` parameter `pendingMeta` to get access to a correctly typed overload\r\n     */\r\n    getPendingMeta?(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  },\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     */\r\n    getPendingMeta(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  }\r\n>\r\n\r\nexport type AsyncThunkPendingActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [string, ThunkArg, GetPendingMeta<ThunkApiConfig>?],\r\n  undefined,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'pending'\r\n  } & GetPendingMeta<ThunkApiConfig>\r\n>\r\n\r\nexport type AsyncThunkRejectedActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [\r\n    Error | null,\r\n    string,\r\n    ThunkArg,\r\n    GetRejectValue<ThunkApiConfig>?,\r\n    GetRejectedMeta<ThunkApiConfig>?\r\n  ],\r\n  GetRejectValue<ThunkApiConfig> | undefined,\r\n  string,\r\n  GetSerializedErrorType<ThunkApiConfig>,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'rejected'\r\n    aborted: boolean\r\n    condition: boolean\r\n  } & (\r\n    | ({ rejectedWithValue: false } & {\r\n        [K in keyof GetRejectedMeta<ThunkApiConfig>]?: undefined\r\n      })\r\n    | ({ rejectedWithValue: true } & GetRejectedMeta<ThunkApiConfig>)\r\n  )\r\n>\r\n\r\nexport type AsyncThunkFulfilledActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [Returned, string, ThunkArg, GetFulfilledMeta<ThunkApiConfig>?],\r\n  Returned,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'fulfilled'\r\n  } & GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * A type describing the return value of `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\r\n  pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig>\r\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>\r\n  fulfilled: AsyncThunkFulfilledActionCreator<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig\r\n  >\r\n  typePrefix: string\r\n}\r\n\r\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\r\n// separate signature without `AsyncThunkConfig` for better inference\r\nexport function createAsyncThunk<Returned, ThunkArg = void>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, {}>,\r\n  options?: AsyncThunkOptions<ThunkArg, {}>\r\n): AsyncThunk<Returned, ThunkArg, {}>\r\n\r\n/**\r\n *\r\n * @param typePrefix\r\n * @param payloadCreator\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createAsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\r\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig>\r\n\r\nexport function createAsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n>(\r\n  typePrefix: string,\r\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\r\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\r\n  type RejectedValue = GetRejectValue<ThunkApiConfig>\r\n  type PendingMeta = GetPendingMeta<ThunkApiConfig>\r\n  type FulfilledMeta = GetFulfilledMeta<ThunkApiConfig>\r\n  type RejectedMeta = GetRejectedMeta<ThunkApiConfig>\r\n\r\n  const fulfilled: AsyncThunkFulfilledActionCreator<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig\r\n  > = createAction(\r\n    typePrefix + '/fulfilled',\r\n    (\r\n      payload: Returned,\r\n      requestId: string,\r\n      arg: ThunkArg,\r\n      meta?: FulfilledMeta\r\n    ) => ({\r\n      payload,\r\n      meta: {\r\n        ...((meta as any) || {}),\r\n        arg,\r\n        requestId,\r\n        requestStatus: 'fulfilled' as const,\r\n      },\r\n    })\r\n  )\r\n\r\n  const pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig> =\r\n    createAction(\r\n      typePrefix + '/pending',\r\n      (requestId: string, arg: ThunkArg, meta?: PendingMeta) => ({\r\n        payload: undefined,\r\n        meta: {\r\n          ...((meta as any) || {}),\r\n          arg,\r\n          requestId,\r\n          requestStatus: 'pending' as const,\r\n        },\r\n      })\r\n    )\r\n\r\n  const rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> =\r\n    createAction(\r\n      typePrefix + '/rejected',\r\n      (\r\n        error: Error | null,\r\n        requestId: string,\r\n        arg: ThunkArg,\r\n        payload?: RejectedValue,\r\n        meta?: RejectedMeta\r\n      ) => ({\r\n        payload,\r\n        error: ((options && options.serializeError) || miniSerializeError)(\r\n          error || 'Rejected'\r\n        ) as GetSerializedErrorType<ThunkApiConfig>,\r\n        meta: {\r\n          ...((meta as any) || {}),\r\n          arg,\r\n          requestId,\r\n          rejectedWithValue: !!payload,\r\n          requestStatus: 'rejected' as const,\r\n          aborted: error?.name === 'AbortError',\r\n          condition: error?.name === 'ConditionError',\r\n        },\r\n      })\r\n    )\r\n\r\n  let displayedWarning = false\r\n\r\n  const AC =\r\n    typeof AbortController !== 'undefined'\r\n      ? AbortController\r\n      : class implements AbortController {\r\n          signal = {\r\n            aborted: false,\r\n            addEventListener() {},\r\n            dispatchEvent() {\r\n              return false\r\n            },\r\n            onabort() {},\r\n            removeEventListener() {},\r\n            reason: undefined,\r\n            throwIfAborted() {},\r\n          }\r\n          abort() {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n              if (!displayedWarning) {\r\n                displayedWarning = true\r\n                console.info(\r\n                  `This platform does not implement AbortController. \r\nIf you want to use the AbortController to react to \\`abort\\` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.`\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n  function actionCreator(\r\n    arg: ThunkArg\r\n  ): AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> {\r\n    return (dispatch, getState, extra) => {\r\n      const requestId = options?.idGenerator\r\n        ? options.idGenerator(arg)\r\n        : nanoid()\r\n\r\n      const abortController = new AC()\r\n      let abortReason: string | undefined\r\n\r\n      const abortedPromise = new Promise<never>((_, reject) =>\r\n        abortController.signal.addEventListener('abort', () =>\r\n          reject({ name: 'AbortError', message: abortReason || 'Aborted' })\r\n        )\r\n      )\r\n\r\n      let started = false\r\n      function abort(reason?: string) {\r\n        if (started) {\r\n          abortReason = reason\r\n          abortController.abort()\r\n        }\r\n      }\r\n\r\n      const promise = (async function () {\r\n        let finalAction: ReturnType<typeof fulfilled | typeof rejected>\r\n        try {\r\n          let conditionResult = options?.condition?.(arg, { getState, extra })\r\n          if (isThenable(conditionResult)) {\r\n            conditionResult = await conditionResult\r\n          }\r\n          if (conditionResult === false) {\r\n            // eslint-disable-next-line no-throw-literal\r\n            throw {\r\n              name: 'ConditionError',\r\n              message: 'Aborted due to condition callback returning false.',\r\n            }\r\n          }\r\n          started = true\r\n          dispatch(\r\n            pending(\r\n              requestId,\r\n              arg,\r\n              options?.getPendingMeta?.({ requestId, arg }, { getState, extra })\r\n            )\r\n          )\r\n          finalAction = await Promise.race([\r\n            abortedPromise,\r\n            Promise.resolve(\r\n              payloadCreator(arg, {\r\n                dispatch,\r\n                getState,\r\n                extra,\r\n                requestId,\r\n                signal: abortController.signal,\r\n                rejectWithValue: ((\r\n                  value: RejectedValue,\r\n                  meta?: RejectedMeta\r\n                ) => {\r\n                  return new RejectWithValue(value, meta)\r\n                }) as any,\r\n                fulfillWithValue: ((value: unknown, meta?: FulfilledMeta) => {\r\n                  return new FulfillWithMeta(value, meta)\r\n                }) as any,\r\n              })\r\n            ).then((result) => {\r\n              if (result instanceof RejectWithValue) {\r\n                throw result\r\n              }\r\n              if (result instanceof FulfillWithMeta) {\r\n                return fulfilled(result.payload, requestId, arg, result.meta)\r\n              }\r\n              return fulfilled(result as any, requestId, arg)\r\n            }),\r\n          ])\r\n        } catch (err) {\r\n          finalAction =\r\n            err instanceof RejectWithValue\r\n              ? rejected(null, requestId, arg, err.payload, err.meta)\r\n              : rejected(err as any, requestId, arg)\r\n        }\r\n        // We dispatch the result action _after_ the catch, to avoid having any errors\r\n        // here get swallowed by the try/catch block,\r\n        // per https://twitter.com/dan_abramov/status/770914221638942720\r\n        // and https://github.com/reduxjs/redux-toolkit/blob/e85eb17b39a2118d859f7b7746e0f3fee523e089/docs/tutorials/advanced-tutorial.md#async-error-handling-logic-in-thunks\r\n\r\n        const skipDispatch =\r\n          options &&\r\n          !options.dispatchConditionRejection &&\r\n          rejected.match(finalAction) &&\r\n          (finalAction as any).meta.condition\r\n\r\n        if (!skipDispatch) {\r\n          dispatch(finalAction)\r\n        }\r\n        return finalAction\r\n      })()\r\n      return Object.assign(promise as Promise<any>, {\r\n        abort,\r\n        requestId,\r\n        arg,\r\n        unwrap() {\r\n          return promise.then<any>(unwrapResult)\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  return Object.assign(\r\n    actionCreator as AsyncThunkActionCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      ThunkApiConfig\r\n    >,\r\n    {\r\n      pending,\r\n      rejected,\r\n      fulfilled,\r\n      typePrefix,\r\n    }\r\n  )\r\n}\r\n\r\ninterface UnwrappableAction {\r\n  payload: any\r\n  meta?: any\r\n  error?: any\r\n}\r\n\r\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<\r\n  T,\r\n  { error: any }\r\n>['payload']\r\n\r\n/**\r\n * @public\r\n */\r\nexport function unwrapResult<R extends UnwrappableAction>(\r\n  action: R\r\n): UnwrappedActionPayload<R> {\r\n  if (action.meta && action.meta.rejectedWithValue) {\r\n    throw action.payload\r\n  }\r\n  if (action.error) {\r\n    throw action.error\r\n  }\r\n  return action.payload\r\n}\r\n\r\ntype WithStrictNullChecks<True, False> = undefined extends boolean\r\n  ? False\r\n  : True\r\n\r\nfunction isThenable(value: any): value is PromiseLike<any> {\r\n  return (\r\n    value !== null &&\r\n    typeof value === 'object' &&\r\n    typeof value.then === 'function'\r\n  )\r\n}\r\n","import type { Dispatch, AnyAction, MiddlewareAPI } from 'redux'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport { createAction } from '../createAction'\r\nimport { nanoid } from '../nanoid'\r\n\r\nimport type {\r\n  ListenerMiddleware,\r\n  ListenerMiddlewareInstance,\r\n  AddListenerOverloads,\r\n  AnyListenerPredicate,\r\n  CreateListenerMiddlewareOptions,\r\n  TypedAddListener,\r\n  TypedCreateListenerEntry,\r\n  FallbackAddListenerOptions,\r\n  ListenerEntry,\r\n  ListenerErrorHandler,\r\n  UnsubscribeListener,\r\n  TakePattern,\r\n  ListenerErrorInfo,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  TypedRemoveListener,\r\n  TaskResult,\r\n  AbortSignalWithReason,\r\n  UnsubscribeListenerOptions,\r\n} from './types'\r\nimport {\r\n  abortControllerWithReason,\r\n  addAbortSignalListener,\r\n  assertFunction,\r\n  catchRejection,\r\n} from './utils'\r\nimport {\r\n  listenerCancelled,\r\n  listenerCompleted,\r\n  TaskAbortError,\r\n  taskCancelled,\r\n  taskCompleted,\r\n} from './exceptions'\r\nimport {\r\n  runTask,\r\n  promisifyAbortSignal,\r\n  validateActive,\r\n  createPause,\r\n  createDelay,\r\n} from './task'\r\nexport { TaskAbortError } from './exceptions'\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './types'\r\n\r\n//Overly-aggressive byte-shaving\r\nconst { assign } = Object\r\n/**\r\n * @internal\r\n */\r\nconst INTERNAL_NIL_TOKEN = {} as const\r\n\r\nconst alm = 'listenerMiddleware' as const\r\n\r\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>) => {\r\n  const linkControllers = (controller: AbortController) =>\r\n    addAbortSignalListener(parentAbortSignal, () =>\r\n      abortControllerWithReason(controller, parentAbortSignal.reason)\r\n    )\r\n\r\n  return <T>(taskExecutor: ForkedTaskExecutor<T>): ForkedTask<T> => {\r\n    assertFunction(taskExecutor, 'taskExecutor')\r\n    const childAbortController = new AbortController()\r\n\r\n    linkControllers(childAbortController)\r\n\r\n    const result = runTask<T>(\r\n      async (): Promise<T> => {\r\n        validateActive(parentAbortSignal)\r\n        validateActive(childAbortController.signal)\r\n        const result = (await taskExecutor({\r\n          pause: createPause(childAbortController.signal),\r\n          delay: createDelay(childAbortController.signal),\r\n          signal: childAbortController.signal,\r\n        })) as T\r\n        validateActive(childAbortController.signal)\r\n        return result\r\n      },\r\n      () => abortControllerWithReason(childAbortController, taskCompleted)\r\n    )\r\n\r\n    return {\r\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\r\n      cancel() {\r\n        abortControllerWithReason(childAbortController, taskCancelled)\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nconst createTakePattern = <S>(\r\n  startListening: AddListenerOverloads<\r\n    UnsubscribeListener,\r\n    S,\r\n    Dispatch<AnyAction>\r\n  >,\r\n  signal: AbortSignal\r\n): TakePattern<S> => {\r\n  /**\r\n   * A function that takes a ListenerPredicate and an optional timeout,\r\n   * and resolves when either the predicate returns `true` based on an action\r\n   * state combination or when the timeout expires.\r\n   * If the parent listener is canceled while waiting, this will throw a\r\n   * TaskAbortError.\r\n   */\r\n  const take = async <P extends AnyListenerPredicate<S>>(\r\n    predicate: P,\r\n    timeout: number | undefined\r\n  ) => {\r\n    validateActive(signal)\r\n\r\n    // Placeholder unsubscribe function until the listener is added\r\n    let unsubscribe: UnsubscribeListener = () => {}\r\n\r\n    const tuplePromise = new Promise<[AnyAction, S, S]>((resolve) => {\r\n      // Inside the Promise, we synchronously add the listener.\r\n      unsubscribe = startListening({\r\n        predicate: predicate as any,\r\n        effect: (action, listenerApi): void => {\r\n          // One-shot listener that cleans up as soon as the predicate passes\r\n          listenerApi.unsubscribe()\r\n          // Resolve the promise with the same arguments the predicate saw\r\n          resolve([\r\n            action,\r\n            listenerApi.getState(),\r\n            listenerApi.getOriginalState(),\r\n          ])\r\n        },\r\n      })\r\n    })\r\n\r\n    const promises: (Promise<null> | Promise<[AnyAction, S, S]>)[] = [\r\n      promisifyAbortSignal(signal),\r\n      tuplePromise,\r\n    ]\r\n\r\n    if (timeout != null) {\r\n      promises.push(\r\n        new Promise<null>((resolve) => setTimeout(resolve, timeout, null))\r\n      )\r\n    }\r\n\r\n    try {\r\n      const output = await Promise.race(promises)\r\n\r\n      validateActive(signal)\r\n      return output\r\n    } finally {\r\n      // Always clean up the listener\r\n      unsubscribe()\r\n    }\r\n  }\r\n\r\n  return ((predicate: AnyListenerPredicate<S>, timeout: number | undefined) =>\r\n    catchRejection(take(predicate, timeout))) as TakePattern<S>\r\n}\r\n\r\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\r\n  let { type, actionCreator, matcher, predicate, effect } = options\r\n\r\n  if (type) {\r\n    predicate = createAction(type).match\r\n  } else if (actionCreator) {\r\n    type = actionCreator!.type\r\n    predicate = actionCreator.match\r\n  } else if (matcher) {\r\n    predicate = matcher\r\n  } else if (predicate) {\r\n    // pass\r\n  } else {\r\n    throw new Error(\r\n      'Creating or removing a listener requires one of the known fields for matching an action'\r\n    )\r\n  }\r\n\r\n  assertFunction(effect, 'options.listener')\r\n\r\n  return { predicate, type, effect }\r\n}\r\n\r\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\r\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = (\r\n  options: FallbackAddListenerOptions\r\n) => {\r\n  const { type, predicate, effect } = getListenerEntryPropsFrom(options)\r\n\r\n  const id = nanoid()\r\n  const entry: ListenerEntry<unknown> = {\r\n    id,\r\n    effect,\r\n    type,\r\n    predicate,\r\n    pending: new Set<AbortController>(),\r\n    unsubscribe: () => {\r\n      throw new Error('Unsubscribe not initialized')\r\n    },\r\n  }\r\n\r\n  return entry\r\n}\r\n\r\nconst createClearListenerMiddleware = (\r\n  listenerMap: Map<string, ListenerEntry>\r\n) => {\r\n  return () => {\r\n    listenerMap.forEach(cancelActiveListeners)\r\n\r\n    listenerMap.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * Safely reports errors to the `errorHandler` provided.\r\n * Errors that occur inside `errorHandler` are notified in a new task.\r\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\r\n * @param errorHandler\r\n * @param errorToNotify\r\n */\r\nconst safelyNotifyError = (\r\n  errorHandler: ListenerErrorHandler,\r\n  errorToNotify: unknown,\r\n  errorInfo: ListenerErrorInfo\r\n): void => {\r\n  try {\r\n    errorHandler(errorToNotify, errorInfo)\r\n  } catch (errorHandlerError) {\r\n    // We cannot let an error raised here block the listener queue.\r\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\r\n    setTimeout(() => {\r\n      throw errorHandlerError\r\n    }, 0)\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const addListener = createAction(\r\n  `${alm}/add`\r\n) as TypedAddListener<unknown>\r\n\r\n/**\r\n * @public\r\n */\r\nexport const clearAllListeners = createAction(`${alm}/removeAll`)\r\n\r\n/**\r\n * @public\r\n */\r\nexport const removeListener = createAction(\r\n  `${alm}/remove`\r\n) as TypedRemoveListener<unknown>\r\n\r\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\r\n  console.error(`${alm}/error`, ...args)\r\n}\r\n\r\nconst cancelActiveListeners = (\r\n  entry: ListenerEntry<unknown, Dispatch<AnyAction>>\r\n) => {\r\n  entry.pending.forEach((controller) => {\r\n    abortControllerWithReason(controller, listenerCancelled)\r\n  })\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function createListenerMiddleware<\r\n  S = unknown,\r\n  D extends Dispatch<AnyAction> = ThunkDispatch<S, unknown, AnyAction>,\r\n  ExtraArgument = unknown\r\n>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) {\r\n  const listenerMap = new Map<string, ListenerEntry>()\r\n  const { extra, onError = defaultErrorHandler } = middlewareOptions\r\n\r\n  assertFunction(onError, 'onError')\r\n\r\n  const insertEntry = (entry: ListenerEntry) => {\r\n    entry.unsubscribe = () => listenerMap.delete(entry!.id)\r\n\r\n    listenerMap.set(entry.id, entry)\r\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\r\n      entry.unsubscribe()\r\n      if (cancelOptions?.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n  }\r\n\r\n  const findListenerEntry = (\r\n    comparator: (entry: ListenerEntry) => boolean\r\n  ): ListenerEntry | undefined => {\r\n    for (const entry of Array.from(listenerMap.values())) {\r\n      if (comparator(entry)) {\r\n        return entry\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  const startListening = (options: FallbackAddListenerOptions) => {\r\n    let entry = findListenerEntry(\r\n      (existingEntry) => existingEntry.effect === options.effect\r\n    )\r\n\r\n    if (!entry) {\r\n      entry = createListenerEntry(options as any)\r\n    }\r\n\r\n    return insertEntry(entry)\r\n  }\r\n\r\n  const stopListening = (\r\n    options: FallbackAddListenerOptions & UnsubscribeListenerOptions\r\n  ): boolean => {\r\n    const { type, effect, predicate } = getListenerEntryPropsFrom(options)\r\n\r\n    const entry = findListenerEntry((entry) => {\r\n      const matchPredicateOrType =\r\n        typeof type === 'string'\r\n          ? entry.type === type\r\n          : entry.predicate === predicate\r\n\r\n      return matchPredicateOrType && entry.effect === effect\r\n    })\r\n\r\n    if (entry) {\r\n      entry.unsubscribe()\r\n      if (options.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n\r\n    return !!entry\r\n  }\r\n\r\n  const notifyListener = async (\r\n    entry: ListenerEntry<unknown, Dispatch<AnyAction>>,\r\n    action: AnyAction,\r\n    api: MiddlewareAPI,\r\n    getOriginalState: () => S\r\n  ) => {\r\n    const internalTaskController = new AbortController()\r\n    const take = createTakePattern(\r\n      startListening,\r\n      internalTaskController.signal\r\n    )\r\n\r\n    try {\r\n      entry.pending.add(internalTaskController)\r\n      await Promise.resolve(\r\n        entry.effect(\r\n          action,\r\n          // Use assign() rather than ... to avoid extra helper functions added to bundle\r\n          assign({}, api, {\r\n            getOriginalState,\r\n            condition: (\r\n              predicate: AnyListenerPredicate<any>,\r\n              timeout?: number\r\n            ) => take(predicate, timeout).then(Boolean),\r\n            take,\r\n            delay: createDelay(internalTaskController.signal),\r\n            pause: createPause<any>(internalTaskController.signal),\r\n            extra,\r\n            signal: internalTaskController.signal,\r\n            fork: createFork(internalTaskController.signal),\r\n            unsubscribe: entry.unsubscribe,\r\n            subscribe: () => {\r\n              listenerMap.set(entry.id, entry)\r\n            },\r\n            cancelActiveListeners: () => {\r\n              entry.pending.forEach((controller, _, set) => {\r\n                if (controller !== internalTaskController) {\r\n                  abortControllerWithReason(controller, listenerCancelled)\r\n                  set.delete(controller)\r\n                }\r\n              })\r\n            },\r\n          })\r\n        )\r\n      )\r\n    } catch (listenerError) {\r\n      if (!(listenerError instanceof TaskAbortError)) {\r\n        safelyNotifyError(onError, listenerError, {\r\n          raisedBy: 'effect',\r\n        })\r\n      }\r\n    } finally {\r\n      abortControllerWithReason(internalTaskController, listenerCompleted) // Notify that the task has completed\r\n      entry.pending.delete(internalTaskController)\r\n    }\r\n  }\r\n\r\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap)\r\n\r\n  const middleware: ListenerMiddleware<S, D, ExtraArgument> =\r\n    (api) => (next) => (action) => {\r\n      if (addListener.match(action)) {\r\n        return startListening(action.payload)\r\n      }\r\n\r\n      if (clearAllListeners.match(action)) {\r\n        clearListenerMiddleware()\r\n        return\r\n      }\r\n\r\n      if (removeListener.match(action)) {\r\n        return stopListening(action.payload)\r\n      }\r\n\r\n      // Need to get this state _before_ the reducer processes the action\r\n      let originalState: S | typeof INTERNAL_NIL_TOKEN = api.getState()\r\n\r\n      // `getOriginalState` can only be called synchronously.\r\n      // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\r\n      const getOriginalState = (): S => {\r\n        if (originalState === INTERNAL_NIL_TOKEN) {\r\n          throw new Error(\r\n            `${alm}: getOriginalState can only be called synchronously`\r\n          )\r\n        }\r\n\r\n        return originalState as S\r\n      }\r\n\r\n      let result: unknown\r\n\r\n      try {\r\n        // Actually forward the action to the reducer before we handle listeners\r\n        result = next(action)\r\n\r\n        if (listenerMap.size > 0) {\r\n          let currentState = api.getState()\r\n          // Work around ESBuild+TS transpilation issue\r\n          const listenerEntries = Array.from(listenerMap.values())\r\n          for (let entry of listenerEntries) {\r\n            let runListener = false\r\n\r\n            try {\r\n              runListener = entry.predicate(action, currentState, originalState)\r\n            } catch (predicateError) {\r\n              runListener = false\r\n\r\n              safelyNotifyError(onError, predicateError, {\r\n                raisedBy: 'predicate',\r\n              })\r\n            }\r\n\r\n            if (!runListener) {\r\n              continue\r\n            }\r\n\r\n            notifyListener(entry, action, api, getOriginalState)\r\n          }\r\n        }\r\n      } finally {\r\n        // Remove `originalState` store from this scope.\r\n        originalState = INTERNAL_NIL_TOKEN\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n  return {\r\n    middleware,\r\n    startListening,\r\n    stopListening,\r\n    clearListeners: clearListenerMiddleware,\r\n  } as ListenerMiddlewareInstance<S, D, ExtraArgument>\r\n}\r\n","import type { AbortSignalWithReason } from './types'\r\n\r\nexport const assertFunction: (\r\n  func: unknown,\r\n  expected: string\r\n) => asserts func is (...args: unknown[]) => unknown = (\r\n  func: unknown,\r\n  expected: string\r\n) => {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(`${expected} is not a function`)\r\n  }\r\n}\r\n\r\nexport const noop = () => {}\r\n\r\nexport const catchRejection = <T>(\r\n  promise: Promise<T>,\r\n  onError = noop\r\n): Promise<T> => {\r\n  promise.catch(onError)\r\n\r\n  return promise\r\n}\r\n\r\nexport const addAbortSignalListener = (\r\n  abortSignal: AbortSignal,\r\n  callback: (evt: Event) => void\r\n) => {\r\n  abortSignal.addEventListener('abort', callback, { once: true })\r\n}\r\n\r\n/**\r\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\r\n * if it is not supported.\r\n *\r\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\r\n * @param abortController\r\n * @param reason\r\n * @returns\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\r\n */\r\nexport const abortControllerWithReason = <T>(\r\n  abortController: AbortController,\r\n  reason: T\r\n): void => {\r\n  type Consumer<T> = (val: T) => void\r\n\r\n  const signal = abortController.signal as AbortSignalWithReason<T>\r\n\r\n  if (signal.aborted) {\r\n    return\r\n  }\r\n\r\n  // Patch `reason` if necessary.\r\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\r\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\r\n  // event are are notified immediately.\r\n  if (!('reason' in signal)) {\r\n    Object.defineProperty(signal, 'reason', {\r\n      enumerable: true,\r\n      value: reason,\r\n      configurable: true,\r\n      writable: true,\r\n    })\r\n  }\r\n\r\n  ;(abortController.abort as Consumer<typeof reason>)(reason)\r\n}\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { enableES5 } from 'immer'\r\nexport * from 'redux'\r\nexport {\r\n  default as createNextState,\r\n  current,\r\n  freeze,\r\n  original,\r\n  isDraft,\r\n} from 'immer'\r\nexport type { Draft } from 'immer'\r\nexport { createSelector } from 'reselect'\r\nexport type {\r\n  Selector,\r\n  OutputParametricSelector,\r\n  OutputSelector,\r\n  ParametricSelector,\r\n} from 'reselect'\r\nexport { createDraftSafeSelector } from './createDraftSafeSelector'\r\nexport type { ThunkAction, ThunkDispatch } from 'redux-thunk'\r\n\r\n// We deliberately enable Immer's ES5 support, on the grounds that\r\n// we assume RTK will be used with React Native and other Proxy-less\r\n// environments.  In addition, that's how Immer 4 behaved, and since\r\n// we want to ship this in an RTK minor, we should keep the same behavior.\r\nenableES5()\r\n\r\nexport {\r\n  // js\r\n  configureStore,\r\n} from './configureStore'\r\nexport type {\r\n  // types\r\n  ConfigureEnhancersCallback,\r\n  ConfigureStoreOptions,\r\n  EnhancedStore,\r\n} from './configureStore'\r\nexport type { DevToolsEnhancerOptions } from './devtoolsExtension'\r\nexport {\r\n  // js\r\n  createAction,\r\n  getType,\r\n} from './createAction'\r\nexport type {\r\n  // types\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  ActionCreatorWithNonInferrablePayload,\r\n  ActionCreatorWithOptionalPayload,\r\n  ActionCreatorWithPayload,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPreparedPayload,\r\n  PrepareAction,\r\n} from './createAction'\r\nexport {\r\n  // js\r\n  createReducer,\r\n} from './createReducer'\r\nexport type {\r\n  // types\r\n  Actions,\r\n  CaseReducer,\r\n  CaseReducers,\r\n} from './createReducer'\r\nexport {\r\n  // js\r\n  createSlice,\r\n} from './createSlice'\r\n\r\nexport type {\r\n  // types\r\n  CreateSliceOptions,\r\n  Slice,\r\n  CaseReducerActions,\r\n  SliceCaseReducers,\r\n  ValidateSliceCaseReducers,\r\n  CaseReducerWithPrepare,\r\n  SliceActionCreator,\r\n} from './createSlice'\r\nexport {\r\n  // js\r\n  createImmutableStateInvariantMiddleware,\r\n  isImmutableDefault,\r\n} from './immutableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  ImmutableStateInvariantMiddlewareOptions,\r\n} from './immutableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createSerializableStateInvariantMiddleware,\r\n  findNonSerializableValue,\r\n  isPlain,\r\n} from './serializableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  SerializableStateInvariantMiddlewareOptions,\r\n} from './serializableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  getDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nexport type {\r\n  // types\r\n  ActionReducerMapBuilder,\r\n} from './mapBuilders'\r\nexport { MiddlewareArray } from './utils'\r\n\r\nexport { createEntityAdapter } from './entities/create_adapter'\r\nexport type {\r\n  Dictionary,\r\n  EntityState,\r\n  EntityAdapter,\r\n  EntitySelectors,\r\n  EntityStateAdapter,\r\n  EntityId,\r\n  Update,\r\n  IdSelector,\r\n  Comparer,\r\n} from './entities/models'\r\n\r\nexport {\r\n  createAsyncThunk,\r\n  unwrapResult,\r\n  miniSerializeError,\r\n} from './createAsyncThunk'\r\nexport type {\r\n  AsyncThunk,\r\n  AsyncThunkOptions,\r\n  AsyncThunkAction,\r\n  AsyncThunkPayloadCreatorReturnValue,\r\n  AsyncThunkPayloadCreator,\r\n  SerializedError,\r\n} from './createAsyncThunk'\r\n\r\nexport {\r\n  // js\r\n  isAllOf,\r\n  isAnyOf,\r\n  isPending,\r\n  isRejected,\r\n  isFulfilled,\r\n  isAsyncThunkAction,\r\n  isRejectedWithValue,\r\n} from './matchers'\r\nexport type {\r\n  // types\r\n  ActionMatchingAllOf,\r\n  ActionMatchingAnyOf,\r\n} from './matchers'\r\n\r\nexport { nanoid } from './nanoid'\r\n\r\nexport { default as isPlainObject } from './isPlainObject'\r\n\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './listenerMiddleware/index'\r\nexport type { AnyListenerPredicate } from './listenerMiddleware/types'\r\n\r\nexport {\r\n  createListenerMiddleware,\r\n  addListener,\r\n  removeListener,\r\n  clearAllListeners,\r\n  TaskAbortError,\r\n} from './listenerMiddleware/index'\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import type { AnyAction, Reducer } from 'redux'\r\nimport { createNextState } from '.'\r\nimport type {\r\n  ActionCreatorWithoutPayload,\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  PrepareAction,\r\n  _ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ReducerWithInitialState,\r\n} from './createReducer'\r\nimport { createReducer, NotFunction } from './createReducer'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\n/**\r\n * An action creator attached to a slice.\r\n *\r\n * @deprecated please use PayloadActionCreator directly\r\n *\r\n * @public\r\n */\r\nexport type SliceActionCreator<P> = PayloadActionCreator<P>\r\n\r\n/**\r\n * The return value of `createSlice`\r\n *\r\n * @public\r\n */\r\nexport interface Slice<\r\n  State = any,\r\n  CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice name.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The slice's reducer.\r\n   */\r\n  reducer: Reducer<State>\r\n\r\n  /**\r\n   * Action creators for the types of actions that are handled by the slice\r\n   * reducer.\r\n   */\r\n  actions: CaseReducerActions<CaseReducers>\r\n\r\n  /**\r\n   * The individual case reducer functions that were passed in the `reducers` parameter.\r\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\r\n   */\r\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>\r\n\r\n  /**\r\n   * Provides access to the initial state value given to the slice.\r\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\r\n   */\r\n  getInitialState: () => State\r\n}\r\n\r\n/**\r\n * Options for `createSlice()`.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSliceOptions<\r\n  State = any,\r\n  CR extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice's name. Used to namespace the generated action types.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n   */\r\n  initialState: State | (() => State)\r\n\r\n  /**\r\n   * A mapping from action types to action-type-specific *case reducer*\r\n   * functions. For every action type, a matching action creator will be\r\n   * generated using `createAction()`.\r\n   */\r\n  reducers: ValidateSliceCaseReducers<State, CR>\r\n\r\n  /**\r\n   * A callback that receives a *builder* object to define\r\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n   * \r\n   * Alternatively, a mapping from action types to action-type-specific *case reducer*\r\n   * functions. These reducers should have existing action types used\r\n   * as the keys, and action creators will _not_ be generated.\r\n   * \r\n   * @example\r\n```ts\r\nimport { createAction, createSlice, Action, AnyAction } from '@reduxjs/toolkit'\r\nconst incrementBy = createAction<number>('incrementBy')\r\nconst decrement = createAction('decrement')\r\n\r\ninterface RejectedAction extends Action {\r\n  error: Error\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('rejected')\r\n}\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: 0,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(incrementBy, (state, action) => {\r\n        // action is inferred correctly here if using TS\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {})\r\n      // You can match a range of action types\r\n      .addMatcher(\r\n        isRejectedAction,\r\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\r\n        (state, action) => {}\r\n      )\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {})\r\n    }\r\n})\r\n```\r\n   */\r\n  extraReducers?:\r\n    | CaseReducers<NoInfer<State>, any>\r\n    | ((builder: ActionReducerMapBuilder<NoInfer<State>>) => void)\r\n}\r\n\r\n/**\r\n * A CaseReducer with a `prepare` method.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\r\n  reducer: CaseReducer<State, Action>\r\n  prepare: PrepareAction<Action['payload']>\r\n}\r\n\r\n/**\r\n * The type describing a slice's `reducers` option.\r\n *\r\n * @public\r\n */\r\nexport type SliceCaseReducers<State> = {\r\n  [K: string]:\r\n    | CaseReducer<State, PayloadAction<any>>\r\n    | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>\r\n}\r\n\r\n/**\r\n * Derives the slice's `actions` property from the `reducers` options\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends { prepare: any }\r\n    ? ActionCreatorForCaseReducerWithPrepare<CaseReducers[Type]>\r\n    : ActionCreatorForCaseReducer<CaseReducers[Type]>\r\n}\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducerWithPrepare<CR extends { prepare: any }> =\r\n  _ActionCreatorWithPreparedPayload<CR['prepare'], string>\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducer<CR> = CR extends (\r\n  state: any,\r\n  action: infer Action\r\n) => any\r\n  ? Action extends { payload: infer P }\r\n    ? PayloadActionCreator<P>\r\n    : ActionCreatorWithoutPayload\r\n  : ActionCreatorWithoutPayload\r\n\r\n/**\r\n * Extracts the CaseReducers out of a `reducers` object, even if they are\r\n * tested into a `CaseReducerWithPrepare`.\r\n *\r\n * @internal\r\n */\r\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends {\r\n    reducer: infer Reducer\r\n  }\r\n    ? Reducer\r\n    : CaseReducers[Type]\r\n}\r\n\r\n/**\r\n * Used on a SliceCaseReducers object.\r\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\r\n * the `reducer` and the `prepare` function use the same type of `payload`.\r\n *\r\n * Might do additional such checks in the future.\r\n *\r\n * This type is only ever useful if you want to write your own wrapper around\r\n * `createSlice`. Please don't use it otherwise!\r\n *\r\n * @public\r\n */\r\nexport type ValidateSliceCaseReducers<\r\n  S,\r\n  ACR extends SliceCaseReducers<S>\r\n> = ACR & {\r\n  [T in keyof ACR]: ACR[T] extends {\r\n    reducer(s: S, action?: infer A): any\r\n  }\r\n    ? {\r\n        prepare(...a: never[]): Omit<A, 'type'>\r\n      }\r\n    : {}\r\n}\r\n\r\nfunction getType(slice: string, actionKey: string): string {\r\n  return `${slice}/${actionKey}`\r\n}\r\n\r\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\r\nexport function createSlice<\r\n  State,\r\n  CaseReducers extends SliceCaseReducers<State>,\r\n  Name extends string = string\r\n>(\r\n  options: CreateSliceOptions<State, CaseReducers, Name>\r\n): Slice<State, CaseReducers, Name> {\r\n  const { name } = options\r\n  if (!name) {\r\n    throw new Error('`name` is a required option for createSlice')\r\n  }\r\n\r\n  if (\r\n    typeof process !== 'undefined' &&\r\n    process.env.NODE_ENV === 'development'\r\n  ) {\r\n    if(options.initialState === undefined) {\r\n      console.error('You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`')\r\n    }\r\n  }\r\n\r\n  const initialState =\r\n    typeof options.initialState == 'function'\r\n      ? options.initialState\r\n      : freezeDraftable(options.initialState)\r\n\r\n  const reducers = options.reducers || {}\r\n\r\n  const reducerNames = Object.keys(reducers)\r\n\r\n  const sliceCaseReducersByName: Record<string, CaseReducer> = {}\r\n  const sliceCaseReducersByType: Record<string, CaseReducer> = {}\r\n  const actionCreators: Record<string, Function> = {}\r\n\r\n  reducerNames.forEach((reducerName) => {\r\n    const maybeReducerWithPrepare = reducers[reducerName]\r\n    const type = getType(name, reducerName)\r\n\r\n    let caseReducer: CaseReducer<State, any>\r\n    let prepareCallback: PrepareAction<any> | undefined\r\n\r\n    if ('reducer' in maybeReducerWithPrepare) {\r\n      caseReducer = maybeReducerWithPrepare.reducer\r\n      prepareCallback = maybeReducerWithPrepare.prepare\r\n    } else {\r\n      caseReducer = maybeReducerWithPrepare\r\n    }\r\n\r\n    sliceCaseReducersByName[reducerName] = caseReducer\r\n    sliceCaseReducersByType[type] = caseReducer\r\n    actionCreators[reducerName] = prepareCallback\r\n      ? createAction(type, prepareCallback)\r\n      : createAction(type)\r\n  })\r\n\r\n  function buildReducer() {\r\n    const [\r\n      extraReducers = {},\r\n      actionMatchers = [],\r\n      defaultCaseReducer = undefined,\r\n    ] =\r\n      typeof options.extraReducers === 'function'\r\n        ? executeReducerBuilderCallback(options.extraReducers)\r\n        : [options.extraReducers]\r\n\r\n    const finalCaseReducers = { ...extraReducers, ...sliceCaseReducersByType }\r\n    return createReducer(\r\n      initialState,\r\n      finalCaseReducers as any,\r\n      actionMatchers,\r\n      defaultCaseReducer\r\n    )\r\n  }\r\n\r\n  let _reducer: ReducerWithInitialState<State>\r\n\r\n  return {\r\n    name,\r\n    reducer(state, action) {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer(state, action)\r\n    },\r\n    actions: actionCreators as any,\r\n    caseReducers: sliceCaseReducersByName as any,\r\n    getInitialState() {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer.getInitialState()\r\n    },\r\n  }\r\n}\r\n","import type { Draft } from 'immer'\r\nimport createNextState, { isDraft, isDraftable } from 'immer'\r\nimport type { AnyAction, Action, Reducer } from 'redux'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type Actions<T extends keyof any = string> = Record<T, Action>\r\n\r\n/**\r\n * @deprecated use `TypeGuard` instead\r\n */\r\nexport interface ActionMatcher<A extends AnyAction> {\r\n  (action: AnyAction): action is A\r\n}\r\n\r\nexport type ActionMatcherDescription<S, A extends AnyAction> = {\r\n  matcher: ActionMatcher<A>\r\n  reducer: CaseReducer<S, NoInfer<A>>\r\n}\r\n\r\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\nexport type ActionMatcherDescriptionCollection<S> = Array<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\n/**\r\n * A *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducer<S = any, A extends Action = AnyAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => S | void | Draft<S>\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type CaseReducers<S, AS extends Actions> = {\r\n  [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void\r\n}\r\n\r\nexport type NotFunction<T> = T extends Function ? never : T\r\n\r\nfunction isStateFunction<S>(x: unknown): x is () => S {\r\n  return typeof x === 'function'\r\n}\r\n\r\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\r\n  getInitialState: () => S\r\n}\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This overload accepts a callback function that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AnyAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: AnyAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\nconst reducer = createReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): ReducerWithInitialState<S>\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n * \r\n * @overloadSummary\r\n * This overload accepts an object where the keys are string action types, and the values\r\n * are case reducer functions to handle those action types.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param actionsMap - An object mapping from action types to _case reducers_, each of which handles one specific action type.\r\n * @param actionMatchers - An array of matcher definitions in the form `{matcher, reducer}`.\r\n *   All matching reducers will be executed in order, independently if a case reducer matched or not.\r\n * @param defaultCaseReducer - A \"default case\" reducer that is executed if no case reducer and no matcher\r\n *   reducer was executed for this action.\r\n *\r\n * @example\r\n```js\r\nconst counterReducer = createReducer(0, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n\r\n// Alternately, use a \"lazy initializer\" to provide the initial state\r\n// (works with either form of createReducer)\r\nconst initialState = () => 0\r\nconst counterReducer = createReducer(initialState, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n```\r\n \r\n * Action creators that were generated using [`createAction`](./createAction) may be used directly as the keys here, using computed property syntax:\r\n\r\n```js\r\nconst increment = createAction('increment')\r\nconst decrement = createAction('decrement')\r\n\r\nconst counterReducer = createReducer(0, {\r\n  [increment]: (state, action) => state + action.payload,\r\n  [decrement.type]: (state, action) => state - action.payload\r\n})\r\n```\r\n * @public\r\n */\r\nexport function createReducer<\r\n  S extends NotFunction<any>,\r\n  CR extends CaseReducers<S, any> = CaseReducers<S, any>\r\n>(\r\n  initialState: S | (() => S),\r\n  actionsMap: CR,\r\n  actionMatchers?: ActionMatcherDescriptionCollection<S>,\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S>\r\n\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  mapOrBuilderCallback:\r\n    | CaseReducers<S, any>\r\n    | ((builder: ActionReducerMapBuilder<S>) => void),\r\n  actionMatchers: ReadonlyActionMatcherDescriptionCollection<S> = [],\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S> {\r\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] =\r\n    typeof mapOrBuilderCallback === 'function'\r\n      ? executeReducerBuilderCallback(mapOrBuilderCallback)\r\n      : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer]\r\n\r\n  // Ensure the initial state gets frozen either way (if draftable)\r\n  let getInitialState: () => S\r\n  if (isStateFunction(initialState)) {\r\n    getInitialState = () => freezeDraftable(initialState())\r\n  } else {\r\n    const frozenInitialState = freezeDraftable(initialState)\r\n    getInitialState = () => frozenInitialState\r\n  }\r\n\r\n  function reducer(state = getInitialState(), action: any): S {\r\n    let caseReducers = [\r\n      actionsMap[action.type],\r\n      ...finalActionMatchers\r\n        .filter(({ matcher }) => matcher(action))\r\n        .map(({ reducer }) => reducer),\r\n    ]\r\n    if (caseReducers.filter((cr) => !!cr).length === 0) {\r\n      caseReducers = [finalDefaultCaseReducer]\r\n    }\r\n\r\n    return caseReducers.reduce((previousState, caseReducer): S => {\r\n      if (caseReducer) {\r\n        if (isDraft(previousState)) {\r\n          // If it's already a draft, we must already be inside a `createNextState` call,\r\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\r\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\r\n          const draft = previousState as Draft<S> // We can assume this is already a draft\r\n          const result = caseReducer(draft, action)\r\n\r\n          if (result === undefined) {\r\n            return previousState\r\n          }\r\n\r\n          return result as S\r\n        } else if (!isDraftable(previousState)) {\r\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\r\n          // return the caseReducer func and not wrap it with produce.\r\n          const result = caseReducer(previousState as any, action)\r\n\r\n          if (result === undefined) {\r\n            if (previousState === null) {\r\n              return previousState\r\n            }\r\n            throw Error(\r\n              'A case reducer on a non-draftable value must not return undefined'\r\n            )\r\n          }\r\n\r\n          return result as S\r\n        } else {\r\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n          // these two types.\r\n          return createNextState(previousState, (draft: Draft<S>) => {\r\n            return caseReducer(draft, action)\r\n          })\r\n        }\r\n      }\r\n\r\n      return previousState\r\n    }, state)\r\n  }\r\n\r\n  reducer.getInitialState = getInitialState\r\n\r\n  return reducer as ReducerWithInitialState<S>\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import type {\r\n  Reducer,\r\n  ReducersMapObject,\r\n  Middleware,\r\n  Action,\r\n  AnyAction,\r\n  StoreEnhancer,\r\n  Store,\r\n  Dispatch,\r\n  PreloadedState,\r\n  CombinedState,\r\n} from 'redux'\r\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\r\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension'\r\nimport { composeWithDevTools } from './devtoolsExtension'\r\n\r\nimport isPlainObject from './isPlainObject'\r\nimport type {\r\n  ThunkMiddlewareFor,\r\n  CurriedGetDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nimport { curryGetDefaultMiddleware } from './getDefaultMiddleware'\r\nimport type { NoInfer, ExtractDispatchExtensions } from './tsHelpers'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\n/**\r\n * Callback function type, to be used in `ConfigureStoreOptions.enhancers`\r\n *\r\n * @public\r\n */\r\nexport type ConfigureEnhancersCallback = (\r\n  defaultEnhancers: readonly StoreEnhancer[]\r\n) => StoreEnhancer[]\r\n\r\n/**\r\n * Options for `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport interface ConfigureStoreOptions<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> {\r\n  /**\r\n   * A single reducer function that will be used as the root reducer, or an\r\n   * object of slice reducers that will be passed to `combineReducers()`.\r\n   */\r\n  reducer: Reducer<S, A> | ReducersMapObject<S, A>\r\n\r\n  /**\r\n   * An array of Redux middleware to install. If not supplied, defaults to\r\n   * the set of middleware returned by `getDefaultMiddleware()`.\r\n   *\r\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\r\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\r\n   */\r\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\r\n\r\n  /**\r\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\r\n   *\r\n   * Additional configuration can be done by passing Redux DevTools options\r\n   */\r\n  devTools?: boolean | DevToolsOptions\r\n\r\n  /**\r\n   * The initial state, same as Redux's createStore.\r\n   * You may optionally specify it to hydrate the state\r\n   * from the server in universal apps, or to restore a previously serialized\r\n   * user session. If you use `combineReducers()` to produce the root reducer\r\n   * function (either directly or indirectly by passing an object as `reducer`),\r\n   * this must be an object with the same shape as the reducer map keys.\r\n   */\r\n  /* \r\n  Not 100% correct but the best approximation we can get:\r\n  - if S is a `CombinedState` applying a second `CombinedState` on it does not change anything.\r\n  - if it is not, there could be two cases:\r\n    - `ReducersMapObject<S, A>` is being passed in. In this case, we will call `combineReducers` on it and `CombinedState<S>` is correct\r\n    - `Reducer<S, A>` is being passed in. In this case, actually `CombinedState<S>` is wrong and `S` would be correct.\r\n    As we cannot distinguish between those two cases without adding another generic paramter, \r\n    we just make the pragmatic assumption that the latter almost never happens.\r\n  */\r\n  preloadedState?: PreloadedState<CombinedState<NoInfer<S>>>\r\n\r\n  /**\r\n   * The store enhancers to apply. See Redux's `createStore()`.\r\n   * All enhancers will be included before the DevTools Extension enhancer.\r\n   * If you need to customize the order of enhancers, supply a callback\r\n   * function that will receive the original array (ie, `[applyMiddleware]`),\r\n   * and should return a new array (such as `[applyMiddleware, offline]`).\r\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\r\n   */\r\n  enhancers?: StoreEnhancer[] | ConfigureEnhancersCallback\r\n}\r\n\r\ntype Middlewares<S> = ReadonlyArray<Middleware<{}, S>>\r\n\r\n/**\r\n * A Redux store returned by `configureStore()`. Supports dispatching\r\n * side-effectful _thunks_ in addition to plain actions.\r\n *\r\n * @public\r\n */\r\nexport interface EnhancedStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> extends Store<S, A> {\r\n  /**\r\n   * The `dispatch` method of your store, enhanced by all its middlewares.\r\n   *\r\n   * @inheritdoc\r\n   */\r\n  dispatch: ExtractDispatchExtensions<M> & Dispatch<A>\r\n}\r\n\r\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\r\nexport function configureStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = [ThunkMiddlewareFor<S>]\r\n>(options: ConfigureStoreOptions<S, A, M>): EnhancedStore<S, A, M> {\r\n  const curriedGetDefaultMiddleware = curryGetDefaultMiddleware<S>()\r\n\r\n  const {\r\n    reducer = undefined,\r\n    middleware = curriedGetDefaultMiddleware(),\r\n    devTools = true,\r\n    preloadedState = undefined,\r\n    enhancers = undefined,\r\n  } = options || {}\r\n\r\n  let rootReducer: Reducer<S, A>\r\n\r\n  if (typeof reducer === 'function') {\r\n    rootReducer = reducer\r\n  } else if (isPlainObject(reducer)) {\r\n    rootReducer = combineReducers(reducer) as unknown as Reducer<S, A>\r\n  } else {\r\n    throw new Error(\r\n      '\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'\r\n    )\r\n  }\r\n\r\n  let finalMiddleware = middleware\r\n  if (typeof finalMiddleware === 'function') {\r\n    finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware)\r\n\r\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n      throw new Error(\r\n        'when using a middleware builder function, an array of middleware must be returned'\r\n      )\r\n    }\r\n  }\r\n  if (\r\n    !IS_PRODUCTION &&\r\n    finalMiddleware.some((item: any) => typeof item !== 'function')\r\n  ) {\r\n    throw new Error(\r\n      'each middleware provided to configureStore must be a function'\r\n    )\r\n  }\r\n\r\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware)\r\n\r\n  let finalCompose = compose\r\n\r\n  if (devTools) {\r\n    finalCompose = composeWithDevTools({\r\n      // Enable capture of stack traces for dispatched Redux actions\r\n      trace: !IS_PRODUCTION,\r\n      ...(typeof devTools === 'object' && devTools),\r\n    })\r\n  }\r\n\r\n  let storeEnhancers: StoreEnhancer[] = [middlewareEnhancer]\r\n\r\n  if (Array.isArray(enhancers)) {\r\n    storeEnhancers = [middlewareEnhancer, ...enhancers]\r\n  } else if (typeof enhancers === 'function') {\r\n    storeEnhancers = enhancers(storeEnhancers)\r\n  }\r\n\r\n  const composedEnhancer = finalCompose(...storeEnhancers) as any\r\n\r\n  return createStore(rootReducer, preloadedState, composedEnhancer)\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"Counter_row__kKHr3\",\"value\":\"Counter_value__N0Uo3\",\"button\":\"Counter_button__PhvJ-\",\"textbox\":\"Counter_textbox__c0ery\",\"asyncButton\":\"Counter_asyncButton__o37+U Counter_button__PhvJ-\"};","import React, { useEffect } from 'react';\nimport StartAudioContext from 'startaudiocontext';\n\nimport Tone from '../lib/tone';\n\ntype SongContextProps = {\n  isPlaying: boolean;\n};\n\nexport const SongContext = React.createContext<SongContextProps>({\n  isPlaying: false,\n});\n\nexport type SongProps = {\n  isPlaying?: boolean;\n  bpm?: number;\n  swing?: number;\n  subdivision?: string;\n  swingSubdivision?: string;\n  volume?: number;\n  isMuted?: boolean;\n  children?: React.ReactNode;\n};\n\nconst Song: React.FC<SongProps> = ({\n  isPlaying = false,\n  bpm = 90,\n  // subdivision = '4n',\n  swing = 0,\n  swingSubdivision = '8n',\n  volume = 0,\n  isMuted = false,\n  children,\n}) => {\n  useEffect(() => {\n    document.body.addEventListener(\n      'click',\n      () => {\n        // iOS Web Audio API requires this library.\n        StartAudioContext(Tone.context);\n      },\n      {\n        once: true,\n      },\n    );\n  }, []);\n\n  useEffect(() => {\n    Tone.Transport.bpm.value = bpm;\n    Tone.Transport.swing = swing;\n    Tone.Transport.swingSubdivision = swingSubdivision;\n  }, [bpm, swing, swingSubdivision]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      // Hack to get Tone to NOT use same settings from another instance\n      Tone.Transport.bpm.value = bpm;\n      Tone.Transport.swing = swing;\n      Tone.Transport.swingSubdivision = swingSubdivision;\n\n      Tone.Transport.start();\n    } else {\n      Tone.Transport.stop();\n    }\n    /* eslint-disable-next-line */\n  }, [isPlaying]);\n\n  useEffect(() => {\n    Tone.Master.volume.value = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    Tone.Master.mute = isMuted;\n  }, [isMuted]);\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return (\n    <SongContext.Provider\n      value={{\n        isPlaying,\n      }}\n    >\n      {children}\n    </SongContext.Provider>\n  );\n};\n\nexport default Song;\n","import { StepNoteType, StepType } from 'components/Track';\nimport { MidiNote } from '../types/midi-notes';\n\nexport type SequencerStep = {\n  notes: StepNoteType[];\n  index: number;\n};\n\nexport default function buildSequencerStep(step: StepType, i): SequencerStep {\n  if (typeof step === 'string') {\n    return {\n      notes: [\n        {\n          name: step as MidiNote,\n        },\n      ],\n      index: i,\n    };\n  } else if (step && (step as StepNoteType).name) {\n    return {\n      notes: [\n        {\n          name: (step as StepNoteType).name,\n          duration: (step as StepNoteType).duration,\n          velocity: (step as StepNoteType).velocity,\n        },\n      ],\n      index: i,\n    };\n  } else if (Array.isArray(step)) {\n    return {\n      notes: (step as Array<StepNoteType | MidiNote>).map((s) => {\n        if (typeof s === 'string') {\n          return {\n            name: s,\n          };\n        }\n\n        return s;\n      }),\n      index: i,\n    };\n  }\n\n  return {\n    notes: [],\n    index: i,\n  };\n}\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious<Value>(value): Value {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport equal from 'fast-deep-equal';\n\nimport { SongContext } from './Song';\nimport Tone from '../lib/tone';\nimport buildSequencerStep, { SequencerStep } from '../lib/buildSequencerStep';\nimport { usePrevious } from '../lib/hooks';\nimport { MidiNote } from '../types/midi-notes';\n\nexport interface StepNoteType {\n  name: MidiNote;\n  duration?: number | string;\n  velocity?: number;\n}\n\nexport type StepType =\n  | StepNoteType\n  | StepNoteType[]\n  | MidiNote\n  | MidiNote[]\n  | null;\n\nexport interface TrackProps {\n  steps?: StepType[];\n  volume?: number;\n  pan?: number;\n  mute?: boolean;\n  solo?: boolean;\n  subdivision?: string;\n  effects?: React.ReactNode[];\n  children: React.ReactNode;\n  onStepPlay?: (stepNotes: StepNoteType[], index: number) => void;\n}\n\nexport interface TrackConsumerProps extends TrackProps {\n  isPlaying: boolean;\n}\n\nexport const TrackContext = React.createContext({\n  volume: 0,\n  pan: 0,\n  mute: false,\n  solo: false,\n  effectsChain: null,\n  onInstrumentsUpdate: null,\n  onAddToEffectsChain: null,\n  onRemoveFromEffectsChain: null,\n});\n\nconst TrackConsumer: React.FC<TrackConsumerProps> = ({\n  // <Song /> props\n  isPlaying,\n  // <Track /> props\n  steps = [],\n  volume = 0,\n  pan = 0,\n  mute,\n  solo,\n  subdivision = '4n',\n  effects = [],\n  children,\n  onStepPlay,\n}) => {\n  const [effectsChain, setEffectsChain] = useState([]);\n  const [instruments, setInstruments] = useState([]);\n  const sequencer = useRef<{\n    start: Function;\n    stop: Function;\n    remove: Function;\n    add: Function;\n    dispose: Function;\n    removeAll: Function;\n  }>();\n  const instrumentsRef = useRef(instruments);\n\n  useEffect(() => {\n    instrumentsRef.current = instruments;\n  }, [instruments]);\n\n  /*\n  Tone.Sequence can't easily play chords. By default, arrays within steps are flattened out and subdivided. However an array of notes is our preferred way of representing chords. To get around this, buildSequencerStep() will transform notes and put them in a notes field as an array. We can then loop through and run triggerAttackRelease() to play the note/s.\n  */\n  const sequencerSteps = steps.map(buildSequencerStep);\n  const prevSequencerSteps: SequencerStep[] = usePrevious(sequencerSteps);\n\n  useEffect(() => {\n    // -------------------------------------------------------------------------\n    // STEPS\n    // -------------------------------------------------------------------------\n\n    // Start/Stop sequencer!\n    if (isPlaying) {\n      sequencer.current = new Tone.Sequence(\n        (_, step) => {\n          step.notes.forEach((note) => {\n            instrumentsRef.current.forEach((instrument) => {\n              instrument.triggerAttackRelease(\n                note.name,\n                note.duration || 0.5,\n                undefined,\n                note.velocity,\n              );\n            });\n          });\n\n          if (typeof onStepPlay === 'function') {\n            onStepPlay(step.notes, step.index);\n          }\n        },\n        sequencerSteps,\n        subdivision,\n      );\n\n      sequencer.current?.start(0);\n    } else {\n      if (sequencer.current) {\n        sequencer.current.stop();\n      }\n    }\n    /* eslint-disable-next-line */\n  }, [isPlaying]);\n\n  useEffect(() => {\n    if (sequencer.current) {\n      if (prevSequencerSteps?.length === sequencerSteps.length) {\n        // When steps length is the same, update steps in a more efficient way\n        sequencerSteps.forEach((step, i) => {\n          const isEqual = equal(\n            sequencerSteps[i].notes,\n            prevSequencerSteps && prevSequencerSteps[i]\n              ? prevSequencerSteps[i].notes\n              : [],\n          );\n\n          if (!isEqual) {\n            sequencer.current?.remove(i);\n            sequencer.current?.add(i, step);\n          }\n        });\n      } else {\n        // When new steps are less or more then prev, remove all and add new steps\n        sequencer.current.removeAll();\n        sequencerSteps.forEach((step, i) => {\n          sequencer.current.add(i, step);\n        });\n      }\n    }\n    /* eslint-disable-next-line */\n  }, [JSON.stringify(sequencerSteps)]);\n\n  useEffect(() => {\n    return function cleanup() {\n      if (sequencer.current) {\n        sequencer.current.dispose();\n      }\n    };\n  }, []);\n\n  const handleAddToEffectsChain = (effect) => {\n    // console.log('<Track />', 'onAddToEffectsChain');\n\n    setEffectsChain((prevEffectsChain) => {\n      return [effect, ...prevEffectsChain];\n    });\n  };\n\n  const handleRemoveFromEffectsChain = (effect) => {\n    // console.log('<Track />', 'onRemoveFromEffectsChain', effect);\n\n    setEffectsChain((prevEffectsChain) => {\n      return prevEffectsChain.filter((e) => e.id !== effect.id);\n    });\n  };\n\n  const handleInstrumentsUpdate = (newInstruments) => {\n    setInstruments(newInstruments);\n  };\n\n  return (\n    <TrackContext.Provider\n      value={{\n        effectsChain, // Used by Instrument\n        pan,\n        volume,\n        mute,\n        solo,\n        onInstrumentsUpdate: handleInstrumentsUpdate,\n        onAddToEffectsChain: handleAddToEffectsChain,\n        onRemoveFromEffectsChain: handleRemoveFromEffectsChain,\n      }}\n    >\n      {children}\n      {effects}\n    </TrackContext.Provider>\n  );\n};\n\nconst Track: React.FC<TrackProps> = (props) => {\n  const { isPlaying } = React.useContext(SongContext);\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return <TrackConsumer isPlaying={isPlaying} {...props} />;\n};\n\nexport default Track;\n","import React, {\n  useEffect,\n  useRef,\n  useContext,\n  // useLayoutEffect\n} from 'react';\n// import equal from 'fast-deep-equal';\n\n// import { SongContext } from './Song';\nimport { TrackContext } from './Track';\nimport Tone from '../lib/tone';\nimport { usePrevious } from '../lib/hooks';\n// import { MidiNote } from '../types/midi-notes';\n\ntype NoteType = {\n  name: string;\n  velocity?: number;\n  duration?: number | string;\n  /** Use unique key to differentiate from same notes, otherwise it won't play */\n  key?: string | number;\n};\n\nexport type InstrumentType =\n  | 'amSynth'\n  | 'duoSynth'\n  | 'fmSynth'\n  | 'membraneSynth'\n  | 'metalSynth'\n  | 'monoSynth'\n  | 'noiseSynth'\n  | 'pluckSynth'\n  | 'synth'\n  | 'sampler';\n\nexport interface InstrumentProps {\n  type: InstrumentType;\n  notes?: NoteType[];\n  /** Should deprecate */\n  options?: any;\n  polyphony?: number;\n  oscillator?: {\n    type: 'triangle' | 'sine' | 'square';\n  };\n  envelope?: {\n    attack?: number;\n    decay?: number;\n    sustain?: number;\n    release?: number;\n  };\n  samples?: {\n    [k: string]: string;\n  };\n  // TODO: Add in next version\n  // samples?: {\n  //   [key in MidiNote]?: string;\n  // };\n  mute?: boolean;\n  solo?: boolean;\n  /** TODO: Type properly and consider loading status */\n  onLoad?: (buffers: any[]) => void;\n}\n\ninterface InstrumentConsumerProps extends InstrumentProps {\n  volume?: number;\n  pan?: number;\n  effectsChain?: React.ReactNode[];\n  onInstrumentsUpdate?: Function;\n}\n\nconst InstrumentConsumer: React.FC<InstrumentConsumerProps> = ({\n  // <Instrument /> Props\n  type = 'synth',\n  options,\n  polyphony = 4,\n  oscillator,\n  envelope,\n  notes = [],\n  samples,\n  onLoad,\n  // <Track /> Props\n  volume,\n  pan,\n  mute,\n  solo,\n  effectsChain,\n  onInstrumentsUpdate,\n}) => {\n  const instrumentRef = useRef<\n    Partial<{\n      curve: number;\n      release: number;\n      triggerAttack: Function;\n      triggerAttackRelease: Function;\n      triggerRelease: Function;\n      add: Function;\n      set: Function;\n      chain: Function;\n      dispose: Function;\n      disconnect: Function;\n    }>\n  >();\n  // const trackChannelBase = useRef(new Tone.PanVol(pan, volume));\n  // const trackChannelBase = useRef(new Tone.Channel(volume, pan));\n  const trackChannelBase = useRef(null);\n  const prevNotes: any[] = usePrevious(notes);\n\n  // -------------------------------------------------------------------------\n  // CHANNEL\n  // TODO: Consider moving this to <Track>\n  // -------------------------------------------------------------------------\n\n  useEffect(() => {\n    trackChannelBase.current = new Tone.Channel(volume, pan);\n\n    return function cleanup() {\n      if (trackChannelBase.current) {\n        trackChannelBase.current.dispose();\n      }\n    };\n    /* eslint-disable-next-line */\n  }, []);\n\n  // -------------------------------------------------------------------------\n  // INSTRUMENT TYPE\n  // -------------------------------------------------------------------------\n\n  const prevType = usePrevious<InstrumentType>(type);\n\n  useEffect(() => {\n    if (type === 'sampler') {\n      instrumentRef.current = new Tone.Sampler(samples, onLoad);\n\n      if (options && options.curve) {\n        instrumentRef.current.curve = options.curve;\n      }\n\n      if (options && options.release) {\n        instrumentRef.current.release = options.release;\n      }\n    } else if (type === 'membraneSynth') {\n      instrumentRef.current = new Tone.MembraneSynth(\n        buildSynthOptions({\n          oscillator,\n          envelope,\n        }),\n      );\n    } else if (type === 'metalSynth') {\n      instrumentRef.current = new Tone.MetalSynth();\n    } else if (type === 'noiseSynth') {\n      instrumentRef.current = new Tone.NoiseSynth();\n    } else if (type === 'pluckSynth') {\n      instrumentRef.current = new Tone.PluckSynth();\n    } else {\n      let synth;\n\n      if (type === 'amSynth') {\n        synth = Tone.AMSynth;\n      } else if (type === 'duoSynth') {\n        synth = Tone.DuoSynth;\n      } else if (type === 'fmSynth') {\n        synth = Tone.FMSynth;\n      } else if (type === 'monoSynth') {\n        synth = Tone.MonoSynth;\n      } else if (type === 'synth') {\n        synth = Tone.Synth;\n      } else {\n        synth = Tone.Synth;\n      }\n\n      /**\n       * PolySynth accepts other Synth types as second param, making them\n       * polyphonic. As this is a common use case, all Synths will be created\n       * via PolySynth. Monophonic synths can easily be created by setting the\n       * `polyphony` prop to 1.\n       */\n      instrumentRef.current = new Tone.PolySynth(\n        polyphony,\n        synth,\n        buildSynthOptions({\n          oscillator,\n          envelope,\n        }),\n      );\n    }\n\n    instrumentRef.current.chain(\n      ...effectsChain,\n      trackChannelBase.current,\n      Tone.Master,\n    );\n\n    // Add this Instrument to Track Context\n    onInstrumentsUpdate([instrumentRef.current]);\n\n    return function cleanup() {\n      if (instrumentRef.current) {\n        instrumentRef.current.dispose();\n      }\n    };\n    /* eslint-disable-next-line */\n  }, [type, polyphony]);\n\n  useEffect(() => {\n    if (\n      // TODO: Add other synth types\n      type === 'synth' &&\n      instrumentRef &&\n      instrumentRef.current &&\n      oscillator\n    ) {\n      instrumentRef.current.set('oscillator', oscillator);\n      // console.log(oscillator);\n    }\n  }, [oscillator, type]);\n\n  // -------------------------------------------------------------------------\n  // VOLUME / PAN / MUTE / SOLO\n  // -------------------------------------------------------------------------\n\n  useEffect(() => {\n    trackChannelBase.current.volume.value = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    trackChannelBase.current.pan.value = pan;\n  }, [pan]);\n\n  useEffect(() => {\n    trackChannelBase.current.mute = mute;\n  }, [mute]);\n\n  useEffect(() => {\n    trackChannelBase.current.solo = solo;\n  }, [solo]);\n\n  // -------------------------------------------------------------------------\n  // NOTES\n  // -------------------------------------------------------------------------\n\n  /**\n   NOTE: Would prefer to use useLayoutEffect as it is a little faster, but unable to test it right now\n   **/\n  useEffect(() => {\n    // Loop through all current notes\n    notes &&\n      notes.forEach((note) => {\n        // Check if note is playing\n        const isPlaying =\n          prevNotes &&\n          prevNotes.filter((prevNote) => {\n            // Check both note name and unique key.\n            // Key helps differentiate same notes, otherwise it won't trigger\n            return prevNote.name === note.name && prevNote.key === note.key;\n          }).length > 0;\n\n        // Only play note is it isn't already playing\n        if (!isPlaying) {\n          if (note.duration) {\n            instrumentRef.current.triggerAttackRelease(\n              note.name,\n              note.duration,\n              undefined,\n              note.velocity,\n            );\n          } else {\n            instrumentRef.current.triggerAttack(\n              note.name,\n              undefined,\n              note.velocity,\n            );\n          }\n        }\n      });\n\n    // Loop through all previous notes\n    prevNotes &&\n      prevNotes.forEach((note) => {\n        // Check if note is still playing\n        const isPlaying =\n          notes && notes.filter((n) => n.name === note.name).length > 0;\n\n        if (!isPlaying) {\n          instrumentRef.current.triggerRelease(note.name);\n        }\n      });\n  }, [notes, prevNotes]);\n\n  // -------------------------------------------------------------------------\n  // EFFECTS CHAIN\n  // -------------------------------------------------------------------------\n\n  useEffect(() => {\n    // NOTE: Using trackChannelBase causes effects to not turn off\n    instrumentRef.current.disconnect();\n    instrumentRef.current.chain(\n      ...effectsChain,\n      trackChannelBase.current,\n      Tone.Master,\n    );\n  }, [effectsChain]);\n\n  // -------------------------------------------------------------------------\n  // SAMPLES\n  // Run whenever `samples` change, using Tone.Sampler's `add` method to load\n  // more samples after initial mount\n  // TODO: Check if first mount, as sampler constructor has already loaded samples\n  // -------------------------------------------------------------------------\n\n  const prevSamples = usePrevious(samples);\n\n  useEffect(() => {\n    // When sampler is initiated, it already loads samples.\n    // We'll use !isFirstSamplerInit to skip adding samples if sampler has been\n    // initiated in this render.\n    const isFirstSamplerInit = type === 'sampler' && prevType !== type;\n\n    if (type === 'sampler' && Boolean(samples) && !isFirstSamplerInit) {\n      // const isEqual = equal(samples, prevSamples);\n      const prevSampleKeys = Object.keys(prevSamples);\n      const sampleKeys = Object.keys(samples);\n\n      // Samples to add\n      const addSampleKeys = sampleKeys.filter(\n        (key) => !prevSampleKeys.includes(key),\n      );\n\n      // Samples to remove\n      // const removeSampleKeys = prevSampleKeys.filter(\n      //   (key) => !sampleKeys.includes(key),\n      // );\n\n      // console.log(addSampleKeys, removeSampleKeys);\n\n      if (addSampleKeys.length) {\n        // Create an array of promises from `samples`\n        const loadSamplePromises = addSampleKeys.map((key) => {\n          return new Promise((resolve: (buffer: any) => void) => {\n            const sample = samples[key];\n            const prevSample = prevSamples ? (prevSamples as object)[key] : '';\n\n            // Only update sample if different than before\n            if (sample !== prevSample) {\n              // Pass `resolve` to `onLoad` parameter of Tone.Sampler\n              // When sample loads, this promise will resolve\n              instrumentRef.current.add(key, sample, resolve);\n            } else {\n              resolve(null);\n            }\n          });\n        });\n\n        // Once all promises in array resolve, run onLoad callback\n        Promise.all(loadSamplePromises).then((event) => {\n          if (typeof onLoad === 'function') {\n            onLoad(event);\n          }\n        });\n\n        // TODO: Work out a way to remove samples. Below doesn't work\n        // removeSampleKeys.forEach((key) => {\n        //   instrumentRef.current.add(key, null);\n        // });\n      }\n    }\n    /* eslint-disable-next-line */\n  }, [samples, type]);\n\n  return null;\n};\n\nconst Instrument: React.FC<InstrumentProps> = ({\n  type,\n  options,\n  notes,\n  polyphony,\n  oscillator,\n  envelope,\n  samples,\n  onLoad,\n}) => {\n  const {\n    volume,\n    pan,\n    mute,\n    solo,\n    effectsChain,\n    onInstrumentsUpdate,\n  } = useContext(TrackContext);\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return (\n    <InstrumentConsumer\n      // <Instrument /> Props\n      type={type}\n      options={options}\n      notes={notes}\n      polyphony={polyphony}\n      oscillator={oscillator}\n      envelope={envelope}\n      samples={samples}\n      onLoad={onLoad}\n      // <Track /> Props\n      volume={volume}\n      pan={pan}\n      mute={mute}\n      solo={solo}\n      effectsChain={effectsChain}\n      onInstrumentsUpdate={onInstrumentsUpdate}\n    />\n  );\n};\n\n/**\n * Use Instrument's flattened synth props to create options object for Tone JS\n */\nconst buildSynthOptions = ({ oscillator, envelope }) => {\n  if (oscillator || envelope) {\n    return {\n      ...(envelope ? { envelope } : {}),\n      ...(oscillator ? { oscillator } : {}),\n    };\n  }\n\n  return undefined;\n};\n\nexport default Instrument;\n","import React, { useEffect, useContext, useRef } from 'react';\n\nimport { TrackContext } from './Track';\nimport Tone from '../lib/tone';\n\nexport type EffectType =\n  | 'autoFilter'\n  | 'autoPanner'\n  | 'autoWah'\n  | 'bitCrusher'\n  | 'distortion'\n  | 'feedbackDelay'\n  | 'freeverb'\n  | 'panVol'\n  | 'tremolo'\n  | 'eq3';\n\nexport interface EffectProps {\n  type?: EffectType;\n  id?: string;\n  delayTime?: string;\n  feedback?: number;\n  wet?: number;\n  low?: number;\n  mid?: number;\n  high?: number;\n  lowFrequency?: number;\n  highFrequency?: number;\n}\n\nexport interface EffectConsumerProps extends EffectProps {\n  onAddToEffectsChain?: Function;\n  onRemoveFromEffectsChain?: Function;\n}\n\nconst EffectConsumer: React.FC<EffectConsumerProps> = ({\n  type,\n  id,\n  delayTime = '8n',\n  feedback = 0.5,\n  wet = 1,\n  low,\n  mid,\n  high,\n  lowFrequency,\n  highFrequency,\n  onAddToEffectsChain,\n  onRemoveFromEffectsChain,\n}) => {\n  const effect = useRef<{\n    id: string | number;\n    feedback?: {\n      value: number;\n    };\n    delay?: {\n      value: number;\n    };\n    delayTime?: {\n      value: string;\n    };\n    wet?: {\n      value: number;\n    };\n    low?: {\n      value: number;\n    };\n    mid?: {\n      value: number;\n    };\n    high?: {\n      value: number;\n    };\n    lowFrequency?: {\n      value: number;\n    };\n    highFrequency?: {\n      value: number;\n    };\n  }>();\n\n  useEffect(() => {\n    // console.log('<Effect /> mount');\n    // console.log(`id: ${id}`);\n\n    if (type === 'autoFilter') {\n      effect.current = new Tone.AutoFilter();\n    } else if (type === 'autoPanner') {\n      effect.current = new Tone.AutoPanner();\n    } else if (type === 'autoWah') {\n      effect.current = new Tone.AutoWah();\n    } else if (type === 'bitCrusher') {\n      effect.current = new Tone.BitCrusher();\n      // Removed for now because delayTime has to be in ms\n      // } else if (type === 'chorus') {\n      //   effect.current = new Tone.Chorus();\n    } else if (type === 'distortion') {\n      effect.current = new Tone.Distortion(0.5);\n    } else if (type === 'feedbackDelay') {\n      effect.current = new Tone.FeedbackDelay(delayTime, feedback);\n    } else if (type === 'freeverb') {\n      effect.current = new Tone.Freeverb();\n    } else if (type === 'panVol') {\n      effect.current = new Tone.PanVol();\n      // Needs generate()\n      // } else if (type === 'reverb') {\n      //   effect.current = new Tone.Reverb();\n    } else if (type === 'tremolo') {\n      effect.current = new Tone.Tremolo();\n    } else if (type === 'eq3') {\n      effect.current = new Tone.EQ3(low, mid, high);\n    }\n\n    if (effect.current) {\n      effect.current.id = id;\n\n      // Update effects chain\n      // TODO: Work out which index to insert current this.effect\n      onAddToEffectsChain(effect.current);\n    }\n\n    return () => {\n      // console.log('<Effect /> unmount');\n      onRemoveFromEffectsChain(effect.current);\n    };\n    /* eslint-disable-next-line */\n  }, [type]);\n\n  useEffect(() => {\n    if (effect.current && effect.current.feedback) {\n      effect.current.feedback.value = feedback;\n    }\n  }, [feedback]);\n\n  useEffect(() => {\n    if (effect.current && effect.current.delayTime) {\n      effect.current.delayTime.value = delayTime;\n    }\n  }, [delayTime]);\n\n  useEffect(() => {\n    if (effect.current && effect.current.wet) {\n      effect.current.wet.value = wet;\n    }\n  }, [wet]);\n\n  useEffect(() => {\n    if (typeof low !== 'undefined' && effect.current && effect.current.low) {\n      effect.current.low.value = low;\n    }\n  }, [low]);\n\n  useEffect(() => {\n    if (typeof mid !== 'undefined' && effect.current && effect.current.mid) {\n      effect.current.mid.value = mid;\n    }\n  }, [mid]);\n\n  useEffect(() => {\n    if (typeof high !== 'undefined' && effect.current && effect.current.high) {\n      effect.current.high.value = high;\n    }\n  }, [high]);\n\n  useEffect(() => {\n    if (\n      typeof lowFrequency !== 'undefined' &&\n      effect.current &&\n      effect.current.lowFrequency\n    ) {\n      effect.current.lowFrequency.value = lowFrequency;\n    }\n  }, [lowFrequency]);\n\n  useEffect(() => {\n    if (\n      typeof highFrequency !== 'undefined' &&\n      effect.current &&\n      effect.current.highFrequency\n    ) {\n      effect.current.highFrequency.value = highFrequency;\n    }\n  }, [highFrequency]);\n\n  return null;\n};\n\nconst Effect: React.FC<EffectProps> = (props) => {\n  const { onAddToEffectsChain, onRemoveFromEffectsChain } = useContext(\n    TrackContext,\n  );\n\n  return (\n    <EffectConsumer\n      onAddToEffectsChain={onAddToEffectsChain}\n      onRemoveFromEffectsChain={onRemoveFromEffectsChain}\n      {...props}\n    />\n  );\n};\n\nexport default Effect;\n","export const version: string = \"14.7.77\";\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { IAudioNode, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from './interfaces';\nimport {\n    TAudioNodeConnectionsStore,\n    TAudioNodeStore,\n    TAudioParamConnectionsStore,\n    TAudioParamStore,\n    TContext,\n    TContextStore,\n    TCycleCounters,\n    TInternalStateEventListener,\n    TNativeAudioWorkletNode,\n    TNativeContext\n} from './types';\n\nexport const ACTIVE_AUDIO_NODE_STORE: WeakSet<IAudioNode<TContext>> = new WeakSet();\n\nexport const AUDIO_NODE_CONNECTIONS_STORE: TAudioNodeConnectionsStore = new WeakMap();\n\nexport const AUDIO_NODE_STORE: TAudioNodeStore = new WeakMap();\n\nexport const AUDIO_PARAM_CONNECTIONS_STORE: TAudioParamConnectionsStore = new WeakMap();\n\nexport const AUDIO_PARAM_STORE: TAudioParamStore = new WeakMap();\n\nexport const CONTEXT_STORE: TContextStore = new WeakMap();\n\nexport const EVENT_LISTENERS: WeakMap<IAudioNode<TContext>, Set<TInternalStateEventListener>> = new WeakMap();\n\nexport const CYCLE_COUNTERS: TCycleCounters = new WeakMap();\n\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS: WeakMap<\n    TNativeContext,\n    Map<string, IAudioWorkletProcessorConstructor>\n> = new WeakMap();\n\nexport const NODE_TO_PROCESSOR_MAPS: WeakMap<\n    TNativeContext,\n    WeakMap<TNativeAudioWorkletNode, Promise<IAudioWorkletProcessor>>\n> = new WeakMap();\n","import { TConstructor } from '../types';\n\nconst handler = {\n    construct(): any {\n        return handler;\n    }\n};\n\nexport const isConstructible = (constructible: TConstructor): boolean => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n\n        new proxy(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source: string, url: string): [string, string] => {\n    const importStatements = [];\n\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nimport { IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TAddAudioWorkletModuleFactory, TEvaluateAudioWorkletGlobalScopeFunction } from '../types';\n\nconst verifyParameterDescriptors = (parameterDescriptors: IAudioWorkletProcessorConstructor['parameterDescriptors']) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\n\nconst verifyProcessorCtor = <T extends IAudioWorkletProcessorConstructor>(processorCtor: T) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\n\nexport const createAddAudioWorkletModule: TAddAudioWorkletModuleFactory = (\n    cacheTestResult,\n    createNotSupportedError,\n    evaluateSource,\n    exposeCurrentFrameAndCurrentTime,\n    fetchSource,\n    getNativeContext,\n    getOrCreateBackupOfflineAudioContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    ongoingRequests,\n    resolvedRequests,\n    testAudioWorkletProcessorPostMessageSupport,\n    window\n) => {\n    let index = 0;\n\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n\n        const nativeContext = getNativeContext(context);\n\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise =\n            nativeContext.audioWorklet === undefined\n                ? fetchSource(moduleURL)\n                      .then(([source, absoluteUrl]) => {\n                          const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n\n                          /*\n                           * This is the unminified version of the code used below:\n                           *\n                           * ```js\n                           * ${ importStatements };\n                           * ((a, b) => {\n                           *     (a[b] = a[b] || [ ]).push(\n                           *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                           *             ${ sourceWithoutImportStatements }\n                           *         }\n                           *     );\n                           * })(window, '_AWGS');\n                           * ```\n                           */\n                          // tslint:disable-next-line:max-line-length\n                          const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n\n                          // @todo Evaluating the given source code is a possible security problem.\n                          return evaluateSource(wrappedSource);\n                      })\n                      .then(() => {\n                          const evaluateAudioWorkletGlobalScope = (<TEvaluateAudioWorkletGlobalScopeFunction[]>(<any>window)._AWGS).pop();\n\n                          if (evaluateAudioWorkletGlobalScope === undefined) {\n                              // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                              throw new SyntaxError();\n                          }\n\n                          exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                              evaluateAudioWorkletGlobalScope(\n                                  class AudioWorkletProcessor {},\n                                  undefined,\n                                  (name, processorCtor) => {\n                                      if (name.trim() === '') {\n                                          throw createNotSupportedError();\n                                      }\n\n                                      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n                                      if (nodeNameToProcessorConstructorMap !== undefined) {\n                                          if (nodeNameToProcessorConstructorMap.has(name)) {\n                                              throw createNotSupportedError();\n                                          }\n\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                                      } else {\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                                      }\n                                  },\n                                  nativeContext.sampleRate,\n                                  undefined,\n                                  undefined\n                              )\n                          );\n                      })\n                : Promise.all([\n                      fetchSource(moduleURL),\n                      Promise.resolve(\n                          cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport)\n                      )\n                  ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                      const currentIndex = index + 1;\n\n                      index = currentIndex;\n\n                      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                      /*\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * This is the unminified version of the code used below.\n                       *\n                       * ```js\n                       * class extends AudioWorkletProcessor {\n                       *\n                       *     __buffers = new WeakSet();\n                       *\n                       *     constructor () {\n                       *         super();\n                       *\n                       *         this.port.postMessage = ((postMessage) => {\n                       *             return (message, transferables) => {\n                       *                 const filteredTransferables = (transferables)\n                       *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                       *                     : transferables;\n                       *\n                       *                 return postMessage.call(this.port, message, filteredTransferables);\n                       *              };\n                       *         })(this.port.postMessage);\n                       *     }\n                       * }\n                       * ```\n                       */\n                      const patchedAudioWorkletProcessor = isSupportingPostMessage\n                          ? 'AudioWorkletProcessor'\n                          : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                      /*\n                       * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                       *\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                       *\n                       * This is the unminified version of the code used below:\n                       *\n                       * ```js\n                       * `${ importStatements };\n                       * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                       * })(\n                       *     ${ patchedAudioWorkletProcessor },\n                       *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                       *\n                       *         __collectBuffers = (array) => {\n                       *             array.forEach((element) => this.__buffers.add(element.buffer));\n                       *         };\n                       *\n                       *         process (inputs, outputs, parameters) {\n                       *             inputs.forEach(this.__collectBuffers);\n                       *             outputs.forEach(this.__collectBuffers);\n                       *             this.__collectBuffers(Object.values(parameters));\n                       *\n                       *             return super.process(\n                       *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                       *                 outputs,\n                       *                 parameters\n                       *             );\n                       *         }\n                       *\n                       *     })\n                       * );\n                       *\n                       * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                       *\n                       *     process () {\n                       *         return false;\n                       *     }\n                       *\n                       * })`\n                       * ```\n                       */\n                      const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                      const bufferRegistration = isSupportingPostMessage\n                          ? ''\n                          : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                      const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                      const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                      const url = URL.createObjectURL(blob);\n\n                      return nativeContext.audioWorklet\n                          .addModule(url, options)\n                          .then(() => {\n                              if (isNativeOfflineAudioContext(nativeContext)) {\n                                  return nativeContext;\n                              }\n\n                              // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                              const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n\n                              return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                          })\n                          .then((nativeContextOrBackupOfflineAudioContext) => {\n                              if (nativeAudioWorkletNodeConstructor === null) {\n                                  throw new SyntaxError();\n                              }\n\n                              try {\n                                  // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                                  new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                              } catch {\n                                  throw new SyntaxError();\n                              }\n                          })\n                          .finally(() => URL.revokeObjectURL(url));\n                  });\n\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        } else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n\n        promise\n            .then(() => {\n                const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n\n                if (updatedResolvedRequestsOfContext === undefined) {\n                    resolvedRequests.set(context, new Set([moduleURL]));\n                } else {\n                    updatedResolvedRequestsOfContext.add(moduleURL);\n                }\n            })\n            .finally(() => {\n                const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n\n                if (updatedOngoingRequestsOfContext !== undefined) {\n                    updatedOngoingRequestsOfContext.delete(moduleURL);\n                }\n            });\n\n        return promise;\n    };\n};\n","import { TGetValueForKeyFunction } from '../types';\n\nexport const getValueForKey: TGetValueForKeyFunction = (map, key) => {\n    const value = map.get(key);\n\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n\n    return value;\n};\n","import { TPickElementFromSetFunction } from '../types';\n\nexport const pickElementFromSet: TPickElementFromSetFunction = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n\n    const [matchingElement] = matchingElements;\n\n    set.delete(matchingElement);\n\n    return matchingElement;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioNodeInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioNode = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>,\n    source: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { EVENT_LISTENERS } from '../globals';\nimport { TGetEventListenersOfAudioNodeFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getEventListenersOfAudioNode: TGetEventListenersOfAudioNodeFunction = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToActive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n","import { IAudioNode, IAudioWorkletNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioWorkletNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioWorkletNode<T> => {\n    return 'port' in audioNode;\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToPassive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    activeInputs: Set<TActiveInputConnection<T>>[]\n) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { IAnalyserNode, IAnalyserOptions } from '../interfaces';\nimport { TAnalyserNodeConstructorFactory, TAudioNodeRenderer, TContext, TNativeAnalyserNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n} as const;\n\nexport const createAnalyserNodeConstructor: TAnalyserNodeConstructorFactory = (\n    audionNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class AnalyserNode<T extends TContext> extends audionNodeConstructor<T> implements IAnalyserNode<T> {\n        private _nativeAnalyserNode: TNativeAnalyserNode;\n\n        constructor(context: T, options?: Partial<IAnalyserOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n\n        get fftSize(): number {\n            return this._nativeAnalyserNode.fftSize;\n        }\n\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n\n        get frequencyBinCount(): number {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n\n        get maxDecibels(): number {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n\n            this._nativeAnalyserNode.maxDecibels = value;\n\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get minDecibels(): number {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n\n            this._nativeAnalyserNode.minDecibels = value;\n\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get smoothingTimeConstant(): number {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n\n        public getByteFrequencyData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n\n        public getByteTimeDomainData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n\n        public getFloatFrequencyData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n\n        public getFloatTimeDomainData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n","import { TNativeAudioNode, TNativeContext } from '../types';\n\nexport const isOwnedByContext = (nativeAudioNode: TNativeAudioNode, nativeContext: TNativeContext): boolean => {\n    return nativeAudioNode.context === nativeContext;\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer: TNativeAudioBuffer): boolean => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TIndexSizeErrorFactory } from '../types';\n\nexport const createIndexSizeError: TIndexSizeErrorFactory = () => new DOMException('', 'IndexSizeError');\n","import { createIndexSizeError } from '../factories/index-size-error';\nimport { TNativeAudioBuffer } from '../types';\n\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer: TNativeAudioBuffer): void => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel: number) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            } catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { IAudioBuffer, IAudioBufferOptions } from '../interfaces';\nimport { TAudioBufferConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createAudioBufferConstructor: TAudioBufferConstructorFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    testNativeAudioBufferConstructorSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    let nativeOfflineAudioContext: null | TNativeOfflineAudioContext = null;\n\n    return class AudioBuffer implements IAudioBuffer {\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyFromChannel!: (destination: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyToChannel!: (source: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public duration!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public getChannelData!: (channel: number) => Float32Array;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public length!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public numberOfChannels!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public sampleRate!: number;\n\n        constructor(options: IAudioBufferOptions) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer =\n                nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                    ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                    : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            } else if (\n                !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                    testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                )\n            ) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n\n            audioBufferStore.add(audioBuffer);\n\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(<any>instance)\n            );\n        }\n    };\n};\n","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\n\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsActiveAudioNodeFunction } from '../types';\n\nexport const isActiveAudioNode: TIsActiveAudioNodeFunction = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioBufferSourceNode, IAudioBufferSourceOptions, IAudioParam, IAudioScheduledSourceNodeEventMap } from '../interfaces';\nimport {\n    TAnyAudioBuffer,\n    TAudioBufferSourceNodeConstructorFactory,\n    TAudioBufferSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeAudioBufferSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n} as const;\n\nexport const createAudioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class AudioBufferSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IAudioBufferSourceNode<T>\n    {\n        private _audioBufferSourceNodeRenderer: TAudioBufferSourceNodeRenderer<T>;\n\n        private _isBufferNullified: boolean;\n\n        private _isBufferSet: boolean;\n\n        private _nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _playbackRate: IAudioParam;\n\n        constructor(context: T, options?: Partial<IAudioBufferSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = <TAudioBufferSourceNodeRenderer<T>>(\n                (isOffline ? createAudioBufferSourceNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(\n                this,\n                isOffline,\n                nativeAudioBufferSourceNode.playbackRate,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n\n                this._isBufferSet = true;\n            }\n        }\n\n        get loop(): boolean {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n\n        get loopEnd(): number {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n\n        get loopStart(): number {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get playbackRate(): IAudioParam {\n            return this._playbackRate;\n        }\n\n        public start(when = 0, offset = 0, duration?: number): void {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeAudioBufferSourceNode.stop(when);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { IAudioBufferSourceNode, IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioBufferSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioBufferSourceNode<T> => {\n    return 'playbackRate' in audioNode;\n};\n","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TAudioNodeConnections, TContext, TGetAudioNodeConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioNodeConnections: TGetAudioNodeConnectionsFunction = <T extends TContext>(\n    audioNode: IAudioNode<T>\n): TAudioNodeConnections<T> => {\n    return <TAudioNodeConnections<T>>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioParamConnections, TContext, TGetAudioParamConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioParamConnections: TGetAudioParamConnectionsFunction = <T extends TContext>(\n    audioParam: IAudioParam\n): TAudioParamConnections<T> => {\n    return <TAudioParamConnections<T>>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\nexport const deactivateActiveAudioNodeInputConnections = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    trace: readonly IAudioNode<T>[]\n) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n\n    activeInputs.forEach((connections) =>\n        connections.forEach(([source]) => {\n            if (!trace.includes(audioNode)) {\n                deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n            }\n        })\n    );\n\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n              // Bug #149: Safari does not yet support the detune AudioParam.\n              audioNode.playbackRate\n          ]\n        : isAudioWorkletNode(audioNode)\n        ? Array.from(audioNode.parameters.values())\n        : isBiquadFilterNode(audioNode)\n        ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n        : isConstantSourceNode(audioNode)\n        ? [audioNode.offset]\n        : isGainNode(audioNode)\n        ? [audioNode.gain]\n        : isOscillatorNode(audioNode)\n        ? [audioNode.detune, audioNode.frequency]\n        : isStereoPannerNode(audioNode)\n        ? [audioNode.pan]\n        : [];\n\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAudioNode, IBiquadFilterNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isBiquadFilterNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IBiquadFilterNode<T> => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n","import { IAudioNode, IConstantSourceNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isConstantSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IConstantSourceNode<T> => {\n    return 'offset' in audioNode;\n};\n","import { IAudioNode, IGainNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isGainNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IGainNode<T> => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n","import { IAudioNode, IOscillatorNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isOscillatorNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IOscillatorNode<T> => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n","import { IAudioNode, IStereoPannerNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isStereoPannerNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IStereoPannerNode<T> => {\n    return 'pan' in audioNode;\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\n\nexport const deactivateAudioGraph = <T extends TContext>(context: T): void => {\n    deactivateActiveAudioNodeInputConnections(<IAudioDestinationNode<T>>context.destination, []);\n};\n","import { IAudioContextOptions } from '../interfaces';\n\nexport const isValidLatencyHint = (latencyHint: IAudioContextOptions['latencyHint']) => {\n    return (\n        latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'))\n    );\n};\n","import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioNode = <T extends TContext>(\n    audioNodeOrAudioParam: IAudioNode<T> | IAudioParam\n): audioNodeOrAudioParam is IAudioNode<T> => {\n    return 'context' in audioNodeOrAudioParam;\n};\n","import { TAudioNodeOutputConnection, TContext, TOutputConnection } from '../types';\nimport { isAudioNode } from './audio-node';\n\nexport const isAudioNodeOutputConnection = <T extends TContext>(\n    outputConnection: TOutputConnection<T>\n): outputConnection is TAudioNodeOutputConnection<T> => {\n    return isAudioNode(outputConnection[0]);\n};\n","import { TInsertElementInSetFunction } from '../types';\n\nexport const insertElementInSet: TInsertElementInSetFunction = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n\n    set.add(element);\n\n    return true;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    [output, eventListener]: TPassiveAudioParamInputConnection,\n    ignoreDuplicates: boolean\n) => {\n    insertElementInSet(\n        activeInputs,\n        [source, output, eventListener],\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n        ignoreDuplicates\n    );\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n","import { INativeAudioNodeFaker } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\n\nexport const isNativeAudioNodeFaker = (\n    nativeAudioNodeOrNativeAudioNodeFaker: TNativeAudioNode | INativeAudioNodeFaker\n): nativeAudioNodeOrNativeAudioNodeFaker is INativeAudioNodeFaker => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { INativeAudioNodeFaker } from '../interfaces';\nimport { TConnectNativeAudioNodeToNativeAudioNodeFunction, TNativeAudioNode } from '../types';\n\nexport const connectNativeAudioNodeToNativeAudioNode: TConnectNativeAudioNodeToNativeAudioNodeFunction = (\n    nativeSourceAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    nativeDestinationAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    output: number,\n    input: number\n): [TNativeAudioNode, number, number] => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n\n    return [nativeDestinationAudioNode, output, input];\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\n\nexport const deleteActiveInputConnection = <T extends TContext>(\n    activeInputConnections: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n): null | TActiveInputConnection<T> => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n\n            return activeInputConnection;\n        }\n    }\n\n    return null;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TInternalStateEventListener } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const deleteEventListenerOfAudioNode = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    eventListener: TInternalStateEventListener\n) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { TDisconnectNativeAudioNodeFromNativeAudioNodeFunction } from '../types';\n\nexport const disconnectNativeAudioNodeFromNativeAudioNode: TDisconnectNativeAudioNodeFromNativeAudioNodeFunction = (\n    nativeSourceAudioNode,\n    nativeDestinationAudioNode,\n    output,\n    input\n) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    } else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n","import { AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode, INativeAudioNodeFaker } from '../interfaces';\nimport { TContext, TGetNativeAudioNodeFunction, TNativeAudioNode } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioNode: TGetNativeAudioNodeFunction = <T extends TContext, U extends TNativeAudioNode | INativeAudioNodeFaker>(\n    audioNode: IAudioNode<T>\n): U => {\n    return <U>getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n","import { AUDIO_PARAM_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TNativeAudioParam } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioParam = (audioParam: IAudioParam): TNativeAudioParam => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n","import { CYCLE_COUNTERS } from '../globals';\nimport { TIsPartOfACycleFunction } from '../types';\n\nexport const isPartOfACycle: TIsPartOfACycleFunction = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsPassiveAudioNodeFunction } from '../types';\n\nexport const isPassiveAudioNode: TIsPassiveAudioNodeFunction = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n","import { TNativeAudioContext, TNativeAudioWorkletNodeConstructor } from '../types';\n\nexport const testAudioNodeDisconnectMethodSupport = (\n    nativeAudioContext: TNativeAudioContext,\n    nativeAudioWorkletNodeConstructor: null | TNativeAudioWorkletNodeConstructor\n): Promise<boolean> => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        } else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n\n            channelData[0] = 1;\n            channelData[1] = 1;\n\n            const source = nativeAudioContext.createBufferSource();\n\n            source.buffer = ones;\n            source.loop = true;\n\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n\n                if (Array.prototype.some.call(chnnlDt, (sample: number) => sample === 1)) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n\n                source.stop();\n\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n\n            source.start();\n        }\n    });\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const visitEachAudioNodeOnce = <T extends TContext>(\n    cycles: IAudioNode<T>[][],\n    visitor: (audioNode: IAudioNode<T>, count: number) => void\n): void => {\n    const counts = new Map<IAudioNode<T>, number>();\n\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n","import { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const isNativeAudioNode = (\n    nativeAudioNodeOrAudioParam: TNativeAudioNode | TNativeAudioParam\n): nativeAudioNodeOrAudioParam is TNativeAudioNode => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode: TNativeAudioNode): void => {\n    const connections = new Map<TNativeAudioNode | TNativeAudioParam, { input: number; output: number }[]>();\n\n    nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            } else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n            disconnect.apply(nativeAudioNode);\n\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            } else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    } else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            } else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                } else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter(\n                            (connection) => connection.output !== output && (connection.input !== input || input === undefined)\n                        );\n\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        } else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    } else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nimport {\n    IAudioNode,\n    IAudioNodeRenderer,\n    IAudioParam,\n    IMinimalOfflineAudioContext,\n    INativeAudioNodeFaker,\n    IOfflineAudioContext\n} from '../interfaces';\nimport {\n    TAudioNodeConstructorFactory,\n    TChannelCountMode,\n    TChannelInterpretation,\n    TContext,\n    TInternalStateEventListener,\n    TNativeAudioNode,\n    TNativeAudioParam\n} from '../types';\n\nconst addConnectionToAudioParamOfAudioContext = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number,\n    isOffline: boolean\n): boolean => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n\n    const eventListener: TInternalStateEventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        } else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n\n    if (\n        insertElementInSet(\n            outputs,\n            [destination, output],\n            (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output,\n            true\n        )\n    ) {\n        eventListeners.add(eventListener);\n\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        } else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\nconst deleteInputConnectionOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n        return [passiveInputConnection[2], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n        return [passiveInputConnection[1], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\n\nconst deleteInputsOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioParam,\n    output: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\n\nconst deleteAnyConnection = <T extends TContext>(source: IAudioNode<T>, isOffline: boolean): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        } else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n\n        destinations.push(outputConnection[0]);\n    }\n\n    audioNodeConnectionsOfSource.outputs.clear();\n\n    return destinations;\n};\n\nconst deleteConnectionAtOutput = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    output: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n\n    return destinations;\n};\n\nconst deleteConnectionToDestination = <T extends TContext, U extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<U> | IAudioParam,\n    output?: number,\n    input?: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter(\n            (outputConnection) =>\n                outputConnection[0] === destination &&\n                (output === undefined || outputConnection[1] === output) &&\n                (input === undefined || outputConnection[2] === input)\n        )\n        .map((outputConnection) => {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n\n            return outputConnection[0];\n        });\n};\n\nexport const createAudioNodeConstructor: TAudioNodeConstructorFactory = (\n    addAudioNodeConnections,\n    addConnectionToAudioNode,\n    cacheTestResult,\n    createIncrementCycleCounter,\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    decrementCycleCounter,\n    detectCycles,\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n) => {\n    return class AudioNode<T extends TContext, EventMap extends Record<string, Event> = {}>\n        extends eventTargetConstructor<EventMap>\n        implements IAudioNode<T, EventMap>\n    {\n        private _context: T;\n\n        private _nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode;\n\n        constructor(\n            context: T,\n            isActive: boolean,\n            nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n            audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null\n        ) {\n            super(nativeAudioNode);\n\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n\n            const nativeContext = getNativeContext(context);\n\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (\n                isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })\n            ) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioNode.channelCount;\n        }\n\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n\n        get channelInterpretation(): TChannelInterpretation {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n\n        get context(): T {\n            return this._context;\n        }\n\n        get numberOfInputs(): number {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n\n        get numberOfOutputs(): number {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n\n        public connect<U extends TContext, V extends IAudioNode<U>>(destinationNode: V, output?: number, input?: number): V;\n        public connect(destinationParam: IAudioParam, output?: number): void;\n        // tslint:disable-next-line:invalid-void\n        public connect<U extends TContext, V extends IAudioNode<U>>(destination: V | IAudioParam, output = 0, input = 0): void | V {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(\n                        this._nativeAudioNode,\n                        nativeDestinationAudioNode,\n                        output,\n                        input\n                    );\n\n                    const isPassive = isPassiveAudioNode(this);\n\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                } catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n\n                    throw err;\n                }\n\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(\n                    this,\n                    <IAudioNode<TContext>>destination,\n                    output,\n                    input,\n                    isOffline\n                );\n\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], <IAudioNode<T>>(<unknown>destination));\n\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n\n                return destination;\n            }\n\n            const nativeAudioParam = getNativeAudioParam(destination);\n\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if ((<TNativeAudioParam & { name: string }>nativeAudioParam).name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            } catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n\n        public disconnect(output?: number): void;\n        public disconnect<U extends TContext>(destinationNode: IAudioNode<U>, output?: number, input?: number): void;\n        public disconnect(destinationParam: IAudioParam, output?: number): void;\n        public disconnect<U extends TContext>(\n            destinationOrOutput?: number | IAudioNode<U> | IAudioParam,\n            output?: number,\n            input?: number\n        ): void {\n            let destinations: (IAudioNode<T> | IAudioParam)[];\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            } else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            } else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n","import { IReadOnlyMap } from './interfaces';\n\nexport class ReadOnlyMap<T, U> implements IReadOnlyMap<T, U> {\n    private _map: Map<T, U>;\n\n    constructor(parameters: [T, U][]) {\n        this._map = new Map(parameters);\n    }\n\n    get size(): number {\n        return this._map.size;\n    }\n\n    public entries(): IterableIterator<[T, U]> {\n        return this._map.entries();\n    }\n\n    public forEach(callback: (audioParam: U, name: T, map: ReadOnlyMap<T, U>) => void, thisArg: any = null): void {\n        return this._map.forEach((value: U, key: T) => callback.call(thisArg, value, key, this));\n    }\n\n    public get(name: T): undefined | U {\n        return this._map.get(name);\n    }\n\n    public has(name: T): boolean {\n        return this._map.has(name);\n    }\n\n    public keys(): IterableIterator<T> {\n        return this._map.keys();\n    }\n\n    public values(): IterableIterator<U> {\n        return this._map.values();\n    }\n}\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport {\n    IAudioParam,\n    IAudioWorkletNode,\n    IAudioWorkletNodeEventMap,\n    IAudioWorkletNodeOptions,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TAudioNodeRenderer,\n    TAudioParamMap,\n    TAudioWorkletNodeConstructorFactory,\n    TContext,\n    TErrorEventHandler,\n    TNativeAudioContext,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n} as const;\n\nexport const createAudioWorkletNodeConstructor: TAudioWorkletNodeConstructorFactory = (\n    addUnrenderedAudioWorkletNode,\n    audioNodeConstructor,\n    createAudioParam,\n    createAudioWorkletNodeRenderer,\n    createNativeAudioWorkletNode,\n    getAudioNodeConnections,\n    getBackupOfflineAudioContext,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    sanitizeAudioWorkletNodeOptions,\n    setActiveAudioWorkletNodeInputs,\n    testAudioWorkletNodeOptionsClonability,\n    wrapEventListener\n) => {\n    return class AudioWorkletNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioWorkletNodeEventMap>\n        implements IAudioWorkletNode<T>\n    {\n        private _nativeAudioWorkletNode: TNativeAudioWorkletNode;\n\n        private _onprocessorerror: null | TErrorEventHandler<this>;\n\n        private _parameters: null | TAudioParamMap;\n\n        constructor(context: T, name: string, options?: Partial<IAudioWorkletNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap?.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext =\n                isOffline || nativeContext.state !== 'closed'\n                    ? nativeContext\n                    : getBackupOfflineAudioContext(<TNativeAudioContext>nativeContext) ?? nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(\n                nativeContextOrBackupOfflineAudioContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                nativeAudioWorkletNodeConstructor,\n                name,\n                processorConstructor,\n                mergedOptions\n            );\n            const audioWorkletNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null)\n            );\n\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n\n            const parameters: [string, IAudioParam][] = [];\n\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n\n                parameters.push([nm, audioParam]);\n            });\n\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, <IAudioWorkletNode<IMinimalOfflineAudioContext | IOfflineAudioContext>>this);\n            }\n\n            const { activeInputs } = getAudioNodeConnections(this);\n\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n\n        get onprocessorerror(): null | TErrorEventHandler<this> {\n            return this._onprocessorerror;\n        }\n\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, <EventListenerOrEventListenerObject>value) : null;\n\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : <null | TErrorEventHandler<this>>nativeOnProcessorError;\n        }\n\n        get parameters(): TAudioParamMap {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return <IReadOnlyMap<string, TNativeAudioParam>>this._nativeAudioWorkletNode.parameters;\n            }\n\n            return this._parameters;\n        }\n\n        get port(): MessagePort {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: string]: Float32Array },\n    key: string,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\n    parent: any,\n    key: number | string,\n    channelNumber: number,\n    bufferOffset: number\n): void {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n\n        // Bug #5: Safari does not support copyFromChannel().\n    } else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        } else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n\n            parent[key].set(slicedInput);\n        }\n    }\n}\n","import { TNativeAudioBuffer } from '../types';\n\nexport const copyToChannel = (\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n\n        // Bug #5: Safari does not support copyToChannel().\n    } else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n","export const createNestedArrays = (x: number, y: number | number[]): Float32Array[][] => {\n    const arrays: Float32Array[][] = [];\n\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n\n        const length = typeof y === 'number' ? y : y[i];\n\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n\n        arrays.push(array);\n    }\n\n    return arrays;\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioNode, IAudioWorkletProcessor } from '../interfaces';\nimport { TContext, TNativeAudioWorkletNode, TNativeOfflineAudioContext } from '../types';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioWorkletProcessor = <T extends TContext>(\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    proxy: IAudioNode<T>\n): Promise<IAudioWorkletProcessor> => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport {\n    IAudioWorkletNode,\n    IAudioWorkletNodeOptions,\n    IAudioWorkletProcessorConstructor,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport {\n    TAudioWorkletNodeRendererFactoryFactory,\n    TExposeCurrentFrameAndCurrentTimeFunction,\n    TNativeAudioBuffer,\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeGainNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst processBuffer = async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n    proxy: IAudioWorkletNode<T>,\n    renderedBuffer: null | TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    options: IAudioWorkletNodeOptions,\n    outputChannelCount: number[],\n    processorConstructor: undefined | IAudioWorkletProcessorConstructor,\n    exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction\n): Promise<null | TNativeAudioBuffer> => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer =\n        numberOfOutputChannels === 0\n            ? null\n            : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters: { [name: string]: Float32Array } = Array.from(proxy.parameters.keys()).reduce(\n        (prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n        {}\n    );\n\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                i / nativeOfflineAudioContext.sampleRate,\n                nativeOfflineAudioContext.sampleRate,\n                () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters)\n            );\n\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n\n            if (!activeSourceFlag) {\n                break;\n            }\n        } catch (error) {\n            proxy.dispatchEvent(\n                new ErrorEvent('processorerror', {\n                    colno: error.colno,\n                    filename: error.filename,\n                    lineno: error.lineno,\n                    message: error.message\n                })\n            );\n\n            break;\n        }\n    }\n\n    return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory: TAudioWorkletNodeRendererFactoryFactory = (\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        name: string,\n        options: IAudioWorkletNodeOptions,\n        processorConstructor: undefined | IAudioWorkletProcessorConstructor\n    ) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioWorkletNode | TNativeGainNode>();\n\n        let processedBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IAudioWorkletNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n            let nativeOutputNodes: null | [TNativeChannelSplitterNode, TNativeChannelMergerNode[], TNativeGainNode] = null;\n\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(\n                        createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: outputChannelCount[i]\n                        })\n                    );\n                }\n\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n\n                outputGainNode.connect = <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]\n            );\n\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters =\n                        processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                            numberOfChannels,\n                            // Ceil the length to the next full render quantum.\n                            // Bug #17: Safari does not yet expose the length.\n                            Math.ceil(proxy.context.length / 128) * 128,\n                            nativeOfflineAudioContext.sampleRate\n                        );\n                        const gainNodes: TNativeGainNode[] = [];\n                        const inputChannelSplitterNodes = [];\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(\n                                createNativeGainNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: options.channelCountMode,\n                                    channelInterpretation: options.channelInterpretation,\n                                    gain: 1\n                                })\n                            );\n                            inputChannelSplitterNodes.push(\n                                createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    numberOfOutputs: options.channelCount\n                                })\n                            );\n                        }\n\n                        const constantSourceNodes = await Promise.all(\n                            Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                                const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: audioParam.value\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n\n                                return constantSourceNode;\n                            })\n                        );\n\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                        await Promise.all(\n                            gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode))\n                        );\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n\n                    processedBufferPromise = processBuffer(\n                        proxy,\n                        numberOfChannels === 0 ? null : await renderBuffer(),\n                        nativeOfflineAudioContext,\n                        options,\n                        outputChannelCount,\n                        processorConstructor,\n                        exposeCurrentFrameAndCurrentTime\n                    );\n                }\n\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n\n                return outputGainNode;\n            }\n\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            } else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n\n            return nativeAudioWorkletNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioWorkletNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioWorkletNode | TNativeGainNode> {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IBiquadFilterNode, IBiquadFilterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TBiquadFilterNodeConstructorFactory, TBiquadFilterType, TContext, TNativeBiquadFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n} as const;\n\nexport const createBiquadFilterNodeConstructor: TBiquadFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class BiquadFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IBiquadFilterNode<T> {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _gain: IAudioParam;\n\n        private _nativeBiquadFilterNode: TNativeBiquadFilterNode;\n\n        private _Q: IAudioParam;\n\n        constructor(context: T, options?: Partial<IBiquadFilterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createBiquadFilterNodeRenderer() : null);\n\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.detune,\n                1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT),\n                -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT)\n            );\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.gain,\n                40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT),\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n\n        get Q(): IAudioParam {\n            return this._Q;\n        }\n\n        get type(): TBiquadFilterType {\n            return this._nativeBiquadFilterNode.type;\n        }\n\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            } catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n","import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n","import { IChannelSplitterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelSplitterNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n} as const;\n\nexport const createChannelSplitterNodeConstructor: TChannelSplitterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n) => {\n    return class ChannelSplitterNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelSplitterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioParam, IAudioScheduledSourceNodeEventMap, IConstantSourceNode, IConstantSourceOptions } from '../interfaces';\nimport {\n    TConstantSourceNodeConstructorFactory,\n    TConstantSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeConstantSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n} as const;\n\nexport const createConstantSourceNodeConstructor: TConstantSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRendererFactory,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class ConstantSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IConstantSourceNode<T>\n    {\n        private _constantSourceNodeRenderer: TConstantSourceNodeRenderer<T>;\n\n        private _nativeConstantSourceNode: TNativeConstantSourceNode;\n\n        private _offset: IAudioParam;\n\n        private _onended: null | TEventHandler<this>;\n\n        constructor(context: T, options?: Partial<IConstantSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = <TConstantSourceNodeRenderer<T>>(\n                (isOffline ? createConstantSourceNodeRendererFactory() : null)\n            );\n\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(\n                this,\n                isOffline,\n                nativeConstantSourceNode.offset,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._onended = null;\n        }\n\n        get offset(): IAudioParam {\n            return this._offset;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeConstantSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        public start(when = 0): void {\n            this._nativeConstantSourceNode.start(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeConstantSourceNode.stop(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { IConvolverNode, IConvolverOptions } from '../interfaces';\nimport { TAnyAudioBuffer, TAudioNodeRenderer, TContext, TConvolverNodeConstructorFactory, TNativeConvolverNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n} as const;\n\nexport const createConvolverNodeConstructor: TConvolverNodeConstructorFactory = (\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class ConvolverNode<T extends TContext> extends audioNodeConstructor<T> implements IConvolverNode<T> {\n        private _isBufferNullified: boolean;\n\n        private _nativeConvolverNode: TNativeConvolverNode;\n\n        constructor(context: T, options?: Partial<IConvolverOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createConvolverNodeRenderer() : null);\n\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeConvolverNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n\n                setAudioNodeTailTime(this, 0);\n            } else {\n                this._isBufferNullified = false;\n\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n\n        get normalize(): boolean {\n            return this._nativeConvolverNode.normalize;\n        }\n\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n","export const detachArrayBuffer = (arrayBuffer: ArrayBuffer): Promise<void> => {\n    const { port1, port2 } = new MessageChannel();\n\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n\n            port1.close();\n            port2.close();\n\n            resolve();\n        };\n\n        port2.onmessage = () => closeAndResolve();\n\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        } finally {\n            closeAndResolve();\n        }\n    });\n};\n","import { IAudioParam, IDelayNode, IDelayOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TDelayNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n} as const;\n\nexport const createDelayNodeConstructor: TDelayNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DelayNode<T extends TContext> extends audioNodeConstructor<T> implements IDelayNode<T> {\n        private _delayTime: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDelayOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n\n        get delayTime(): IAudioParam {\n            return this._delayTime;\n        }\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TDisconnectMultipleOutputsFactory, TIndexSizeErrorFactory, TNativeAudioNode } from '../types';\n\nconst getOutputAudioNodeAtIndex = (\n    createIndexSizeError: TIndexSizeErrorFactory,\n    outputAudioNodes: TNativeAudioNode[],\n    output: number\n): TNativeAudioNode => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n\n    return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs: TDisconnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n","import { IAudioParam, IDynamicsCompressorNode, IDynamicsCompressorOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TDynamicsCompressorNodeConstructorFactory,\n    TNativeAudioParam,\n    TNativeDynamicsCompressorNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n} as const;\n\nexport const createDynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DynamicsCompressorNode<T extends TContext> extends audioNodeConstructor<T> implements IDynamicsCompressorNode<T> {\n        private _attack: IAudioParam;\n\n        private _knee: IAudioParam;\n\n        private _nativeDynamicsCompressorNode: TNativeDynamicsCompressorNode;\n\n        private _ratio: IAudioParam;\n\n        private _release: IAudioParam;\n\n        private _threshold: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDynamicsCompressorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDynamicsCompressorNodeRenderer() : null);\n\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n\n            setAudioNodeTailTime(this, 0.006);\n        }\n\n        get attack(): IAudioParam {\n            return this._attack;\n        }\n\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount(): number {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n\n            this._nativeDynamicsCompressorNode.channelCount = value;\n\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        get knee(): IAudioParam {\n            return this._knee;\n        }\n\n        get ratio(): IAudioParam {\n            return this._ratio;\n        }\n\n        get reduction(): number {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value === 'number') {\n                return (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value;\n            }\n\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n\n        get release(): IAudioParam {\n            return this._release;\n        }\n\n        get threshold(): IAudioParam {\n            return this._threshold;\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IGainNode, IGainOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TGainNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n} as const;\n\nexport const createGainNodeConstructor: TGainNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class GainNode<T extends TContext> extends audioNodeConstructor<T> implements IGainNode<T> {\n        private _gain: IAudioParam;\n\n        constructor(context: T, options?: Partial<IGainOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createGainNodeRenderer() : null);\n\n            super(context, false, nativeGainNode, gainNodeRenderer);\n\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n    };\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => new DOMException('', 'InvalidStateError');\n","import { TInvalidAccessErrorFactory } from '../types';\n\nexport const createInvalidAccessError: TInvalidAccessErrorFactory = () => new DOMException('', 'InvalidAccessError');\n","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nimport { IIIRFilterNode, IIIRFilterOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TIIRFilterNodeConstructorFactory, TNativeIIRFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createIIRFilterNodeConstructor: TIIRFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class IIRFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IIIRFilterNode<T> {\n        private _nativeIIRFilterNode: TNativeIIRFilterNode;\n\n        constructor(\n            context: T,\n            options: { feedback: IIIRFilterOptions['feedback']; feedforward: IIIRFilterOptions['feedforward'] } & Partial<IIIRFilterOptions>\n        ) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(\n                nativeContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                mergedOptions\n            );\n            const iirFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null)\n            );\n\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (\n    feedback: Float64Array,\n    feedbackLength: number,\n    feedforward: Float64Array,\n    feedforwardLength: number,\n    minLength: number,\n    xBuffer: Float32Array,\n    yBuffer: Float32Array,\n    bufferIndex: number,\n    bufferLength: number,\n    input: Float32Array,\n    output: Float32Array\n) => {\n    const inputLength = input.length;\n\n    let i = bufferIndex;\n\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n        output[j] = y;\n    }\n\n    return i;\n};\n","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IIIRFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TIIRFilterNodeRendererFactoryFactory,\n    TNativeAudioBuffer,\n    TNativeAudioBufferSourceNode,\n    TNativeIIRFilterNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst filterFullBuffer = (\n    renderedBuffer: TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    feedback: Iterable<number>,\n    feedforward: Iterable<number>\n) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(\n        renderedBuffer.numberOfChannels,\n        renderedBuffer.length,\n        renderedBuffer.sampleRate\n    );\n\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n\n        filterBuffer(\n            convertedFeedback,\n            feedbackLength,\n            convertedFeedforward,\n            feedforwardLength,\n            minLength,\n            xBuffer,\n            yBuffer,\n            0,\n            bufferLength,\n            input,\n            output\n        );\n    }\n\n    return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory: TIIRFilterNodeRendererFactoryFactory = (\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(feedback: Iterable<number>, feedforward: Iterable<number>) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode | TNativeIIRFilterNode>();\n\n        let filteredBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IIIRFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode: null | TNativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode<T, TNativeIIRFilterNode>(proxy);\n\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(<number[]>feedforward, <number[]>feedback);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode\n            );\n\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                        proxy.context.destination.channelCount,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n\n                const filteredBuffer = await filteredBufferPromise;\n\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n\n                return nativeAudioBufferSourceNode;\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n\n            return nativeIIRFilterNode;\n        };\n\n        return {\n            render(\n                proxy: IIIRFilterNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode | TNativeIIRFilterNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n","import { TNativeContext } from '../types';\n\nexport const testPromiseSupport = (nativeContext: TNativeContext): boolean => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(<ArrayBuffer>uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n\n        if (promise === undefined) {\n            return false;\n        }\n\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n\n        return true;\n    } catch {\n        // Ignore errors.\n    }\n\n    return false;\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IMinimalOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TMinimalOfflineAudioContextConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createMinimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructorFactory = (\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor<IMinimalOfflineAudioContext>\n        implements IMinimalOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","export const assignNativeAudioNodeOption = <T extends keyof any, U extends any>(\n    nativeAudioNode: Record<T, U>,\n    options: Record<T, U>,\n    option: T\n) => {\n    const value = options[option];\n\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n","import { IAudioNodeOptions } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\nimport { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\n\nexport const assignNativeAudioNodeOptions = (nativeAudioNode: TNativeAudioNode, options: IAudioNodeOptions): void => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode: TNativeAnalyserNode): boolean => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n","export const assignNativeAudioNodeAudioParamValue = <T extends { [key: string]: any }, U extends { [key: string]: any }>(\n    nativeAudioNode: T,\n    options: U,\n    audioParam: keyof T & keyof U\n) => {\n    const value = options[audioParam];\n\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            (<(when: number, offset: number, duration?: number) => void>start).call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n","import { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\n\nexport const createAudioWorkletProcessorPromise = async (\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nimport { TNativeChannelSplitterNodeFactory } from '../types';\n\nexport const createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n\n    return nativeChannelSplitterNode;\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { TNativeAudioNode } from '../types';\n\nexport const interceptConnections = <T extends object>(\n    original: T,\n    interceptor: TNativeAudioNode\n): T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] } => {\n    (<T & { connect: TNativeAudioNode['connect'] }>original).connect = interceptor.connect.bind(interceptor);\n\n    (<T & { disconnect: TNativeAudioNode['disconnect'] }>original).disconnect = interceptor.disconnect.bind(interceptor);\n\n    return <T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] }>original;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDelayNodeFactory } from '../types';\n\nexport const createNativeDelayNode: TNativeDelayNodeFactory = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n\n    return nativeDelayNode;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeGainNodeFactory } from '../types';\n\nexport const createNativeGainNode: TNativeGainNodeFactory = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n\n    return nativeGainNode;\n};\n","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeIIRFilterNode, TNativeIIRFilterNodeFakerFactoryFactory } from '../types';\n\nfunction divide(a: [number, number], b: [number, number]): [number, number] {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a: [number, number], b: [number, number]): [number, number] {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient: Float64Array, z: [number, number]): [number, number] {\n    let result: [number, number] = [0, 0];\n\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n\n        result[0] += coefficient[i];\n    }\n\n    return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory: TNativeIIRFilterNodeFakerFactoryFactory = (\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n\n        const bufferLength = 32;\n        const bufferIndexes: number[] = [];\n        const xBuffers: Float32Array[] = [];\n        const yBuffers: Float32Array[] = [];\n\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event: AudioProcessingEvent) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n\n            const numberOfChannels = inputBuffer.numberOfChannels;\n\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n\n                bufferIndexes[i] = filterBuffer(\n                    convertedFeedback,\n                    feedbackLength,\n                    convertedFeedforward,\n                    feedforwardLength,\n                    minLength,\n                    xBuffers[i],\n                    yBuffers[i],\n                    bufferIndexes[i],\n                    bufferLength,\n                    input,\n                    output\n                );\n            }\n        };\n\n        const nyquist = nativeContext.sampleRate / 2;\n\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeIIRFilterNode['channelCountMode'] {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeIIRFilterNode['channelInterpretation'] {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context(): TNativeIIRFilterNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs(): number {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args: any[]): void {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n\n                const length = frequencyHz.length;\n\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z: [number, number] = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n","import { TCacheTestResultFactory } from '../types';\n\nexport const createCacheTestResult: TCacheTestResultFactory = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n\n        const ongoingTest = ongoingTests.get(tester);\n\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n\n        try {\n            const synchronousTestResult = test();\n\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                        ongoingTests.delete(tester);\n                        testResults.set(tester, finalTestResult);\n\n                        return finalTestResult;\n                    });\n            }\n\n            testResults.set(tester, synchronousTestResult);\n\n            return synchronousTestResult;\n        } catch {\n            testResults.set(tester, false);\n\n            return false;\n        }\n    };\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TContext, TGetNativeContextFactory, TNativeAudioContext, TNativeOfflineAudioContext } from '../types';\nimport { createInvalidStateError } from './invalid-state-error';\n\nexport const createGetNativeContext: TGetNativeContextFactory = (contextStore) => {\n    return <T extends TContext>(\n        context: T\n    ): T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext => {\n        const nativeContext = contextStore.get(context);\n\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n\n        return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext>(\n            nativeContext\n        );\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TActiveInputConnection, TAddAudioNodeConnectionsFactory, TContext, TNativeAudioNode } from '../types';\n\nexport const createAddAudioNodeConnections: TAddAudioNodeConnectionsFactory = (audioNodeConnectionsStore) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null,\n        nativeAudioNode: TNativeAudioNode\n    ) => {\n        const activeInputs = [];\n\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set<TActiveInputConnection<T>>());\n        }\n\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n","import { TConvertNumberToUnsignedLongFactory } from '../types';\n\nexport const createConvertNumberToUnsignedLong: TConvertNumberToUnsignedLongFactory = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n\n        return unit32Array[0];\n    };\n};\n","import { IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAddAudioParamConnectionsFactory, TContext } from '../types';\n\nexport const createAddAudioParamConnections: TAddAudioParamConnectionsFactory = (audioParamConnectionsStore) => {\n    return <T extends TContext>(\n        audioParam: IAudioParam,\n        audioParamRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null\n    ) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n","import { TNativeScriptProcessorNodeFactory } from '../types';\n\nexport const createNativeScriptProcessorNode: TNativeScriptProcessorNodeFactory = (\n    nativeContext,\n    bufferSize,\n    numberOfInputChannels,\n    numberOfOutputChannels\n) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => new DOMException('', 'NotSupportedError');\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TNativeOfflineAudioContext, TOfflineAudioContextConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createOfflineAudioContextConstructor: TOfflineAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor<IOfflineAudioContext> implements IOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions);\n        constructor(numberOfChannels: number, length: number, sampleRate: number);\n        constructor(a: number | IOfflineAudioContextOptions, b?: number, c?: number) {\n            let options: IOfflineAudioContextOptions;\n\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            } else if (typeof a === 'object') {\n                options = a;\n            } else {\n                throw new Error('The given parameters are not valid.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport {\n    IAudioParam,\n    IAudioScheduledSourceNodeEventMap,\n    IMinimalOfflineAudioContext,\n    IOscillatorNode,\n    IOscillatorNodeRenderer,\n    IOscillatorOptions\n} from '../interfaces';\nimport {\n    TContext,\n    TEventHandler,\n    TNativeOscillatorNode,\n    TOscillatorNodeConstructorFactory,\n    TOscillatorNodeRenderer,\n    TOscillatorType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n} as const;\n\nexport const createOscillatorNodeConstructor: TOscillatorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class OscillatorNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IOscillatorNode<T>\n    {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _nativeOscillatorNode: TNativeOscillatorNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _oscillatorNodeRenderer: TOscillatorNodeRenderer<T>;\n\n        constructor(context: T, options?: Partial<IOscillatorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = <TOscillatorNodeRenderer<T>>(isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                (<IOscillatorNodeRenderer<IMinimalOfflineAudioContext>>this._oscillatorNodeRenderer).periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeOscillatorNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get type(): TOscillatorType {\n            return this._nativeOscillatorNode.type;\n        }\n\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n\n        public setPeriodicWave(periodicWave: PeriodicWave): void {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n\n        public start(when = 0): void {\n            this._nativeOscillatorNode.start(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeOscillatorNode.stop(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IPannerNode, IPannerOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TContext,\n    TDistanceModelType,\n    TNativePannerNode,\n    TPannerNodeConstructorFactory,\n    TPanningModelType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n} as const;\n\nexport const createPannerNodeConstructor: TPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class PannerNode<T extends TContext> extends audioNodeConstructor<T> implements IPannerNode<T> {\n        private _nativePannerNode: TNativePannerNode;\n\n        private _orientationX: IAudioParam;\n\n        private _orientationY: IAudioParam;\n\n        private _orientationZ: IAudioParam;\n\n        private _positionX: IAudioParam;\n\n        private _positionY: IAudioParam;\n\n        private _positionZ: IAudioParam;\n\n        constructor(context: T, options?: Partial<IPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createPannerNodeRenderer() : null);\n\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get coneInnerAngle(): number {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n\n        get coneOuterAngle(): number {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n\n        get coneOuterGain(): number {\n            return this._nativePannerNode.coneOuterGain;\n        }\n\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n\n        get distanceModel(): TDistanceModelType {\n            return this._nativePannerNode.distanceModel;\n        }\n\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n\n        get maxDistance(): number {\n            return this._nativePannerNode.maxDistance;\n        }\n\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n\n        get orientationX(): IAudioParam {\n            return this._orientationX;\n        }\n\n        get orientationY(): IAudioParam {\n            return this._orientationY;\n        }\n\n        get orientationZ(): IAudioParam {\n            return this._orientationZ;\n        }\n\n        get panningModel(): TPanningModelType {\n            return this._nativePannerNode.panningModel;\n        }\n\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n\n        get positionX(): IAudioParam {\n            return this._positionX;\n        }\n\n        get positionY(): IAudioParam {\n            return this._positionY;\n        }\n\n        get positionZ(): IAudioParam {\n            return this._positionZ;\n        }\n\n        get refDistance(): number {\n            return this._nativePannerNode.refDistance;\n        }\n\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n\n        get rolloffFactor(): number {\n            return this._nativePannerNode.rolloffFactor;\n        }\n\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n","import { IPeriodicWave, IPeriodicWaveOptions } from '../interfaces';\nimport { TContext, TPeriodicWaveConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n} as const;\n\nexport const createPeriodicWaveConstructor: TPeriodicWaveConstructorFactory = (\n    createNativePeriodicWave,\n    getNativeContext,\n    periodicWaveStore,\n    sanitizePeriodicWaveOptions\n) => {\n    return class PeriodicWave<T extends TContext> implements IPeriodicWave {\n        constructor(context: T, options?: Partial<IPeriodicWaveOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n\n            periodicWaveStore.add(periodicWave);\n\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(<any>instance)\n            );\n        }\n    };\n};\n","import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n","import { TUnknownErrorFactory } from '../types';\n\nexport const createUnknownError: TUnknownErrorFactory = () => new DOMException('', 'UnknownError');\n","import { IWaveShaperNode, IWaveShaperOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TNativeWaveShaperNode, TOverSampleType, TWaveShaperNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n} as const;\n\nexport const createWaveShaperNodeConstructor: TWaveShaperNodeConstructorFactory = (\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class WaveShaperNode<T extends TContext> extends audioNodeConstructor<T> implements IWaveShaperNode<T> {\n        private _isCurveNullified: boolean;\n\n        private _nativeWaveShaperNode: TNativeWaveShaperNode;\n\n        constructor(context: T, options?: Partial<IWaveShaperOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createWaveShaperNodeRenderer() : null);\n\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get curve(): null | Float32Array {\n            if (this._isCurveNullified) {\n                return null;\n            }\n\n            return this._nativeWaveShaperNode.curve;\n        }\n\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            } else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n\n        get oversample(): TOverSampleType {\n            return this._nativeWaveShaperNode.oversample;\n        }\n\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n","import { TGetFirstSampleFunction } from '../types';\n\nexport const getFirstSample: TGetFirstSampleFunction = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n\n    return buffer[0];\n};\n","import { TIsDCCurveFunction } from '../types';\n\nexport const isDCCurve: TIsDCCurveFunction = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n\n    const length = curve.length;\n\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n","import { TOverwriteAccessorsFunction } from '../types';\n\nexport const overwriteAccessors: TOverwriteAccessorsFunction = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n\n    const { get, set } = <Required<PropertyDescriptor>>Object.getOwnPropertyDescriptor(prototype, property);\n\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeAudioNode, TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction } from '../types';\nimport { interceptConnections } from './intercept-connections';\n\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls: TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction = (\n    nativeAudioScheduledSourceNode,\n    nativeContext\n) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            (<(destinaton: TNativeAudioNode) => void>disconnect).call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                } catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            } else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","import {\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent\n} from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport {\n    AUDIO_NODE_CONNECTIONS_STORE,\n    AUDIO_NODE_STORE,\n    AUDIO_PARAM_CONNECTIONS_STORE,\n    AUDIO_PARAM_STORE,\n    CONTEXT_STORE,\n    CYCLE_COUNTERS\n} from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\nimport {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioContext,\n    IAudioNode,\n    IAudioWorkletNode,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IOfflineAudioContextConstructor,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IStereoPannerNode,\n    IWaveShaperNode\n} from './interfaces';\nimport {\n    TActiveAudioWorkletNodeInputsStore,\n    TAddAudioWorkletModuleFunction,\n    TAnalyserNodeConstructor,\n    TAudioBufferConstructor,\n    TAudioBufferSourceNodeConstructor,\n    TAudioBufferStore,\n    TAudioContextConstructor,\n    TAudioParamAudioNodeStore,\n    TAudioWorkletNodeConstructor,\n    TBackupOfflineAudioContextStore,\n    TBiquadFilterNodeConstructor,\n    TChannelMergerNodeConstructor,\n    TChannelSplitterNodeConstructor,\n    TConstantSourceNodeConstructor,\n    TContext,\n    TConvolverNodeConstructor,\n    TDecodeAudioDataFunction,\n    TDelayNodeConstructor,\n    TDynamicsCompressorNodeConstructor,\n    TGainNodeConstructor,\n    TIIRFilterNodeConstructor,\n    TMediaElementAudioSourceNodeConstructor,\n    TMediaStreamAudioDestinationNodeConstructor,\n    TMediaStreamAudioSourceNodeConstructor,\n    TMediaStreamTrackAudioSourceNodeConstructor,\n    TMinimalAudioContextConstructor,\n    TMinimalOfflineAudioContextConstructor,\n    TOscillatorNodeConstructor,\n    TPannerNodeConstructor,\n    TPeriodicWaveConstructor,\n    TStereoPannerNodeConstructor,\n    TUnrenderedAudioWorkletNodeStore,\n    TWaveShaperNodeConstructor\n} from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore: TAudioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(\n    createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),\n    createAddConnectionToAudioNode(\n        addActiveInputConnectionToAudioNode,\n        addPassiveInputConnectionToAudioNode,\n        connectNativeAudioNodeToNativeAudioNode,\n        deleteActiveInputConnectionToAudioNode,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getAudioNodeTailTime,\n        getEventListenersOfAudioNode,\n        getNativeAudioNode,\n        insertElementInSet,\n        isActiveAudioNode,\n        isPartOfACycle,\n        isPassiveAudioNode\n    ),\n    cacheTestResult,\n    createIncrementCycleCounterFactory(\n        CYCLE_COUNTERS,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        isActiveAudioNode\n    ),\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    createDecrementCycleCounter(\n        connectNativeAudioNodeToNativeAudioNode,\n        CYCLE_COUNTERS,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        getNativeContext,\n        isActiveAudioNode,\n        isNativeOfflineAudioContext\n    ),\n    createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey),\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n);\nconst analyserNodeConstructor: TAnalyserNodeConstructor = createAnalyserNodeConstructor(\n    audioNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\n\ntype analyserNodeConstructor<T extends TContext> = IAnalyserNode<T>;\n\nexport { analyserNodeConstructor as AnalyserNode };\n\nconst audioBufferStore: TAudioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor: TAudioBufferConstructor = createAudioBufferConstructor(\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\ntype audioBufferConstructor = IAudioBuffer;\n\nexport { audioBufferConstructor as AudioBuffer };\n\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClamping,\n    createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst createAudioParam = createAudioParamFactory(\n    createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),\n    audioParamAudioNodeStore,\n    AUDIO_PARAM_STORE,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n);\nconst audioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\n\ntype audioBufferSourceNodeConstructor<T extends TContext> = IAudioBufferSourceNode<T>;\n\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\n\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors),\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor: TBiquadFilterNodeConstructor = createBiquadFilterNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelMergerNodeConstructor: TChannelMergerNodeConstructor = createChannelMergerNodeConstructor(\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelSplitterNodeConstructor: TChannelSplitterNodeConstructor = createChannelSplitterNodeConstructor(\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst constantSourceNodeConstructor: TConstantSourceNodeConstructor = createConstantSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRenderer,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst convolverNodeConstructor: TConvolverNodeConstructor = createConvolverNodeConstructor(\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst delayNodeConstructor: TDelayNodeConstructor = createDelayNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst dynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createGainNodeRenderer = createGainNodeRendererFactory(\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst gainNodeConstructor: TGainNodeConstructor = createGainNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor)\n);\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor: TIIRFilterNodeConstructor = createIIRFilterNodeConstructor(\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createAudioListener = createAudioListenerFactory(\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n);\nconst unrenderedAudioWorkletNodeStore: TUnrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst oscillatorNodeConstructor: TOscillatorNodeConstructor = createOscillatorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst pannerNodeConstructor: TPannerNodeConstructor = createPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor: TPeriodicWaveConstructor = createPeriodicWaveConstructor(\n    createNativePeriodicWave,\n    getNativeContext,\n    new WeakSet(),\n    sanitizePeriodicWaveOptions\n);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst stereoPannerNodeConstructor: TStereoPannerNodeConstructor = createStereoPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst waveShaperNodeConstructor: TWaveShaperNodeConstructor = createWaveShaperNodeConstructor(\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore: TBackupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n);\n\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule: undefined | TAddAudioWorkletModuleFunction = isSecureContext\n    ? createAddAudioWorkletModule(\n          cacheTestResult,\n          createNotSupportedError,\n          createEvaluateSource(window),\n          exposeCurrentFrameAndCurrentTime,\n          createFetchSource(createAbortError),\n          getNativeContext,\n          getOrCreateBackupOfflineAudioContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          new WeakMap(),\n          new WeakMap(),\n          createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n          // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n          <NonNullable<typeof window>>window\n      )\n    : undefined;\n\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\n\nexport const decodeAudioData: TDecodeAudioDataFunction = createDecodeAudioData(\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    new WeakSet(),\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n);\nconst mediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructor =\n    createMediaStreamAudioDestinationNodeConstructor(\n        audioNodeConstructor,\n        createNativeMediaStreamAudioDestinationNode,\n        getNativeContext,\n        isNativeOfflineAudioContext\n    );\nconst mediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructor =\n    createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor: TAudioContextConstructor = createAudioContextConstructor(\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n);\n\ntype audioContextConstructor = IAudioContext;\n\nexport { audioContextConstructor as AudioContext };\n\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore: TActiveAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor: undefined | TAudioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(\n          addUnrenderedAudioWorkletNode,\n          audioNodeConstructor,\n          createAudioParam,\n          createAudioWorkletNodeRenderer,\n          createNativeAudioWorkletNode,\n          getAudioNodeConnections,\n          getBackupOfflineAudioContext,\n          getNativeContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          sanitizeAudioWorkletNodeOptions,\n          setActiveAudioWorkletNodeInputs,\n          testAudioWorkletNodeOptionsClonability,\n          wrapEventListener\n      )\n    : undefined;\n\ntype audioWorkletNodeConstructor<T extends TContext> = undefined | IAudioWorkletNode<T>;\n\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\n\ntype biquadFilterNodeConstructor<T extends TContext> = IBiquadFilterNode<T>;\n\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\n\ntype channelMergerNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelMergerNodeConstructor as ChannelMergerNode };\n\ntype channelSplitterNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\n\ntype constantSourceNodeConstructor<T extends TContext> = IConstantSourceNode<T>;\n\nexport { convolverNodeConstructor as ConvolverNode };\n\ntype convolverNodeConstructor<T extends TContext> = IConvolverNode<T>;\n\nexport { constantSourceNodeConstructor as ConstantSourceNode };\n\ntype delayNodeConstructor<T extends TContext> = IDelayNode<T>;\n\nexport { delayNodeConstructor as DelayNode };\n\ntype dynamicsCompressorNodeConstructor<T extends TContext> = IDynamicsCompressorNode<T>;\n\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\n\ntype gainNodeConstructor<T extends TContext> = IGainNode<T>;\n\nexport { gainNodeConstructor as GainNode };\n\ntype iIRFilterNodeConstructor<T extends TContext> = IIIRFilterNode<T>;\n\nexport { iIRFilterNodeConstructor as IIRFilterNode };\n\ntype mediaElementAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaElementAudioSourceNode<T>;\n\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\n\ntype mediaStreamAudioDestinationNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioDestinationNode<T>;\n\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\n\ntype mediaStreamAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioSourceNode<T>;\n\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\n\ntype mediaStreamTrackAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamTrackAudioSourceNode<T>;\n\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\n\nconst minimalAudioContextConstructor: TMinimalAudioContextConstructor = createMinimalAudioContextConstructor(\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n);\n\ntype minimalAudioContextConstructor = IMinimalAudioContext;\n\nexport { minimalAudioContextConstructor as MinimalAudioContext };\n\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n);\nconst startRendering = createStartRendering(\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\nconst minimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n);\n\ntype minimalOfflineAudioContextConstructor = IMinimalOfflineAudioContext;\n\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\n\nconst offlineAudioContextConstructor: IOfflineAudioContextConstructor = createOfflineAudioContextConstructor(\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n);\n\ntype offlineAudioContextConstructor = IOfflineAudioContext;\n\nexport { offlineAudioContextConstructor as OfflineAudioContext };\n\ntype oscillatorNodeConstructor<T extends TContext> = IOscillatorNode<T>;\n\nexport { oscillatorNodeConstructor as OscillatorNode };\n\ntype pannerNodeConstructor<T extends TContext> = IPannerNode<T>;\n\nexport { pannerNodeConstructor as PannerNode };\n\ntype periodicWaveConstructor = IPeriodicWave;\n\nexport { periodicWaveConstructor as PeriodicWave };\n\ntype stereoPannerNodeConstructor<T extends TContext> = IStereoPannerNode<T>;\n\nexport { stereoPannerNodeConstructor as StereoPannerNode };\n\ntype waveShaperNodeConstructor<T extends TContext> = IWaveShaperNode<T>;\n\nexport { waveShaperNodeConstructor as WaveShaperNode };\n\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\n\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\n\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\n\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\n\nexport const isSupported = () =>\n    createIsSupportedPromise(\n        cacheTestResult,\n        createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),\n        createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextOptionsSupport(nativeAudioContextConstructor),\n        createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n        createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        testDomExceptionConstructorSupport,\n        createTestIsSecureContextSupport(window),\n        createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),\n        createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),\n        testTransferablesSupport\n    );\n","import { TAddActiveInputConnectionToAudioNodeFactory } from '../types/add-active-input-connection-to-audio-node-factory';\n\nexport const createAddActiveInputConnectionToAudioNode: TAddActiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(\n            activeInputs[input],\n            [source, output, eventListener],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n            ignoreDuplicates\n        );\n    };\n};\n","import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n","import { TDeleteActiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createDeleteActiveInputConnectionToAudioNode: TDeleteActiveInputConnectionToAudioNodeFactory = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(\n            activeInputs[input],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n        );\n    };\n};\n","import { TGetAudioNodeTailTimeFactory } from '../types';\n\nexport const createGetAudioNodeTailTime: TGetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode) => audioNodeTailTimeStore.get(audioNode) ?? 0;\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nimport { TNativeAnalyserNodeFactoryFactory } from '../types';\n\nexport const createNativeAnalyserNodeFactory: TNativeAnalyserNodeFactoryFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (\n            !cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () =>\n                testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode)\n            )\n        ) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n\n        return nativeAnalyserNode;\n    };\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode: TNativeAnalyserNode): void => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array: Float32Array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n\n        return array;\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TRenderInputsOfAudioNodeFactory } from '../types';\n\nexport const createRenderInputsOfAudioNode: TRenderInputsOfAudioNodeFactory = (\n    getAudioNodeConnections,\n    getAudioNodeRenderer,\n    isPartOfACycle\n) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        await Promise.all(\n            audioNodeConnections.activeInputs\n                .map((connections, input) =>\n                    Array.from(connections).map(async ([source, output]) => {\n                        const audioNodeRenderer = getAudioNodeRenderer(source);\n                        const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n                        const destination = <IAudioDestinationNode<typeof audioNode.context>>audioNode.context.destination;\n\n                        if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                            renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n                        }\n                    })\n                )\n                .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], [])\n        );\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAnalyserNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAnalyserNodeRendererFactoryFactory, TNativeAnalyserNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAnalyserNodeRendererFactory: TAnalyserNodeRendererFactoryFactory = (\n    createNativeAnalyserNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAnalyserNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAnalyserNode>();\n\n        const createAnalyserNode = async (proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode<T, TNativeAnalyserNode>(proxy);\n\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n\n            return nativeAnalyserNode;\n        };\n\n        return {\n            render(proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAnalyserNode> {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativeOfflineAudioContextConstructorFactory } from '../types';\n\nexport const createNativeOfflineAudioContextConstructor: TNativeOfflineAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? (<any>window).webkitOfflineAudioContext : null;\n};\n","import { TIsNativeOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsNativeOfflineAudioContext: TIsNativeOfflineAudioContextFactory = (nativeOfflineAudioContextConstructor) => {\n    return (anything): anything is TNativeOfflineAudioContext => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n","import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TNativeAudioContextConstructorFactory } from '../types';\n\nexport const createNativeAudioContextConstructor: TNativeAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n\n    return window.hasOwnProperty('webkitAudioContext') ? (<any>window).webkitAudioContext : null;\n};\n","import { TIsNativeAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeAudioContext: TIsNativeAudioContextFactory = (nativeAudioContextConstructor) => {\n    return (anything): anything is TNativeAudioContext => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n","import { TIsNativeAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsNativeAudioNode: TIsNativeAudioNodeFactory = (window) => {\n    return (anything): anything is TNativeAudioNode => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n","import { TIsNativeAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsNativeAudioParam: TIsNativeAudioParamFactory = (window) => {\n    return (anything): anything is TNativeAudioParam => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n","import { TNativeAudioWorkletNodeConstructorFactory } from '../types';\n\nexport const createNativeAudioWorkletNodeConstructor: TNativeAudioWorkletNodeConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { IAudioNode } from '../interfaces';\nimport { TAddConnectionToAudioNodeFactory, TContext, TInternalStateEventListener } from '../types';\n\nexport const createAddConnectionToAudioNode: TAddConnectionToAudioNodeFactory = (\n    addActiveInputConnectionToAudioNode,\n    addPassiveInputConnectionToAudioNode,\n    connectNativeAudioNodeToNativeAudioNode,\n    deleteActiveInputConnectionToAudioNode,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getAudioNodeTailTime,\n    getEventListenersOfAudioNode,\n    getNativeAudioNode,\n    insertElementInSet,\n    isActiveAudioNode,\n    isPartOfACycle,\n    isPassiveAudioNode\n) => {\n    const tailTimeTimeoutIds = new WeakMap<IAudioNode<TContext>, number>();\n\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n\n        const eventListener: TInternalStateEventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            } else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                const tailTime = getAudioNodeTailTime(destination);\n\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                } else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n\n                    tailTimeTimeoutIds.set(\n                        destination,\n                        setTimeout(() => {\n                            if (isActiveAudioNode(destination)) {\n                                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                            }\n                        }, tailTime * 1000)\n                    );\n                }\n            }\n        };\n\n        if (\n            insertElementInSet(\n                outputs,\n                [destination, output, input],\n                (outputConnection) =>\n                    outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input,\n                true\n            )\n        ) {\n            eventListeners.add(eventListener);\n\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            } else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n\n            return true;\n        }\n\n        return false;\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TIncrementCycleCounterFactoryFactory } from '../types';\n\nexport const createIncrementCycleCounterFactory: TIncrementCycleCounterFactoryFactory = (\n    cycleCounters,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    isActiveAudioNode\n) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                            disconnectNativeAudioNodeFromNativeAudioNode(\n                                nativeSourceAudioNode,\n                                nativeDestinationAudioNode,\n                                output[1],\n                                output[2]\n                            );\n                        } else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n\n                cycleCounters.set(audioNode, count);\n            } else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TDecrementCycleCounterFactory } from '../types';\n\nexport const createDecrementCycleCounter: TDecrementCycleCounterFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    cycleCounters,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    getNativeContext,\n    isActiveAudioNode,\n    isNativeOfflineAudioContext\n) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    } else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        } else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nimport { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext, TDetectCyclesFactory } from '../types';\n\nexport const createDetectCycles: TDetectCyclesFactory = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles<T extends TContext>(chain: IAudioNode<T>[], nextLink: IAudioNode<T> | IAudioParam): IAudioNode<T>[][] {\n        const audioNode = isAudioNode(nextLink) ? nextLink : <IAudioNode<T>>getValueForKey(audioParamAudioNodeStore, nextLink);\n\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n\n        const { outputs } = getAudioNodeConnections(audioNode);\n\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n","import { IAudioNode, IDelayNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isDelayNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IDelayNode<T> => {\n    return 'delayTime' in audioNode;\n};\n","import { TNativeAudioBufferConstructorFactory } from '../types';\n\nexport const createNativeAudioBufferConstructor: TNativeAudioBufferConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n\n    return null;\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFactory = (\n    convertNumberToUnsignedLong,\n    createIndexSizeError\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory = (\n    convertNumberToUnsignedLong\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n","import { TTestAudioBufferConstructorSupportFactory } from '../types';\n\n// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport: TTestAudioBufferConstructorSupportFactory = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n","import { IAudioParam, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TNativeAudioParam, TNativeOfflineAudioContext, TRenderInputsOfAudioParamFactory } from '../types';\n\nexport const createRenderInputsOfAudioParam: TRenderInputsOfAudioParamFactory = (\n    getAudioNodeRenderer,\n    getAudioParamConnections,\n    isPartOfACycle\n) => {\n    return async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioParam: IAudioParam,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        nativeAudioParam: TNativeAudioParam\n    ): Promise<void> => {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        await Promise.all(\n            Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n                const audioNodeRenderer = getAudioNodeRenderer(source);\n                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n\n                if (!isPartOfACycle(source)) {\n                    renderedNativeAudioNode.connect(nativeAudioParam, output);\n                }\n            })\n        );\n    };\n};\n","import { TConnectAudioParamFactory } from '../types';\n\nexport const createConnectAudioParam: TConnectAudioParamFactory = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeAudioBufferSourceNodeFactory: TNativeAudioBufferSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClampling,\n    wrapAudioBufferSourceNodeStopMethodNullifiedBuffer,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n\n        // Bug #149: Safari does not yet support the detune AudioParam.\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () =>\n                testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () =>\n                testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () =>\n                testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n\n        return nativeAudioBufferSourceNode;\n    };\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n\n        return (when = 0, offset = 0, duration?: number) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.start();\n    } catch {\n        return true;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            } else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory } from '../types';\n\nexport const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer: TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory = (\n    overwriteAccessors\n) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n\n        overwriteAccessors(\n            nativeAudioBufferSourceNode,\n            'buffer',\n            (get) => () => {\n                const value = get.call(nativeAudioBufferSourceNode);\n\n                return value === nullifiedBuffer ? null : value;\n            },\n            (set) => (value) => {\n                return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n            }\n        );\n    };\n};\n","import { TRenderAutomationFactory } from '../types';\n\nexport const createRenderAutomation: TRenderAutomationFactory = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n\n        audioParamRenderer.replay(nativeAudioParam);\n\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { IMinimalOfflineAudioContext } from '../interfaces';\nimport { TGetAudioParamRendererFactory } from '../types';\n\nexport const createGetAudioParamRenderer: TGetAudioParamRendererFactory = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections<IMinimalOfflineAudioContext>(audioParam);\n\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n\n        return audioParamConnections.renderer;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioBufferSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioBufferSourceNodeRendererFactoryFactory, TNativeAudioBufferSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAudioBufferSourceNodeRendererFactory: TAudioBufferSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode>();\n\n        let start: null | [number, number] | [number, number, number] = null;\n        let stop: null | number = null;\n\n        const createAudioBufferSourceNode = async (\n            proxy: IAudioBufferSourceNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode<T, TNativeAudioBufferSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            } else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            return nativeAudioBufferSourceNode;\n        };\n\n        return {\n            set start(value: [number, number] | [number, number, number]) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IAudioBufferSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode> {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { AutomationEventList } from 'automation-events';\nimport { IAudioNode, IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioParamFactoryFactory, TContext, TNativeAudioParam } from '../types';\n\nexport const createAudioParamFactory: TAudioParamFactoryFactory = (\n    addAudioParamConnections,\n    audioParamAudioNodeStore,\n    audioParamStore,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        isAudioParamOfOfflineAudioContext: boolean,\n        nativeAudioParam: TNativeAudioParam,\n        maxValue: null | number = null,\n        minValue: null | number = null\n    ): IAudioParam => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue(): number {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue(): number {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue(): number {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value(): number {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime: number): IAudioParam {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                } else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n\n                    const currentLastEvent = Array.from(automationEventList).pop();\n\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        } else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(\n                                currentLastEvent.values,\n                                currentLastEvent.startTime,\n                                currentLastEvent.duration\n                            );\n                        }\n                    }\n                }\n\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            linearRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            setTargetAtTime(target: number, startTime: number, timeConstant: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n\n                return audioParam;\n            },\n            setValueAtTime(value: number, startTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n\n                return audioParam;\n            },\n            setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): IAudioParam {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n\n                    const timeOfLastSample = lastSample / sampleRate;\n\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                } else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n\n                return audioParam;\n            }\n        };\n\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n\n        addAudioParamConnections(\n            audioParam,\n            <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null>audioParamRenderer\n        );\n\n        return audioParam;\n    };\n};\n","import { TAudioParamRendererFactory, TNativeAudioParam } from '../types';\n\nexport const createAudioParamRenderer: TAudioParamRendererFactory = (automationEventList) => {\n    return {\n        replay(audioParam: TNativeAudioParam): void {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                } else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n\n                    audioParam.setValueAtTime(value, startTime);\n                } else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                } else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n","import { TSetValueAtTimeUntilPossibleFunction } from '../types';\n\nexport const setValueAtTimeUntilPossible: TSetValueAtTimeUntilPossibleFunction = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    } catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n","import { IAudioDestinationNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TAudioDestinationNodeRendererFactory,\n    TNativeAudioDestinationNode,\n    TNativeOfflineAudioContext,\n    TRenderInputsOfAudioNodeFunction\n} from '../types';\n\nexport const createAudioDestinationNodeRenderer: TAudioDestinationNodeRendererFactory = <\n    T extends IMinimalOfflineAudioContext | IOfflineAudioContext\n>(\n    renderInputsOfAudioNode: TRenderInputsOfAudioNodeFunction\n) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioDestinationNode>();\n\n    const createAudioDestinationNode = async (proxy: IAudioDestinationNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        return nativeAudioDestinationNode;\n    };\n\n    return {\n        render(\n            proxy: IAudioDestinationNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ): Promise<TNativeAudioDestinationNode> {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n","import { TNativeAudioDestinationNode, TNativeAudioDestinationNodeFactoryFactory, TNativeGainNode } from '../types';\n\nexport const createNativeAudioDestinationNodeFactory: TNativeAudioDestinationNodeFactoryFactory = (\n    createNativeGainNode,\n    overwriteAccessors\n) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            } catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n\n        overwriteAccessors(\n            gainNode,\n            'channelCount',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n\n                try {\n                    nativeAudioDestinationNode.channelCount = value;\n                } catch (err) {\n                    // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                    if (value > nativeAudioDestinationNode.maxChannelCount) {\n                        throw err;\n                    }\n                }\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelCountMode',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelCountMode = value;\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelInterpretation',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelInterpretation = value;\n            }\n        );\n\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n\n        return <{ maxChannelCount: TNativeAudioDestinationNode['maxChannelCount'] } & TNativeGainNode>gainNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IBiquadFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TBiquadFilterNodeRendererFactoryFactory, TNativeBiquadFilterNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createBiquadFilterNodeRendererFactory: TBiquadFilterNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeBiquadFilterNodes = new WeakMap<TNativeOfflineAudioContext, TNativeBiquadFilterNode>();\n\n        const createBiquadFilterNode = async (proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode<T, TNativeBiquadFilterNode>(proxy);\n\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            return nativeBiquadFilterNode;\n        };\n\n        return {\n            render(proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeBiquadFilterNode> {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSetAudioNodeTailTimeFactory } from '../types';\n\nexport const createSetAudioNodeTailTime: TSetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n","import { TMonitorConnectionsFactory, TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const createMonitorConnections: TMonitorConnectionsFactory = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set<[TNativeAudioNode, number, number] | [TNativeAudioParam, number]>();\n\n        nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n                const wasDisconnected = connections.size === 0;\n\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    (<(destination: TNativeAudioNode, output?: number, input?: number) => TNativeAudioNode>connect).call(\n                        nativeAudioNode,\n                        destination,\n                        output,\n                        input\n                    );\n\n                    insertElementInSet(\n                        connections,\n                        [destination, output, input],\n                        (connection) => connection[0] === destination && connection[1] === output && connection[2] === input,\n                        true\n                    );\n\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n\n                    return destination;\n                }\n\n                connect.call(nativeAudioNode, destination, output);\n\n                insertElementInSet(\n                    connections,\n                    [destination, output],\n                    (connection) => connection[0] === destination && connection[1] === output,\n                    true\n                );\n\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n\n                return;\n            };\n        })(nativeAudioNode.connect);\n\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n                const wasConnected = connections.size > 0;\n\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n\n                    connections.clear();\n                } else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    (<(output: number) => void>disconnect).call(nativeAudioNode, destinationOrOutput);\n\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                } else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        (<(destination: TNativeAudioNode, output?: number, input?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output,\n                            input\n                        );\n                    } else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        (<(destination: TNativeAudioParam, output?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output\n                        );\n                    }\n\n                    for (const connection of connections) {\n                        if (\n                            connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)\n                        ) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n\n                const isDisconnected = connections.size === 0;\n\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n\n        return nativeAudioNode;\n    };\n};\n","import { TWrapChannelMergerNodeFactory } from '../types';\n\nexport const createWrapChannelMergerNode: TWrapChannelMergerNodeFactory = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelMergerNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelMergerNodeRendererFactory: TChannelMergerNodeRendererFactoryFactory = (\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelSplitterNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelSplitterNodeRendererFactory: TChannelSplitterNodeRendererFactoryFactory = (\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSanitizeChannelSplitterOptionsFunction } from '../types';\n\nexport const sanitizeChannelSplitterOptions: TSanitizeChannelSplitterOptionsFunction = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport {\n    TNativeAudioBufferSourceNode,\n    TNativeAudioNode,\n    TNativeConstantSourceNode,\n    TNativeConstantSourceNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeConstantSourceNodeFakerFactory: TNativeConstantSourceNodeFakerFactoryFactory = (\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeConstantSourceNode['channelCountMode'] {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeConstantSourceNode['channelInterpretation'] {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context(): TNativeConstantSourceNode['context'] {\n                return gainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [];\n            },\n            get numberOfInputs(): number {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return gainNode.numberOfOutputs;\n            },\n            get offset(): TNativeConstantSourceNode['offset'] {\n                return gainNode.gain;\n            },\n            get onended(): TNativeConstantSourceNode['onended'] {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = <TNativeAudioBufferSourceNode['onended']>value;\n            },\n            addEventListener(...args: any[]): void {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0): void {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0): void {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeConstantSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeConstantSourceNodeFactory: TNativeConstantSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n\n        return nativeConstantSourceNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConstantSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConstantSourceNodeRendererFactoryFactory, TNativeConstantSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConstantSourceNodeRendererFactory: TConstantSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConstantSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConstantSourceNode>();\n\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createConstantSourceNode = async (proxy: IConstantSourceNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode<T, TNativeConstantSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            return nativeConstantSourceNode;\n        };\n\n        return {\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IConstantSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeConstantSourceNode> {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeConvolverNodeFactoryFactory } from '../types';\n\nexport const createNativeConvolverNodeFactory: TNativeConvolverNodeFactoryFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCount',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCountMode',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        return nativeConvolverNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConvolverNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConvolverNodeRendererFactoryFactory, TNativeConvolverNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConvolverNodeRendererFactory: TConvolverNodeRendererFactoryFactory = (\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConvolverNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConvolverNode>();\n\n        const createConvolverNode = async (proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode<T, TNativeConvolverNode>(proxy);\n\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n\n            return nativeConvolverNode;\n        };\n\n        return {\n            render(proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeConvolverNode> {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDelayNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDelayNodeRendererFactoryFactory, TNativeDelayNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDelayNodeRendererFactory: TDelayNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(maxDelayTime: number) => {\n        const renderedNativeDelayNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDelayNode>();\n\n        const createDelayNode = async (proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode<T, TNativeDelayNode>(proxy);\n\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n\n            return nativeDelayNode;\n        };\n\n        return {\n            render(proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeDelayNode> {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDynamicsCompressorNodeFactoryFactory } from '../types';\n\nexport const createNativeDynamicsCompressorNodeFactory: TNativeDynamicsCompressorNodeFactoryFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n\n        return nativeDynamicsCompressorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDynamicsCompressorNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDynamicsCompressorNodeRendererFactoryFactory, TNativeDynamicsCompressorNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDynamicsCompressorNodeRendererFactory: TDynamicsCompressorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDynamicsCompressorNode>();\n\n        const createDynamicsCompressorNode = async (\n            proxy: IDynamicsCompressorNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode<T, TNativeDynamicsCompressorNode>(proxy);\n\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            return nativeDynamicsCompressorNode;\n        };\n\n        return {\n            render(\n                proxy: IDynamicsCompressorNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeDynamicsCompressorNode> {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IGainNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGainNodeRendererFactoryFactory, TNativeGainNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createGainNodeRendererFactory: TGainNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeGainNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode>();\n\n        const createGainNode = async (proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode<T, TNativeGainNode>(proxy);\n\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n\n            return nativeGainNode;\n        };\n\n        return {\n            render(proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeGainNode> {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IOfflineAudioCompletionEvent } from '../interfaces';\nimport { TNativeAudioBuffer, TRenderNativeOfflineAudioContextFactory } from '../types';\n\nexport const createRenderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFactory = (\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    testOfflineAudioContextCurrentTimeSupport\n) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(\n                cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)\n            ).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n\n        return new Promise<TNativeAudioBuffer>((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n\n            nativeOfflineAudioContext.oncomplete = (event: IOfflineAudioCompletionEvent) => {\n                gainNode.disconnect();\n\n                resolve(event.renderedBuffer);\n            };\n\n            gainNode.connect(nativeOfflineAudioContext.destination);\n\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeIIRFilterNodeFactoryFactory } from '../types';\n\nexport const createNativeIIRFilterNodeFactory: TNativeIIRFilterNodeFactoryFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(<number[]>options.feedforward, <number[]>options.feedback);\n\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n\n        return nativeIIRFilterNode;\n    };\n};\n","import { createInvalidAccessError } from '../factories/invalid-access-error';\nimport { TNativeIIRFilterNode } from '../types';\n\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode: TNativeIIRFilterNode): void => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioListenerFactoryFactory } from '../types';\n\nexport const createAudioListenerFactory: TAudioListenerFactoryFactory = (\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation: [number, number, number, number, number, number] = [0, 0, -1, 0, 1, 0];\n            let lastPosition: [number, number, number] = [0, 0, 0];\n\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n\n                isScriptProcessorNodeCreated = true;\n\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation: [number, number, number, number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                        lastOrientation = orientation;\n                    }\n\n                    const positon: [number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n                        lastPosition = positon;\n                    }\n                };\n\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index: number) => (value: number) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index: number) => (value: number) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input: number, initialValue: number, setValue: (value: number) => void) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n\n                constantSourceNode.connect(channelMergerNode, 0, input);\n\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get(): number {\n                        return initialValue;\n                    }\n                });\n\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam(\n                    <any>{ context },\n                    isOffline,\n                    constantSourceNode.offset,\n                    MOST_POSITIVE_SINGLE_FLOAT,\n                    MOST_NEGATIVE_SINGLE_FLOAT\n                );\n\n                overwriteAccessors(\n                    audioParam,\n                    'value',\n                    (get) => () => get.call(audioParam),\n                    (set) => (value) => {\n                        try {\n                            set.call(audioParam, value);\n                        } catch (err) {\n                            if (err.code !== 9) {\n                                throw err;\n                            }\n                        }\n\n                        createScriptProcessorNode();\n\n                        if (isOffline) {\n                            // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                            setValue(value);\n                        }\n                    }\n                );\n\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelAndHoldAtTime']>) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelScheduledValues']>) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['exponentialRampToValueAtTime']>) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['linearRampToValueAtTime']>) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setTargetAtTime']>) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueAtTime']>) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueCurveAtTime']>) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n\n                return audioParam;\n            };\n\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } =\n            nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n\n        return {\n            get forwardX(): IAudioParam {\n                return forwardX;\n            },\n            get forwardY(): IAudioParam {\n                return forwardY;\n            },\n            get forwardZ(): IAudioParam {\n                return forwardZ;\n            },\n            get positionX(): IAudioParam {\n                return positionX;\n            },\n            get positionY(): IAudioParam {\n                return positionY;\n            },\n            get positionZ(): IAudioParam {\n                return positionZ;\n            },\n            get upX(): IAudioParam {\n                return upX;\n            },\n            get upY(): IAudioParam {\n                return upY;\n            },\n            get upZ(): IAudioParam {\n                return upZ;\n            }\n        };\n    };\n};\n","import { CONTEXT_STORE } from '../globals';\nimport { IAudioDestinationNode, IAudioListener, IMinimalBaseAudioContext, IMinimalBaseAudioContextEventMap } from '../interfaces';\nimport { TAudioContextState, TContext, TEventHandler, TMinimalBaseAudioContextConstructorFactory, TNativeContext } from '../types';\n\nexport const createMinimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructorFactory = (\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n) => {\n    return class MinimalBaseAudioContext<T extends TContext>\n        extends eventTargetConstructor<IMinimalBaseAudioContextEventMap>\n        implements IMinimalBaseAudioContext<T>\n    {\n        private _destination: IAudioDestinationNode<T>;\n\n        private _listener: IAudioListener;\n\n        private _onstatechange: null | TEventHandler<T>;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext);\n\n            CONTEXT_STORE.set(<T>(<unknown>this), _nativeContext);\n\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n\n            this._destination = new audioDestinationNodeConstructor(<T>(<unknown>this), numberOfChannels);\n            this._listener = createAudioListener(<T>(<unknown>this), _nativeContext);\n            this._onstatechange = null;\n        }\n\n        get currentTime(): number {\n            return this._nativeContext.currentTime;\n        }\n\n        get destination(): IAudioDestinationNode<T> {\n            return this._destination;\n        }\n\n        get listener(): IAudioListener {\n            return this._listener;\n        }\n\n        get onstatechange(): null | TEventHandler<T> {\n            return this._onstatechange;\n        }\n\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeContext.onstatechange = wrappedListener;\n\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n\n        get sampleRate(): number {\n            return this._nativeContext.sampleRate;\n        }\n\n        get state(): TAudioContextState {\n            return this._nativeContext.state;\n        }\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeOscillatorNodeFactoryFactory } from '../types';\n\nexport const createNativeOscillatorNodeFactory: TNativeOscillatorNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        } else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n\n        return nativeOscillatorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IOscillatorNode, IPeriodicWave } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeOscillatorNode, TOscillatorNodeRendererFactoryFactory } from '../types';\n\nexport const createOscillatorNodeRendererFactory: TOscillatorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeOscillatorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeOscillatorNode>();\n\n        let periodicWave: null | IPeriodicWave = null;\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createOscillatorNode = async (proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode<T, TNativeOscillatorNode>(proxy);\n\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n\n            return nativeOscillatorNode;\n        };\n\n        return {\n            set periodicWave(value: null | IPeriodicWave) {\n                periodicWave = value;\n            },\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeOscillatorNode> {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TConnectedNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createConnectedNativeAudioBufferSourceNodeFactory: TConnectedNativeAudioBufferSourceNodeFactoryFactory = (\n    createNativeAudioBufferSourceNode\n) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeWaveShaperNode, TNativeWaveShaperNodeFakerFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFakerFactory: TNativeWaveShaperNodeFakerFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n        let unmodifiedCurve: null | TNativeWaveShaperNode['curve'] = null;\n\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeWaveShaperNode['channelCountMode'] {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeWaveShaperNode['channelInterpretation'] {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeWaveShaperNode['context'] {\n                return negativeWaveShaperNode.context;\n            },\n            get curve(): TNativeWaveShaperNode['curve'] {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                } else {\n                    const curveLength = value.length;\n\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                  (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n\n                unmodifiedCurve = value;\n\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    } else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample(): TNativeWaveShaperNode['oversample'] {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n\n            isConnected = true;\n\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeWaveShaperNodeFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFactory: TNativeWaveShaperNodeFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (\n            nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined\n        ) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n\n        overwriteAccessors(\n            nativeWaveShaperNode,\n            'curve',\n            (get) => () => get.call(nativeWaveShaperNode),\n            (set) => (value) => {\n                set.call(nativeWaveShaperNode, value);\n\n                if (isConnected) {\n                    if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(\n                            nativeContext,\n                            nativeWaveShaperNode\n                        );\n                    } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n\n                return value;\n            }\n        );\n\n        const whenConnected = () => {\n            isConnected = true;\n\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativePannerNode, TNativePannerNodeFakerFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFakerFactory: TNativePannerNodeFakerFactoryFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n) => {\n    return (\n        nativeContext,\n        {\n            coneInnerAngle,\n            coneOuterAngle,\n            coneOuterGain,\n            distanceModel,\n            maxDistance,\n            orientationX,\n            orientationY,\n            orientationZ,\n            panningModel,\n            positionX,\n            positionY,\n            positionZ,\n            refDistance,\n            rolloffFactor,\n            ...audioNodeOptions\n        }\n    ) => {\n        const pannerNode = nativeContext.createPanner();\n\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        } as const;\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n\n        let lastOrientation: [number, number, number] = [orientationX, orientationY, orientationZ];\n        let lastPosition: [number, number, number] = [positionX, positionY, positionZ];\n\n        const buffer = new Float32Array(1);\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                lastOrientation = orientation;\n            }\n\n            const positon: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n                lastPosition = positon;\n            }\n        };\n\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n\n        const nativePannerNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode(): TNativePannerNode['channelCountMode'] {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativePannerNode['channelInterpretation'] {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle(): TNativePannerNode['coneInnerAngle'] {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle(): TNativePannerNode['coneOuterAngle'] {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain(): TNativePannerNode['coneOuterGain'] {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n\n                pannerNode.coneOuterGain = value;\n            },\n            get context(): TNativePannerNode['context'] {\n                return pannerNode.context;\n            },\n            get distanceModel(): TNativePannerNode['distanceModel'] {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get maxDistance(): TNativePannerNode['maxDistance'] {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs(): number {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX(): TNativePannerNode['orientationX'] {\n                return orientationXGainNode.gain;\n            },\n            get orientationY(): TNativePannerNode['orientationY'] {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ(): TNativePannerNode['orientationZ'] {\n                return orientationZGainNode.gain;\n            },\n            get panningModel(): TNativePannerNode['panningModel'] {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX(): TNativePannerNode['positionX'] {\n                return positionXGainNode.gain;\n            },\n            get positionY(): TNativePannerNode['positionY'] {\n                return positionYGainNode.gain;\n            },\n            get positionZ(): TNativePannerNode['positionZ'] {\n                return positionZGainNode.gain;\n            },\n            get refDistance(): TNativePannerNode['refDistance'] {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor(): TNativePannerNode['rolloffFactor'] {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativePannerNodeFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFactory: TNativePannerNodeFactoryFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n\n        return nativePannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, INativePannerNodeFaker, IOfflineAudioContext, IPannerNode } from '../interfaces';\nimport {\n    TNativeAudioBuffer,\n    TNativeGainNode,\n    TNativeOfflineAudioContext,\n    TNativePannerNode,\n    TPannerNodeRendererFactoryFactory\n} from '../types';\n\nexport const createPannerNodeRendererFactory: TPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode | TNativePannerNode>();\n\n        let renderedBufferPromise: null | Promise<TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode: null | TNativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode<T, TNativePannerNode>(proxy);\n\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            } else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        6,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all(\n                            [\n                                proxy.orientationX,\n                                proxy.orientationY,\n                                proxy.orientationZ,\n                                proxy.positionX,\n                                proxy.positionY,\n                                proxy.positionZ\n                            ].map(async (audioParam, index) => {\n                                const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: index === 0 ? 1 : 0\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n\n                                return nativeConstantSourceNode;\n                            })\n                        );\n\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n\n                const channelDatas: Float32Array[] = [];\n\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n\n                inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation: [number, number, number] = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon: [number, number, number] = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n                    if (\n                        orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])\n                    ) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n\n                        inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n\n                return nativeGainNode;\n            }\n\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n\n            return nativePannerNode;\n        };\n\n        return {\n            render(\n                proxy: IPannerNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeGainNode | TNativePannerNode> {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n","import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport { INativeWaveShaperNodeFaker } from '../interfaces';\nimport {\n    TNativeAudioNode,\n    TNativeChannelMergerNode,\n    TNativeContext,\n    TNativeGainNode,\n    TNativeStereoPannerNode,\n    TNativeStereoPannerNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeStereoPannerNodeFakerFactory: TNativeStereoPannerNodeFakerFactoryFactory = (\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' } as const;\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' } as const;\n\n    const buildInternalGraphForMono = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve })\n        );\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve })\n        );\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraphForStereo = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            } else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraph = (\n        nativeContext: TNativeContext,\n        channelCount: number,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        throw createNotSupportedError();\n    };\n\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n\n        let { connectGraph, disconnectGraph } = buildInternalGraph(\n            nativeContext,\n            channelCount,\n            inputGainNode,\n            panGainNode,\n            channelMergerNode\n        );\n\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(\n                        nativeContext,\n                        value,\n                        inputGainNode,\n                        panGainNode,\n                        channelMergerNode\n                    ));\n\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeStereoPannerNode['channelCountMode'] {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeStereoPannerNode['channelInterpretation'] {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeStereoPannerNode['context'] {\n                return inputGainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan(): TNativeStereoPannerNode['pan'] {\n                return panGainNode.gain;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        let isConnected = false;\n\n        const whenConnected = () => {\n            connectGraph();\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n\n            isConnected = false;\n        };\n\n        return monitorConnections(\n            interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode),\n            whenConnected,\n            whenDisconnected\n        );\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeStereoPannerNodeFactoryFactory } from '../types';\n\nexport const createNativeStereoPannerNodeFactory: TNativeStereoPannerNodeFactoryFactory = (\n    createNativeStereoPannerNodeFaker,\n    createNotSupportedError\n) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n\n        return nativeStereoPannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IStereoPannerNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeStereoPannerNode, TStereoPannerNodeRendererFactoryFactory } from '../types';\n\nexport const createStereoPannerNodeRendererFactory: TStereoPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeStereoPannerNodes = new WeakMap<TNativeOfflineAudioContext, TNativeStereoPannerNode>();\n\n        const createStereoPannerNode = async (proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode<T, TNativeStereoPannerNode>(proxy);\n\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n\n            return nativeStereoPannerNode;\n        };\n\n        return {\n            render(proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeStereoPannerNode> {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IWaveShaperNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeWaveShaperNode, TWaveShaperNodeRendererFactoryFactory } from '../types';\n\nexport const createWaveShaperNodeRendererFactory: TWaveShaperNodeRendererFactoryFactory = (\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeWaveShaperNodes = new WeakMap<TNativeOfflineAudioContext, TNativeWaveShaperNode>();\n\n        const createWaveShaperNode = async (proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode<T, TNativeWaveShaperNode>(proxy);\n\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n\n            return nativeWaveShaperNode;\n        };\n\n        return {\n            render(proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeWaveShaperNode> {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TIsSecureContextFactory } from '../types';\n\nexport const createIsSecureContext: TIsSecureContextFactory = (window) => window !== null && window.isSecureContext;\n","import { TExposeCurrentFrameAndCurrentTimeFactory } from '../types';\n\nexport const createExposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFactory = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get(): number {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get(): number {\n                    return currentTime;\n                }\n            }\n        });\n\n        try {\n            return fn();\n        } finally {\n            if (window !== null) {\n                delete (<any>window).currentFrame;\n                delete (<any>window).currentTime;\n            }\n        }\n    };\n};\n","import { TGetOrCreateBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFactory = (\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n\n        return backupOfflineAudioContext;\n    };\n};\n","import { TEvaluateSourceFactory } from '../types';\n\nexport const createEvaluateSource: TEvaluateSourceFactory = (window) => {\n    return (source) =>\n        new Promise((resolve, reject) => {\n            if (window === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n\n                return;\n            }\n\n            const head = window.document.head;\n\n            if (head === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            } else {\n                const script = window.document.createElement('script');\n                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n                const blob = new Blob([source], { type: 'application/javascript' });\n                const url = URL.createObjectURL(blob);\n\n                const originalOnErrorHandler = window.onerror;\n\n                const removeErrorEventListenerAndRevokeUrl = () => {\n                    window.onerror = originalOnErrorHandler;\n\n                    URL.revokeObjectURL(url);\n                };\n\n                window.onerror = (message, src, lineno, colno, error) => {\n                    // @todo Edge thinks the source is the one of the html document.\n                    if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                        removeErrorEventListenerAndRevokeUrl();\n                        reject(error);\n\n                        return false;\n                    }\n\n                    if (originalOnErrorHandler !== null) {\n                        return originalOnErrorHandler(message, src, lineno, colno, error);\n                    }\n                };\n\n                script.onerror = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    reject(new SyntaxError());\n                };\n                script.onload = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    resolve();\n                };\n                script.src = url;\n                script.type = 'module';\n\n                head.appendChild(script);\n            }\n        });\n};\n","import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n","import { TAbortErrorFactory } from '../types';\n\nexport const createAbortError: TAbortErrorFactory = () => new DOMException('', 'AbortError');\n","import { TTestAudioWorkletProcessorPostMessageSupportFactory } from '../types';\n\n// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport: TTestAudioWorkletProcessorPostMessageSupportFactory = (\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor\n) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const blob = new Blob(\n            ['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'],\n            {\n                type: 'application/javascript; charset=utf-8'\n            }\n        );\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n\n            await offlineAudioContext.startRendering();\n        } catch {\n            // Ignore errors.\n        } finally {\n            URL.revokeObjectURL(url);\n        }\n\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n","import { TIsNativeContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeContext: TIsNativeContextFactory = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything): anything is TNativeAudioContext => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TDecodeAudioDataFactory } from '../types';\n\nexport const createDecodeAudioData: TDecodeAudioDataFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    detachedArrayBuffers,\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n\n            return Promise.reject(err);\n        }\n\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        } catch {\n            // Ignore errors.\n        }\n\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n        }\n\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                } catch {\n                    // Ignore errors.\n                }\n            };\n\n            const fail = (err: DOMException | Error) => {\n                reject(err);\n                complete();\n            };\n\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(\n                    audioData,\n                    (audioBuffer) => {\n                        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                        if (typeof audioBuffer.copyFromChannel !== 'function') {\n                            wrapAudioBufferCopyChannelMethods(audioBuffer);\n                            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                        }\n\n                        audioBufferStore.add(audioBuffer);\n\n                        complete().then(() => resolve(audioBuffer));\n                    },\n                    (err: DOMException | Error) => {\n                        // Bug #4: Safari returns null instead of an error.\n                        if (err === null) {\n                            fail(createEncodingError());\n                        } else {\n                            fail(err);\n                        }\n                    }\n                );\n            } catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n","import { TDataCloneErrorFactory } from '../types';\n\nexport const createDataCloneError: TDataCloneErrorFactory = () => new DOMException('', 'DataCloneError');\n","import { TEncodingErrorFactory } from '../types';\n\nexport const createEncodingError: TEncodingErrorFactory = () => new DOMException('', 'EncodingError');\n","import {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioNode,\n    IAudioWorklet,\n    IBaseAudioContext,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IPeriodicWaveConstraints,\n    IStereoPannerNode,\n    IWaveShaperNode,\n    IWorkletOptions\n} from '../interfaces';\nimport { TBaseAudioContextConstructorFactory, TContext, TDecodeErrorCallback, TDecodeSuccessCallback, TNativeContext } from '../types';\n\nexport const createBaseAudioContextConstructor: TBaseAudioContextConstructorFactory = (\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n) => {\n    return class BaseAudioContext<T extends TContext> extends minimalBaseAudioContextConstructor<T> implements IBaseAudioContext<T> {\n        private _audioWorklet: undefined | IAudioWorklet;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext, numberOfChannels);\n\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                          addModule: (moduleURL: string, options?: IWorkletOptions) => {\n                              return addAudioWorkletModule(<T>(<unknown>this), moduleURL, options);\n                          }\n                      };\n        }\n\n        get audioWorklet(): undefined | IAudioWorklet {\n            return this._audioWorklet;\n        }\n\n        public createAnalyser(): IAnalyserNode<T> {\n            return new analyserNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBiquadFilter(): IBiquadFilterNode<T> {\n            return new biquadFilterNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBuffer(numberOfChannels: number, length: number, sampleRate: number): IAudioBuffer {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n\n        public createBufferSource(): IAudioBufferSourceNode<T> {\n            return new audioBufferSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createChannelMerger(numberOfInputs = 6): IAudioNode<T> {\n            return new channelMergerNodeConstructor(<T>(<unknown>this), { numberOfInputs });\n        }\n\n        public createChannelSplitter(numberOfOutputs = 6): IAudioNode<T> {\n            return new channelSplitterNodeConstructor(<T>(<unknown>this), { numberOfOutputs });\n        }\n\n        public createConstantSource(): IConstantSourceNode<T> {\n            return new constantSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createConvolver(): IConvolverNode<T> {\n            return new convolverNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createDelay(maxDelayTime = 1): IDelayNode<T> {\n            return new delayNodeConstructor(<T>(<unknown>this), { maxDelayTime });\n        }\n\n        public createDynamicsCompressor(): IDynamicsCompressorNode<T> {\n            return new dynamicsCompressorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createGain(): IGainNode<T> {\n            return new gainNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIIRFilterNode<T> {\n            return new iIRFilterNodeConstructor(<T>(<unknown>this), { feedback, feedforward });\n        }\n\n        public createOscillator(): IOscillatorNode<T> {\n            return new oscillatorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPanner(): IPannerNode<T> {\n            return new pannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPeriodicWave(\n            real: Iterable<number>,\n            imag: Iterable<number>,\n            constraints: Partial<IPeriodicWaveConstraints> = { disableNormalization: false }\n        ): IPeriodicWave {\n            return new periodicWaveConstructor(<T>(<unknown>this), { ...constraints, imag, real });\n        }\n\n        public createStereoPanner(): IStereoPannerNode<T> {\n            return new stereoPannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createWaveShaper(): IWaveShaperNode<T> {\n            return new waveShaperNodeConstructor(<T>(<unknown>this));\n        }\n\n        public decodeAudioData(\n            audioData: ArrayBuffer,\n            successCallback?: TDecodeSuccessCallback,\n            errorCallback?: TDecodeErrorCallback\n        ): Promise<IAudioBuffer> {\n            return decodeAudioData(this._nativeContext, audioData).then(\n                (audioBuffer) => {\n                    if (typeof successCallback === 'function') {\n                        successCallback(audioBuffer);\n                    }\n\n                    return audioBuffer;\n                },\n                (err) => {\n                    if (typeof errorCallback === 'function') {\n                        errorCallback(err);\n                    }\n\n                    throw err;\n                }\n            );\n        }\n    };\n};\n","import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n","import { TNativeMediaElementAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNodeFactory = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeMediaStreamAudioDestinationNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNodeFactory = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n};\n","import { IAudioContext, IMediaStreamAudioSourceNode, IMediaStreamAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioSourceNodeConstructorFactory, TNativeMediaStreamAudioSourceNode } from '../types';\n\nexport const createMediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioSourceNode<T> {\n        private _nativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNode;\n\n        constructor(context: T, options: IMediaStreamAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            super(context, true, nativeMediaStreamAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n\n        get mediaStream(): MediaStream {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n","import { TNativeMediaStreamAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNodeFactory = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n\n    return nativeMediaStreamAudioSourceNode;\n};\n","import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n","import { IAudioContext, IMediaStreamTrackAudioSourceNode, IMediaStreamTrackAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamTrackAudioSourceNodeConstructorFactory } from '../types';\n\nexport const createMediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamTrackAudioSourceNode,\n    getNativeContext\n) => {\n    return class MediaStreamTrackAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamTrackAudioSourceNode<T> {\n        constructor(context: T, options: IMediaStreamTrackAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, <TAudioNodeRenderer<T>>null);\n        }\n    };\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport {\n    IAudioContext,\n    IAudioContextOptions,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode\n} from '../interfaces';\nimport { TAudioContextConstructorFactory, TAudioContextState, TNativeAudioContext, TNativeGainNode, TNativeOscillatorNode } from '../types';\n\nexport const createAudioContextConstructor: TAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class AudioContext extends baseAudioContextConstructor<IAudioContext> implements IAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public createMediaElementSource(mediaElement: HTMLMediaElement): IMediaElementAudioSourceNode<this> {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n\n        public createMediaStreamDestination(): IMediaStreamAudioDestinationNode<this> {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n\n        public createMediaStreamSource(mediaStream: MediaStream): IMediaStreamAudioSourceNode<this> {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n\n        public createMediaStreamTrackSource(mediaStreamTrack: MediaStreamTrack): IMediaStreamTrackAudioSourceNode<this> {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TGetUnrenderedAudioWorkletNodesFactory } from '../types';\n\nexport const createGetUnrenderedAudioWorkletNodes: TGetUnrenderedAudioWorkletNodesFactory = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n\n        return unrenderedAudioWorkletNodes;\n    };\n};\n","import { TAddUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createAddUnrenderedAudioWorkletNode: TAddUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TConnectMultipleOutputsFactory } from '../types';\n\nexport const createConnectMultipleOutputs: TConnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n","import { TDeleteUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createDeleteUnrenderedAudioWorkletNode: TDeleteUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n","import { TActiveInputConnection, TContext, TGetActiveAudioWorkletNodeInputsFactory, TNativeAudioWorkletNode } from '../types';\n\nexport const createGetActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFactory = (\n    activeAudioWorkletNodeInputsStore,\n    getValueForKey\n) => {\n    return <T extends TContext>(nativeAudioWorkletNode: TNativeAudioWorkletNode) =>\n        <Set<TActiveInputConnection<T>>[]>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { IAudioWorkletProcessor } from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeFakerFactoryFactory,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeConstantSourceNode,\n    TNativeGainNode\n} from '../types';\n\nexport const createNativeAudioWorkletNodeFakerFactory: TNativeAudioWorkletNodeFakerFactoryFactory = (\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters =\n            processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n\n        const messageChannel = new MessageChannel();\n        const gainNodes: TNativeGainNode[] = [];\n        const inputChannelSplitterNodes: TNativeChannelSplitterNode[] = [];\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(\n                createNativeGainNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                })\n            );\n            inputChannelSplitterNodes.push(\n                createNativeChannelSplitterNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: options.channelCount\n                })\n            );\n        }\n\n        const constantSourceNodes: TNativeConstantSourceNode[] = [];\n\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset:\n                        options.parameterData[name] !== undefined\n                            ? options.parameterData[name]\n                            : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(\n            nativeContext,\n            bufferSize,\n            numberOfInputChannels + numberOfParameters,\n            // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n            Math.max(1, numberOfOutputChannels)\n        );\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(\n                createNativeChannelMergerNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'speakers',\n                    numberOfInputs: outputChannelCount[i]\n                })\n            );\n        }\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n\n        const parameterMap = new ReadOnlyMap(\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                      const constantSourceNode = constantSourceNodes[index];\n\n                      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                      constantSourceNode.start(0);\n\n                      return <[string, TNativeAudioParam]>[name, constantSourceNode.offset];\n                  })\n        );\n\n        inputChannelMergerNode.connect(scriptProcessorNode);\n\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode(): TNativeAudioWorkletNode['channelCountMode'] {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation(): TNativeAudioWorkletNode['channelInterpretation'] {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n\n                channelInterpretation = value;\n            },\n            get context(): TNativeAudioWorkletNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return gainNodes;\n            },\n            get numberOfInputs(): number {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror(): TNativeAudioWorkletNode['onprocessorerror'] {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n\n                onprocessorerror = typeof value === 'function' ? value : null;\n\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters(): TNativeAudioWorkletNode['parameters'] {\n                return parameterMap;\n            },\n            get port(): TNativeAudioWorkletNode['port'] {\n                return messageChannel.port2;\n            },\n            addEventListener(...args: any[]): void {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        const patchedEventListeners: Map<EventListenerOrEventListenerObject, NonNullable<MessagePort['onmessage']>> = new Map();\n\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener =\n                        typeof args[1] === 'function'\n                            ? args[1]\n                            : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                        if (patchedEventListener !== undefined) {\n                            args[1] = <EventListenerOrEventListenerObject>patchedEventListener;\n                        } else {\n                            args[1] = (event: Event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                                    unpatchedEventListener(event)\n                                );\n                            };\n\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args: any[]): void => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n\n                        args[1] = patchedEventListener;\n                    }\n                }\n\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n\n        let onmessage: MessagePort['onmessage'] = null;\n\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n\n                onmessage = typeof value === 'function' ? value : null;\n\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n\n        processorConstructor.prototype.port = messageChannel.port1;\n\n        let audioWorkletProcessor: null | IAudioWorkletProcessor = null;\n\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(\n            nativeContext,\n            nativeAudioWorkletNodeFaker,\n            processorConstructor,\n            options\n        );\n\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters: { [name: string]: Float32Array } =\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.reduce(\n                      (prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n                      {}\n                  );\n\n        let isActive = true;\n\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n\n        const activeInputIndexes = new Map<number, number>();\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }: AudioProcessingEvent) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n\n                                return input;\n                            }\n\n                            const count = activeInputIndexes.get(index);\n\n                            if (count === undefined) {\n                                return [];\n                            }\n\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                } else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n\n                            return input;\n                        });\n\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                            nativeContext.currentTime + i / nativeContext.sampleRate,\n                            nativeContext.sampleRate,\n                            () => (<IAudioWorkletProcessor>audioWorkletProcessor).process(potentiallyEmptyInputs, outputs, parameters)\n                        );\n\n                        isActive = activeSourceFlag;\n\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    } catch (error) {\n                        isActive = false;\n\n                        nativeAudioWorkletNodeFaker.dispatchEvent(\n                            new ErrorEvent('processorerror', {\n                                colno: error.colno,\n                                filename: error.filename,\n                                lineno: error.lineno,\n                                message: error.message\n                            })\n                        );\n                    }\n\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        } else {\n                            disconnectFakeGraph();\n                        }\n\n                        break;\n                    }\n                }\n            }\n        };\n\n        let isConnected = false;\n\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n\n            isConnected = false;\n        };\n\n        connectFakeGraph();\n\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TNativeAudioWorkletNode, TNativeContext } from '../types';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\n\nexport const createAudioWorkletProcessor = (\n    nativeContext: TNativeContext,\n    nativeAudioWorkletNode: TNativeAudioWorkletNode,\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n\n    return audioWorkletProcessorPromise;\n};\n","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nimport { TNativeAudioWorkletNode, TNativeAudioWorkletNodeFactoryFactory, TNativeAudioWorkletNodeOptions } from '../types';\n\nexport const createNativeAudioWorkletNodeFactory: TNativeAudioWorkletNodeFactoryFactory = (\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(\n                    nativeContext,\n                    name,\n                    <TNativeAudioWorkletNodeOptions>options\n                );\n                const patchedEventListeners: Map<\n                    EventListenerOrEventListenerObject,\n                    NonNullable<TNativeAudioWorkletNode['onprocessorerror']>\n                > = new Map();\n\n                let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n\n                            onprocessorerror = typeof value === 'function' ? value : null;\n\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener =\n                                typeof args[1] === 'function'\n                                    ? args[1]\n                                    : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                } else {\n                                    args[1] = (event: Event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n\n                                            unpatchedEventListener(event);\n                                        } else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args: any[]): void => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n\n                                args[1] = patchedEventListener;\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n\n                return nativeAudioWorkletNode;\n            } catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n        }\n\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n\n        testClonabilityOfAudioWorkletNodeOptions(options);\n\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): void => {\n    const { port1 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n    }\n};\n","import { TGetBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetBackupOfflineAudioContext: TGetBackupOfflineAudioContextFactory = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n","import { TSetActiveAudioWorkletNodeInputsFactory } from '../types';\n\nexport const createSetActiveAudioWorkletNodeInputs: TSetActiveAudioWorkletNodeInputsFactory = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n","import { TSanitizeAudioWorkletNodeOptionsFunction } from '../types';\n\nexport const sanitizeAudioWorkletNodeOptions: TSanitizeAudioWorkletNodeOptionsFunction = (options) => {\n    return {\n        ...options,\n        outputChannelCount:\n            options.outputChannelCount !== undefined\n                ? options.outputChannelCount\n                : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                  [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n","import { TTestAudioWorkletNodeOptionsClonabilityFunction } from '../types';\n\nexport const testAudioWorkletNodeOptionsClonability: TTestAudioWorkletNodeOptionsClonabilityFunction = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n        port2.close();\n    }\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport { IAudioContextOptions, IMinimalAudioContext } from '../interfaces';\nimport {\n    TAudioContextState,\n    TMinimalAudioContextConstructorFactory,\n    TNativeAudioContext,\n    TNativeGainNode,\n    TNativeOscillatorNode\n} from '../types';\n\nexport const createMinimalAudioContextConstructor: TMinimalAudioContextConstructorFactory = (\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor<IMinimalAudioContext> implements IMinimalAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TCreateNativeOfflineAudioContextFactory } from '../types';\n\nexport const createCreateNativeOfflineAudioContext: TCreateNativeOfflineAudioContextFactory = (\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        } catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n\n            throw err;\n        }\n    };\n};\n","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TStartRenderingFactory } from '../types';\n\nexport const createStartRendering: TStartRenderingFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (destination, nativeOfflineAudioContext) =>\n        getAudioNodeRenderer(destination)\n            .render(destination, nativeOfflineAudioContext)\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n             * destination.\n             */\n            .then(() =>\n                Promise.all(\n                    Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) =>\n                        getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)\n                    )\n                )\n            )\n            .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n            .then((audioBuffer) => {\n                // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                if (typeof audioBuffer.copyFromChannel !== 'function') {\n                    wrapAudioBufferCopyChannelMethods(audioBuffer);\n                    wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                } else if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n};\n","import { IAudioContext, IMinimalAudioContext } from '../interfaces';\nimport { TIsAnyAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsAnyAudioContext: TIsAnyAudioContextFactory = (contextStore, isNativeAudioContext) => {\n    return (anything): anything is IAudioContext | IMinimalAudioContext | TNativeAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TIsAnyAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsAnyAudioNode: TIsAnyAudioNodeFactory = (audioNodeStore, isNativeAudioNode) => {\n    return (anything): anything is IAudioNode<any> | TNativeAudioNode => audioNodeStore.has(<any>anything) || isNativeAudioNode(anything);\n};\n","import { IAudioParam } from '../interfaces';\nimport { TIsAnyAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsAnyAudioParam: TIsAnyAudioParamFactory = (audioParamStore, isNativeAudioParam) => {\n    return (anything): anything is IAudioParam | TNativeAudioParam => audioParamStore.has(<any>anything) || isNativeAudioParam(anything);\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement: boolean, error: string): void {\n\tif (!statement) {\n\t\tthrow new Error(error);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value: number, gte: number, lte = Infinity): void {\n\tif (!(gte <= value && value <= lte)) {\n\t\tthrow new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context: import(\"../context/BaseContext\").BaseContext): void {\n\t// add a warning if the context is not started\n\tif (!context.isOffline && context.state !== \"running\") {\n\t\twarn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n\t}\n}\n\n/**\n * A basic logging interface\n */\ninterface Logger {\n\tlog: (args?: any[]) => void;\n\twarn: (args?: any[]) => void;\n}\n\n/**\n * The default logger is the console\n */\nlet defaultLogger: Logger = console;\n\n/**\n * Set the logging interface\n */\nexport function setLogger(logger: Logger): void {\n\tdefaultLogger = logger;\n}\n\n/**\n * Log anything\n */\nexport function log(...args: any[]): void {\n\tdefaultLogger.log(...args);\n}\n\n/**\n * Warn anything\n */\nexport function warn(...args: any[]): void {\n\tdefaultLogger.warn(...args);\n}\n","import { Note } from \"../type/Units\";\n\n/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg: any): arg is undefined {\n\treturn typeof arg === \"undefined\";\n}\n\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined<T>(arg: T | undefined): arg is T {\n\treturn !isUndef(arg);\n}\n\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg: any): arg is (a: any) => any {\n\treturn typeof arg === \"function\";\n}\n\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg: any): arg is number {\n\treturn (typeof arg === \"number\");\n}\n\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg: any): arg is object {\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg: any): arg is boolean {\n\treturn (typeof arg === \"boolean\");\n}\n\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg: any): arg is any[] {\n\treturn (Array.isArray(arg));\n}\n\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg: any): arg is string {\n\treturn (typeof arg === \"string\");\n}\n\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg: any): arg is Note {\n\treturn isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n","import {\n\tAudioContext as stdAudioContext,\n\tAudioWorkletNode as stdAudioWorkletNode,\n\tOfflineAudioContext as stdOfflineAudioContext\n} from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options?: AudioContextOptions): AudioContext {\n\treturn new stdAudioContext(options) as unknown as AudioContext;\n}\n\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels: number, length: number, sampleRate: number): OfflineAudioContext {\n\treturn new stdOfflineAudioContext(channels, length, sampleRate) as unknown as OfflineAudioContext;\n}\n\n/**\n * Either the online or offline audio context\n */\nexport type AnyAudioContext = AudioContext | OfflineAudioContext;\n\n/**\n * Interface for things that Tone.js adds to the window\n */\ninterface ToneWindow extends Window {\n\tTONE_SILENCE_LOGGING?: boolean;\n\tTONE_DEBUG_CLASS?: string;\n}\n\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow: ToneWindow | null = typeof self === \"object\" ? self : null;\n\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n\t(theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\n\nexport function createAudioWorkletNode(context: AnyAudioContext, name: string, options?: Partial<AudioWorkletNodeOptions>): AudioWorkletNode {\n\tassert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n\t// @ts-ignore\n\treturn new stdAudioWorkletNode(context, name, options);\n}\n\n/**\n * This promise resolves to a boolean which indicates if the \n * functionality is supported within the currently used browse. \n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Seconds } from \"../type/Units\";\n\nexport type TickerClockSource = \"worker\" | \"timeout\" | \"offline\";\n\n/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n\n\t/**\n\t * Either \"worker\" or \"timeout\" or \"offline\"\n\t */\n\tprivate _type: TickerClockSource;\n\n\t/**\n\t * The update interval of the worker\n\t */\n\tprivate _updateInterval: Seconds;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t */\n\tprivate _callback: () => void;\n\n\t/**\n\t * track the callback interval\n\t */\n\tprivate _timeout!: ReturnType<typeof setTimeout>;\n\n\t/**\n\t * private reference to the worker\n\t */\n\tprivate _worker!: Worker;\n\n\tconstructor(callback: () => void, type: TickerClockSource, updateInterval: Seconds) {\n\n\t\tthis._callback = callback;\n\t\tthis._type = type;\n\t\tthis._updateInterval = updateInterval;\n\n\t\t// create the clock source for the first time\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Generate a web worker\n\t */\n\tprivate _createWorker(): void {\n\n\t\tconst blob = new Blob([\n\t\t\t/* javascript */`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n\t\t], { type: \"text/javascript\" });\n\t\tconst blobUrl = URL.createObjectURL(blob);\n\t\tconst worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t}\n\n\t/**\n\t * Create a timeout loop\n\t */\n\tprivate _createTimeout(): void {\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}, this._updateInterval * 1000);\n\t}\n\n\t/**\n\t * Create the clock source.\n\t */\n\tprivate _createClock(): void {\n\t\tif (this._type === \"worker\") {\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e) {\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = \"timeout\";\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === \"timeout\") {\n\t\t\tthis._createTimeout();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up the current clock source\n\t */\n\tprivate _disposeClock(): void {\n\t\tif (this._timeout) {\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis._timeout = 0;\n\t\t}\n\t\tif (this._worker) {\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t}\n\t}\n\n\t/**\n\t * The rate in seconds the ticker will update\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._updateInterval = Math.max(interval, 128 / 44100);\n\t\tif (this._type === \"worker\") {\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t */\n\tget type(): TickerClockSource {\n\t\treturn this._type;\n\t}\n\tset type(type: TickerClockSource) {\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): void {\n\t\tthis._disposeClock();\n\t}\n}\n","import {\n\tisAnyAudioContext, isAnyAudioNode,\n\tisAnyAudioParam, isAnyOfflineAudioContext,\n} from \"standardized-audio-context\";\n\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg: any): arg is AudioParam {\n\treturn isAnyAudioParam(arg);\n}\n\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg: any): arg is AudioNode {\n\treturn isAnyAudioNode(arg);\n}\n\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg: any): arg is OfflineAudioContext {\n\treturn isAnyOfflineAudioContext(arg);\n}\n\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg: any): arg is AudioContext {\n\treturn isAnyAudioContext(arg);\n}\n\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg: any): arg is AudioBuffer {\n\treturn arg instanceof AudioBuffer;\n}\n","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n\ntype BaseToneOptions = import(\"../Tone\").BaseToneOptions;\n\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key: string, arg: any): boolean {\n\treturn key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\n/**\n * Recursively merge an object\n * @param target the object to merge into\n * @param sources the source objects to merge\n */\nexport function deepMerge<T>(target: T): T;\nexport function deepMerge<T, U>(target: T, source1: U): T & U;\nexport function deepMerge<T, U, V>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMerge<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\nexport function deepMerge(target: any, ...sources: any[]): any {\n\tif (!sources.length) {\n\t\treturn target; \n\t}\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (noCopy(key, source[key])) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t} else if (isObject(source[key])) {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tObject.assign(target, { [key]: {} }); \n\t\t\t\t}\n\t\t\t\tdeepMerge(target[key], source[key] as any);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] as any });\n\t\t\t}\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals<T>(arrayA: T[], arrayB: T[]): boolean {\n\treturn arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments<T extends object>(\n\tdefaults: T,\n\targsArray: IArguments,\n\tkeys: Array<keyof T> = [],\n\tobjKey?: keyof T,\n): T {\n\tconst opts: Partial<T> = {};\n\tconst args = Array.from(argsArray);\n\t// if the first argument is an object and has an object key\n\tif (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n\t\t// if it's not part of the defaults\n\t\tconst partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n\t\tif (!partOfDefaults) {\n\t\t\t// merge that key\n\t\t\tdeepMerge(opts, { [objKey]: args[0] });\n\t\t\t// remove the obj key from the keys\n\t\t\tkeys.splice(keys.indexOf(objKey), 1);\n\t\t\t// shift the first argument off\n\t\t\targs.shift();\n\t\t}\n\t}\n\tif (args.length === 1 && isObject(args[0])) {\n\t\tdeepMerge(opts, args[0]);\n\t} else {\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (isDefined(args[i])) {\n\t\t\t\topts[keys[i]] = args[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn deepMerge(defaults, opts);\n}\n\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance<T>(instance: T): BaseToneOptions {\n\ttype ToneClass = {\n\t\tconstructor: ToneClass;\n\t\tgetDefaults: () => BaseToneOptions;\n\t} & T;\n\n\treturn (instance as ToneClass).constructor.getDefaults();\n}\n\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg<T>(given: T, fallback: T): T {\n\tif (isUndef(given)) {\n\t\treturn fallback;\n\t} else {\n\t\treturn given;\n\t}\n}\n\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject<T extends object, O extends string[]>(obj: T, omit: O): Omit<T, keyof O> {\n\tomit.forEach(prop => {\n\t\tif (Reflect.has(obj, prop)) {\n\t\t\tdelete obj[prop];\n\t\t}\n\t});\n\treturn obj;\n}\n","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n\n//-------------------------------------\n// \tTONE\n//-------------------------------------\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseToneOptions { }\n\n/**\n * @class  Tone is the base class of all other classes.\n * @category Core\n * @constructor\n */\nexport abstract class Tone {\n\n\t/**\n\t * The version number semver\n\t */\n\tstatic version: string = version;\n\n\t/**\n\t * The name of the class\n\t */\n\tprotected abstract name: string;\n\n\t/**\n\t * Returns all of the default options belonging to the class.\n\t */\n\tstatic getDefaults(): BaseToneOptions {\n\t\treturn {};\n\t}\n\n\t//-------------------------------------\n\t// \tDEBUGGING\n\t//-------------------------------------\n\n\t/**\n\t * Set this debug flag to log all events that happen in this class.\n\t */\n\tdebug = false;\n\n\t/**\n\t * Prints the outputs to the console log for debugging purposes.\n\t * Prints the contents only if either the object has a property\n\t * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t * is set to the name of the class.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * // prints all logs originating from this oscillator\n\t * osc.debug = true;\n\t * // calls to start/stop will print in the console\n\t * osc.start();\n\t */\n\tprotected log(...args: any[]): void {\n\t\t// if the object is either set to debug = true\n\t\t// or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n\t\t\tlog(this, ...args);\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tDISPOSING\n\t//-------------------------------------\n\n\t/**\n\t * Indicates if the instance was disposed\n\t */\n\tprivate _wasDisposed = false;\n\n\t/**\n\t * disconnect and dispose.\n\t */\n\tdispose(): this {\n\t\tthis._wasDisposed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Indicates if the instance was disposed. 'Disposing' an\n\t * instance means that all of the Web Audio nodes that were\n\t * created for the instance are disconnected and freed for garbage collection.\n\t */\n\tget disposed(): boolean {\n\t\treturn this._wasDisposed;\n\t}\n\n\t/**\n\t * Convert the class to a string\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.toString());\n\t */\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n","/**\n * The threshold for correctness for operators. Less than one sample even \n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n\n/**\n * Test if A is greater than B\n */\nexport function GT(a: number, b: number): boolean {\n\treturn a > b + EPSILON;\n}\n\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a: number, b: number): boolean {\n\treturn GT(a, b) || EQ(a, b);\n}\n\n/**\n * Test if A is less than B\n */\nexport function LT(a: number, b: number): boolean {\n\treturn a + EPSILON < b;\n}\n\n/**\n * Test if A is less than B\n */\nexport function EQ(a: number, b: number): boolean {\n\treturn Math.abs(a - b) < EPSILON;\n}\n\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.max(Math.min(value, max), min);\n}\n","import { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n\ntype TimelineSearchParam = \"ticks\" | \"time\";\n\n/**\n * The options object for Timeline\n */\ninterface TimelineOptions {\n\tmemory: number;\n\tincreasing: boolean;\n}\n\n/**\n * An event must have a time number\n */\nexport interface TimelineEvent {\n\ttime: number;\n}\n\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline<GenericEvent extends TimelineEvent> extends Tone {\n\n\treadonly name: string = \"Timeline\";\n\n\t/**\n\t * The memory of the timeline, i.e.\n\t * how many events in the past it will retain\n\t */\n\tmemory: number;\n\n\t/**\n\t * The array of scheduled timeline events\n\t */\n\tprotected _timeline: GenericEvent[] = [];\n\n\t/**\n\t * If the time value must always be greater than or equal to the last \n\t * element on the list. \n\t */\n\tincreasing: boolean;\n\n\t/**\n\t * @param memory The number of previous events that are retained.\n\t */\n\tconstructor(memory?: number);\n\tconstructor(options?: Partial<TimelineOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n\n\t\tthis.memory = options.memory;\n\t\tthis.increasing = options.increasing;\n\t}\n\n\tstatic getDefaults(): TimelineOptions {\n\t\treturn {\n\t\t\tmemory: Infinity,\n\t\t\tincreasing: false,\n\t\t};\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t */\n\tget length(): number {\n\t\treturn this._timeline.length;\n\t}\n\n\t/**\n\t * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t * @param event  The event object to insert into the timeline.\n\t */\n\tadd(event: GenericEvent): this {\n\t\t// the event needs to have a time attribute\n\t\tassert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n\t\tevent.time = event.time.valueOf();\n\t\tif (this.increasing && this.length) {\n\t\t\tconst lastValue = this._timeline[this.length - 1] as GenericEvent;\n\t\t\tassert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\t\t\tthis._timeline.push(event);\n\t\t} else {\n\t\t\tconst index = this._search(event.time);\n\t\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t}\n\t\t// if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory) {\n\t\t\tconst diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  {Object}  event  The event object to remove from the list.\n\t * @returns {Timeline} this\n\t */\n\tremove(event: GenericEvent): this {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index !== -1) {\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the nearest event whose time is less than or equal to the given time.\n\t * @param  time  The time to query.\n\t */\n\tget(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index !== -1) {\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Return the first event in the timeline without removing it\n\t * @returns {Object} The first event object\n\t */\n\tpeek(): GenericEvent | undefined {\n\t\treturn this._timeline[0];\n\t}\n\n\t/**\n\t * Return the first event in the timeline and remove it\n\t */\n\tshift(): GenericEvent | undefined {\n\t\treturn this._timeline.shift();\n\t}\n\n\t/**\n\t * Get the event which is scheduled after the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetAfter(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index + 1 < this._timeline.length) {\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Get the event before the event at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetBefore(time: number): GenericEvent | null {\n\t\tconst len = this._timeline.length;\n\t\t// if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1].time < time) {\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tconst index = this._search(time);\n\t\tif (index - 1 >= 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel events at and after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tif (this._timeline.length > 1) {\n\t\t\tlet index = this._search(after);\n\t\t\tif (index >= 0) {\n\t\t\t\tif (EQ(this._timeline[index].time, after)) {\n\t\t\t\t\t// get the first item with that time\n\t\t\t\t\tfor (let i = index; i >= 0; i--) {\n\t\t\t\t\t\tif (EQ(this._timeline[i].time, after)) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1) {\n\t\t\t// the first item's time\n\t\t\tif (GTE(this._timeline[0].time, after)) {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events before or equal to the given time.\n\t * @param  time  The time to cancel before.\n\t */\n\tcancelBefore(time: number): this {\n\t\tconst index = this._search(time);\n\t\tif (index >= 0) {\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  event The event to find the previous one of\n\t * @return The event right before the given event\n\t */\n\tpreviousEvent(event: GenericEvent): GenericEvent | null {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index > 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Does a binary search on the timeline array and returns the\n\t * nearest event index whose time is after or equal to the given time.\n\t * If a time is searched before the first index in the timeline, -1 is returned.\n\t * If the time is after the end, the index of the last item is returned.\n\t */\n\tprotected _search(time: number, param: TimelineSearchParam = \"time\"): number {\n\t\tif (this._timeline.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet beginning = 0;\n\t\tconst len = this._timeline.length;\n\t\tlet end = len;\n\t\tif (len > 0 && this._timeline[len - 1][param] <= time) {\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end) {\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tconst event = this._timeline[midPoint];\n\t\t\tconst nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (EQ(event[param], time)) {\n\t\t\t\t// choose the last one that has the same time\n\t\t\t\tfor (let i = midPoint; i < this._timeline.length; i++) {\n\t\t\t\t\tconst testEvent = this._timeline[i];\n\t\t\t\t\tif (EQ(testEvent[param], time)) {\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n\t\t\t\treturn midPoint;\n\t\t\t} else if (GT(event[param], time)) {\n\t\t\t\t// search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t// search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Internal iterator. Applies extra safety checks for\n\t * removing items from the array.\n\t */\n\tprivate _iterate(\n\t\tcallback: (event: GenericEvent) => void,\n\t\tlowerBound = 0, upperBound = this._timeline.length - 1,\n\t): void {\n\t\tthis._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n\t}\n\n\t/**\n\t * Iterate over everything in the array\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: (event: GenericEvent) => void): this {\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or before the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBefore(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array after the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAfter(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array between the startTime and endTime.\n\t * The timerange is inclusive of the startTime, but exclusive of the endTime.\n\t * range = [startTime, endTime).\n\t * @param  startTime The time to check if items are before\n\t * @param  endTime The end of the test interval.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBetween(startTime: number, endTime: number, callback: (event: GenericEvent) => void): this {\n\t\tlet lowerBound = this._search(startTime);\n\t\tlet upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1) {\n\t\t\tif (this._timeline[lowerBound].time !== startTime) {\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t// exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime) {\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or after the given time. Similar to\n\t * forEachAfter, but includes the item(s) at the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tlet lowerBound = this._search(time);\n\t\t// work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at the given time\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n\t\t\tlet lowerBound = upperBound;\n\t\t\tfor (let i = upperBound; i >= 0; i--) {\n\t\t\t\tif (EQ(this._timeline[i].time, time)) {\n\t\t\t\t\tlowerBound = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iterate(event => {\n\t\t\t\tcallback(event);\n\t\t\t}, lowerBound, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._timeline = [];\n\t\treturn this;\n\t}\n}\n","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\ntype Context = import(\"./Context\").Context;\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb: (ctx: Context) => void): void {\n\tnotifyNewContext.push(cb);\n}\n\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyNewContext.forEach(cb => cb(ctx));\n}\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb: (ctx: Context) => void): void {\n\tnotifyCloseContext.push(cb);\n}\n\nexport function closeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyCloseContext.forEach(cb => cb(ctx));\n}\n","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n\nexport interface EmitterEventObject {\n\t[event: string]: Array<(...args: any[]) => void>;\n}\n\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter<EventType extends string = string> extends Tone {\n\n\treadonly name: string = \"Emitter\";\n\n\t/**\n\t * Private container for the events\n\t */\n\tprivate _events?: EmitterEventObject;\n\n\t/**\n\t * Bind a callback to a specific event.\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\ton(event: EventType, callback: (...args: any[]) => void): this {\n\t\t// split the event\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (!this._events.hasOwnProperty(eventName)) {\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a callback which is only invoked once\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\tonce(event: EventType, callback: (...args: any[]) => void): this {\n\t\tconst boundCallback = (...args: any[]) => {\n\t\t\t// invoke the callback\n\t\t\tcallback(...args);\n\t\t\t// remove the event\n\t\t\tthis.off(event, boundCallback);\n\t\t};\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove the event listener.\n\t * @param  event     The event to stop listening to.\n\t * @param  callback  The callback which was bound to the event with Emitter.on.\n\t *                   If no callback is given, all callbacks events are removed.\n\t */\n\toff(event: EventType, callback?: (...args: any[]) => void): this {\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tif (isUndef(callback)) {\n\t\t\t\t\tthis._events[event] = [];\n\t\t\t\t} else {\n\t\t\t\t\tconst eventList = this._events[event];\n\t\t\t\t\tfor (let i = eventList.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (eventList[i] === callback) {\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke all of the callbacks bound to the event\n\t * with any arguments passed in.\n\t * @param  event  The name of the event.\n\t * @param args The arguments to pass to the functions listening.\n\t */\n\temit(event, ...args: any[]): this {\n\t\tif (this._events) {\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tconst eventList = this._events[event].slice(0);\n\t\t\t\tfor (let i = 0, len = eventList.length; i < len; i++) {\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add Emitter functions (on/off/emit) to the object\n\t */\n\tstatic mixin(constr: any): void {\n\t\t// instance._events = {};\n\t\t[\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n\t\t\tconst property = Object.getOwnPropertyDescriptor(Emitter.prototype, name) as PropertyDescriptor;\n\t\t\tObject.defineProperty(constr.prototype, name, property);\n\t\t});\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events = undefined;\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Emitter } from \"../util/Emitter\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\n// these are either not used in Tone.js or deprecated and not implemented.\nexport type ExcludedFromBaseAudioContext =\n\t| \"onstatechange\"\n\t| \"addEventListener\"\n\t| \"removeEventListener\"\n\t| \"listener\"\n\t| \"dispatchEvent\"\n\t| \"audioWorklet\"\n\t| \"destination\"\n\t| \"createScriptProcessor\";\n\n// the subset of the BaseAudioContext which Tone.Context implements.\nexport type BaseAudioContextSubset = Omit<\nBaseAudioContext,\nExcludedFromBaseAudioContext\n>;\n\nexport type ContextLatencyHint = AudioContextLatencyCategory;\n\nexport abstract class BaseContext\n\textends Emitter<\"statechange\" | \"tick\">\n\timplements BaseAudioContextSubset {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tabstract createAnalyser(): AnalyserNode;\n\n\tabstract createOscillator(): OscillatorNode;\n\n\tabstract createBufferSource(): AudioBufferSourceNode;\n\n\tabstract createBiquadFilter(): BiquadFilterNode;\n\n\tabstract createBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer;\n\n\tabstract createChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode;\n\n\tabstract createChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode;\n\n\tabstract createConstantSource(): ConstantSourceNode;\n\n\tabstract createConvolver(): ConvolverNode;\n\n\tabstract createDelay(_maxDelayTime?: number | undefined): DelayNode;\n\n\tabstract createDynamicsCompressor(): DynamicsCompressorNode;\n\n\tabstract createGain(): GainNode;\n\n\tabstract createIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode;\n\n\tabstract createPanner(): PannerNode;\n\n\tabstract createPeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave;\n\n\tabstract createStereoPanner(): StereoPannerNode;\n\n\tabstract createWaveShaper(): WaveShaperNode;\n\n\tabstract createMediaStreamSource(\n\t\t_stream: MediaStream\n\t): MediaStreamAudioSourceNode;\n\n\tabstract createMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode;\n\n\tabstract createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n\n\tabstract decodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer>;\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tabstract createAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode;\n\n\tabstract get rawContext(): AnyAudioContext;\n\n\tabstract async addAudioWorkletModule(\n\t\t_url: string,\n\t\t_name: string\n\t): Promise<void>;\n\n\tabstract lookAhead: number;\n\n\tabstract latencyHint: ContextLatencyHint | Seconds;\n\n\tabstract resume(): Promise<void>;\n\n\tabstract setTimeout(\n\t\t_fn: (...args: any[]) => void,\n\t\t_timeout: Seconds\n\t): number;\n\n\tabstract clearTimeout(_id: number): this;\n\n\tabstract setInterval(\n\t\t_fn: (...args: any[]) => void,\n\t\t_interval: Seconds\n\t): number;\n\n\tabstract clearInterval(_id: number): this;\n\n\tabstract getConstant(_val: number): AudioBufferSourceNode;\n\n\tabstract get currentTime(): Seconds;\n\n\tabstract get state(): AudioContextState;\n\n\tabstract get sampleRate(): number;\n\n\tabstract get listener(): Listener;\n\n\tabstract get transport(): Transport;\n\n\tabstract get draw(): Draw;\n\n\tabstract get destination(): Destination;\n\n\tabstract now(): Seconds;\n\n\tabstract immediate(): Seconds;\n\n\t/*\n\t * This is a placeholder so that JSON.stringify does not throw an error\n\t * This matches what JSON.stringify(audioContext) returns on a native\n\t * audioContext instance.\n\t */\n\ttoJSON(): Record<string, any> {\n\t\treturn {};\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { Ticker, TickerClockSource } from \"../clock/Ticker\";\nimport { Seconds } from \"../type/Units\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport {\n\tAnyAudioContext,\n\tcreateAudioContext,\n\tcreateAudioWorkletNode,\n} from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext, ContextLatencyHint } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Destination = import(\"./Destination\").Destination;\ntype Listener = import(\"./Listener\").Listener;\ntype Draw = import(\"../util/Draw\").Draw;\n\nexport interface ContextOptions {\n\tclockSource: TickerClockSource;\n\tlatencyHint: ContextLatencyHint;\n\tlookAhead: Seconds;\n\tupdateInterval: Seconds;\n\tcontext: AnyAudioContext;\n}\n\nexport interface ContextTimeoutEvent {\n\tcallback: (...args: any[]) => void;\n\tid: number;\n\ttime: Seconds;\n}\n\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n\treadonly name: string = \"Context\";\n\n\t/**\n\t * The amount of time into the future events are scheduled. Giving Web Audio\n\t * a short amount of time into the future to schedule events can reduce clicks and\n\t * improve performance. This value can be set to 0 to get the lowest latency.\n\t */\n\tlookAhead: Seconds;\n\n\t/**\n\t * private reference to the BaseAudioContext\n\t */\n\tprotected readonly _context: AnyAudioContext;\n\n\t/**\n\t * A reliable callback method\n\t */\n\tprivate readonly _ticker: Ticker;\n\n\t/**\n\t * The default latency hint\n\t */\n\tprivate _latencyHint!: ContextLatencyHint | Seconds;\n\n\t/**\n\t * An object containing all of the constants AudioBufferSourceNodes\n\t */\n\tprivate _constants = new Map<number, AudioBufferSourceNode>();\n\n\t/**\n\t * All of the setTimeout events.\n\t */\n\tprivate _timeouts: Timeline<ContextTimeoutEvent> = new Timeline();\n\n\t/**\n\t * The timeout id counter\n\t */\n\tprivate _timeoutIds = 0;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _transport!: Transport;\n\n\t/**\n\t * A reference the Listener singleton belonging to this context\n\t */\n\tprivate _listener!: Listener;\n\n\t/**\n\t * A reference the Destination singleton belonging to this context\n\t */\n\tprivate _destination!: Destination;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _draw!: Draw;\n\n\t/**\n\t * Private indicator if the context has been initialized\n\t */\n\tprivate _initialized = false;\n\n\t/**\n\t * Indicates if the context is an OfflineAudioContext or an AudioContext\n\t */\n\treadonly isOffline: boolean = false;\n\n\tconstructor(context?: AnyAudioContext);\n\tconstructor(options?: Partial<ContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Context.getDefaults(), arguments, [\n\t\t\t\"context\",\n\t\t]);\n\n\t\tif (options.context) {\n\t\t\tthis._context = options.context;\n\t\t} else {\n\t\t\tthis._context = createAudioContext({\n\t\t\t\tlatencyHint: options.latencyHint,\n\t\t\t});\n\t\t}\n\n\t\tthis._ticker = new Ticker(\n\t\t\tthis.emit.bind(this, \"tick\"),\n\t\t\toptions.clockSource,\n\t\t\toptions.updateInterval\n\t\t);\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t// fwd events from the context\n\t\tthis._context.onstatechange = () => {\n\t\t\tthis.emit(\"statechange\", this.state);\n\t\t};\n\n\t\tthis._setLatencyHint(options.latencyHint);\n\t\tthis.lookAhead = options.lookAhead;\n\t}\n\n\tstatic getDefaults(): ContextOptions {\n\t\treturn {\n\t\t\tclockSource: \"worker\",\n\t\t\tlatencyHint: \"interactive\",\n\t\t\tlookAhead: 0.1,\n\t\t\tupdateInterval: 0.05,\n\t\t} as ContextOptions;\n\t}\n\n\t/**\n\t * Finish setting up the context. **You usually do not need to do this manually.**\n\t */\n\tprivate initialize(): this {\n\t\tif (!this._initialized) {\n\t\t\t// add any additional modules\n\t\t\tinitializeContext(this);\n\t\t\tthis._initialized = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn this._context.createAnalyser();\n\t}\n\tcreateOscillator(): OscillatorNode {\n\t\treturn this._context.createOscillator();\n\t}\n\tcreateBufferSource(): AudioBufferSourceNode {\n\t\treturn this._context.createBufferSource();\n\t}\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn this._context.createBiquadFilter();\n\t}\n\tcreateBuffer(\n\t\tnumberOfChannels: number,\n\t\tlength: number,\n\t\tsampleRate: number\n\t): AudioBuffer {\n\t\treturn this._context.createBuffer(numberOfChannels, length, sampleRate);\n\t}\n\tcreateChannelMerger(\n\t\tnumberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn this._context.createChannelMerger(numberOfInputs);\n\t}\n\tcreateChannelSplitter(\n\t\tnumberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn this._context.createChannelSplitter(numberOfOutputs);\n\t}\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn this._context.createConstantSource();\n\t}\n\tcreateConvolver(): ConvolverNode {\n\t\treturn this._context.createConvolver();\n\t}\n\tcreateDelay(maxDelayTime?: number | undefined): DelayNode {\n\t\treturn this._context.createDelay(maxDelayTime);\n\t}\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn this._context.createDynamicsCompressor();\n\t}\n\tcreateGain(): GainNode {\n\t\treturn this._context.createGain();\n\t}\n\tcreateIIRFilter(\n\t\tfeedForward: number[] | Float32Array,\n\t\tfeedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\t// @ts-ignore\n\t\treturn this._context.createIIRFilter(feedForward, feedback);\n\t}\n\tcreatePanner(): PannerNode {\n\t\treturn this._context.createPanner();\n\t}\n\tcreatePeriodicWave(\n\t\treal: number[] | Float32Array,\n\t\timag: number[] | Float32Array,\n\t\tconstraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn this._context.createPeriodicWave(real, imag, constraints);\n\t}\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn this._context.createStereoPanner();\n\t}\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn this._context.createWaveShaper();\n\t}\n\tcreateMediaStreamSource(stream: MediaStream): MediaStreamAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamSource(stream);\n\t}\n\tcreateMediaElementSource(\n\t\telement: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaElementSource(element);\n\t}\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamDestination();\n\t}\n\tdecodeAudioData(audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn this._context.decodeAudioData(audioData);\n\t}\n\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget state(): AudioContextState {\n\t\treturn this._context.state;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget sampleRate(): number {\n\t\treturn this._context.sampleRate;\n\t}\n\n\t/**\n\t * The listener\n\t */\n\tget listener(): Listener {\n\t\tthis.initialize();\n\t\treturn this._listener;\n\t}\n\tset listener(l) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The listener cannot be set after initialization.\"\n\t\t);\n\t\tthis._listener = l;\n\t}\n\n\t/**\n\t * There is only one Transport per Context. It is created on initialization.\n\t */\n\tget transport(): Transport {\n\t\tthis.initialize();\n\t\treturn this._transport;\n\t}\n\tset transport(t: Transport) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The transport cannot be set after initialization.\"\n\t\t);\n\t\tthis._transport = t;\n\t}\n\n\t/**\n\t * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n\t */\n\tget draw(): Draw {\n\t\tthis.initialize();\n\t\treturn this._draw;\n\t}\n\tset draw(d) {\n\t\tassert(!this._initialized, \"Draw cannot be set after initialization.\");\n\t\tthis._draw = d;\n\t}\n\n\t/**\n\t * A reference to the Context's destination node.\n\t */\n\tget destination(): Destination {\n\t\tthis.initialize();\n\t\treturn this._destination;\n\t}\n\tset destination(d: Destination) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The destination cannot be set after initialization.\"\n\t\t);\n\t\tthis._destination = d;\n\t}\n\n\t//--------------------------------------------\n\t// AUDIO WORKLET\n\t//--------------------------------------------\n\n\t/**\n\t * Maps a module name to promise of the addModule method\n\t */\n\tprivate _workletModules: Map<string, Promise<void>> = new Map();\n\n\t/**\n\t * Create an audio worklet node from a name and options. The module\n\t * must first be loaded using [[addAudioWorkletModule]].\n\t */\n\tcreateAudioWorkletNode(\n\t\tname: string,\n\t\toptions?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn createAudioWorkletNode(this.rawContext, name, options);\n\t}\n\n\t/**\n\t * Add an AudioWorkletProcessor module\n\t * @param url The url of the module\n\t * @param name The name of the module\n\t */\n\tasync addAudioWorkletModule(url: string, name: string): Promise<void> {\n\t\tassert(\n\t\t\tisDefined(this.rawContext.audioWorklet),\n\t\t\t\"AudioWorkletNode is only available in a secure context (https or localhost)\"\n\t\t);\n\t\tif (!this._workletModules.has(name)) {\n\t\t\tthis._workletModules.set(\n\t\t\t\tname,\n\t\t\t\tthis.rawContext.audioWorklet.addModule(url)\n\t\t\t);\n\t\t}\n\t\tawait this._workletModules.get(name);\n\t}\n\n\t/**\n\t * Returns a promise which resolves when all of the worklets have been loaded on this context\n\t */\n\tprotected async workletsAreReady(): Promise<void> {\n\t\tconst promises: Promise<void>[] = [];\n\t\tthis._workletModules.forEach((promise) => promises.push(promise));\n\t\tawait Promise.all(promises);\n\t}\n\n\t//---------------------------\n\t// TICKER\n\t//---------------------------\n\n\t/**\n\t * How often the interval callback is invoked.\n\t * This number corresponds to how responsive the scheduling\n\t * can be. context.updateInterval + context.lookAhead gives you the\n\t * total latency between scheduling an event and hearing it.\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._ticker.updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._ticker.updateInterval = interval;\n\t}\n\n\t/**\n\t * What the source of the clock is, either \"worker\" (default),\n\t * \"timeout\", or \"offline\" (none).\n\t */\n\tget clockSource(): TickerClockSource {\n\t\treturn this._ticker.type;\n\t}\n\tset clockSource(type: TickerClockSource) {\n\t\tthis._ticker.type = type;\n\t}\n\n\t/**\n\t * The type of playback, which affects tradeoffs between audio\n\t * output latency and responsiveness.\n\t * In addition to setting the value in seconds, the latencyHint also\n\t * accepts the strings \"interactive\" (prioritizes low latency),\n\t * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t * latency and performance).\n\t * @example\n\t * // prioritize sustained playback\n\t * const context = new Tone.Context({ latencyHint: \"playback\" });\n\t * // set this context as the global Context\n\t * Tone.setContext(context);\n\t * // the global context is gettable with Tone.getContext()\n\t * console.log(Tone.getContext().latencyHint);\n\t */\n\tget latencyHint(): ContextLatencyHint | Seconds {\n\t\treturn this._latencyHint;\n\t}\n\n\t/**\n\t * Update the lookAhead and updateInterval based on the latencyHint\n\t */\n\tprivate _setLatencyHint(hint: ContextLatencyHint | Seconds): void {\n\t\tlet lookAheadValue = 0;\n\t\tthis._latencyHint = hint;\n\t\tif (isString(hint)) {\n\t\t\tswitch (hint) {\n\t\t\t\tcase \"interactive\":\n\t\t\t\t\tlookAheadValue = 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\":\n\t\t\t\t\tlookAheadValue = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\":\n\t\t\t\t\tlookAheadValue = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAheadValue;\n\t\tthis.updateInterval = lookAheadValue / 2;\n\t}\n\n\t/**\n\t * The unwrapped AudioContext or OfflineAudioContext\n\t */\n\tget rawContext(): AnyAudioContext {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * The current audio context time plus a short [[lookAhead]].\n\t */\n\tnow(): Seconds {\n\t\treturn this._context.currentTime + this.lookAhead;\n\t}\n\n\t/**\n\t * The current audio context time without the [[lookAhead]].\n\t * In most cases it is better to use [[now]] instead of [[immediate]] since\n\t * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n\t * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n\t * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n\t */\n\timmediate(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\n\t/**\n\t * Starts the audio context from a suspended state. This is required\n\t * to initially start the AudioContext. See [[Tone.start]]\n\t */\n\tresume(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\t/**\n\t * Close the context. Once closed, the context can no longer be used and\n\t * any AudioNodes created from the context will be silent.\n\t */\n\tasync close(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\tawait this._context.close();\n\t\t}\n\t\tif (this._initialized) {\n\t\t\tcloseContext(this);\n\t\t}\n\t}\n\n\t/**\n\t * **Internal** Generate a looped buffer at some constant value.\n\t */\n\tgetConstant(val: number): AudioBufferSourceNode {\n\t\tif (this._constants.has(val)) {\n\t\t\treturn this._constants.get(val) as AudioBufferSourceNode;\n\t\t} else {\n\t\t\tconst buffer = this._context.createBuffer(\n\t\t\t\t1,\n\t\t\t\t128,\n\t\t\t\tthis._context.sampleRate\n\t\t\t);\n\t\t\tconst arr = buffer.getChannelData(0);\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tconst constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants.set(val, constant);\n\t\t\treturn constant;\n\t\t}\n\t}\n\n\t/**\n\t * Clean up. Also closes the audio context.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._ticker.dispose();\n\t\tthis._timeouts.dispose();\n\t\tObject.keys(this._constants).map((val) =>\n\t\t\tthis._constants[val].disconnect()\n\t\t);\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// TIMEOUTS\n\t//---------------------------\n\n\t/**\n\t * The private loop which keeps track of the context scheduled timeouts\n\t * Is invoked from the clock source\n\t */\n\tprivate _timeoutLoop(): void {\n\t\tconst now = this.now();\n\t\tlet firstEvent = this._timeouts.peek();\n\t\twhile (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n\t\t\t// invoke the callback\n\t\t\tfirstEvent.callback();\n\t\t\t// shift the first event off\n\t\t\tthis._timeouts.shift();\n\t\t\t// get the next one\n\t\t\tfirstEvent = this._timeouts.peek();\n\t\t}\n\t}\n\n\t/**\n\t * A setTimeout which is guaranteed by the clock source.\n\t * Also runs in the offline context.\n\t * @param  fn       The callback to invoke\n\t * @param  timeout  The timeout in seconds\n\t * @returns ID to use when invoking Context.clearTimeout\n\t */\n\tsetTimeout(fn: (...args: any[]) => void, timeout: Seconds): number {\n\t\tthis._timeoutIds++;\n\t\tconst now = this.now();\n\t\tthis._timeouts.add({\n\t\t\tcallback: fn,\n\t\t\tid: this._timeoutIds,\n\t\t\ttime: now + timeout,\n\t\t});\n\t\treturn this._timeoutIds;\n\t}\n\n\t/**\n\t * Clears a previously scheduled timeout with Tone.context.setTimeout\n\t * @param  id  The ID returned from setTimeout\n\t */\n\tclearTimeout(id: number): this {\n\t\tthis._timeouts.forEach((event) => {\n\t\t\tif (event.id === id) {\n\t\t\t\tthis._timeouts.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clear the function scheduled by [[setInterval]]\n\t */\n\tclearInterval(id: number): this {\n\t\treturn this.clearTimeout(id);\n\t}\n\n\t/**\n\t * Adds a repeating event to the context's callback clock\n\t */\n\tsetInterval(fn: (...args: any[]) => void, interval: Seconds): number {\n\t\tconst id = ++this._timeoutIds;\n\t\tconst intervalFn = () => {\n\t\t\tconst now = this.now();\n\t\t\tthis._timeouts.add({\n\t\t\t\tcallback: () => {\n\t\t\t\t\t// invoke the callback\n\t\t\t\t\tfn();\n\t\t\t\t\t// invoke the event to repeat it\n\t\t\t\t\tintervalFn();\n\t\t\t\t},\n\t\t\t\tid,\n\t\t\t\ttime: now + interval,\n\t\t\t});\n\t\t};\n\t\t// kick it off\n\t\tintervalFn();\n\t\treturn id;\n\t}\n}\n","import { BaseContext } from \"./BaseContext\";\nimport { Seconds } from \"../type/Units\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\nexport class DummyContext extends BaseContext {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn {} as AnalyserNode;\n\t}\n\n\tcreateOscillator(): OscillatorNode {\n\t\treturn {} as OscillatorNode;\n\t}\n\n\tcreateBufferSource() {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn {} as BiquadFilterNode;\n\t}\n\n\tcreateBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer {\n\t\treturn {} as AudioBuffer;\n\t}\n\n\tcreateChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn {} as ChannelMergerNode;\n\t}\n\n\tcreateChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn {} as ChannelSplitterNode;\n\t}\n\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn {} as ConstantSourceNode;\n\t}\n\n\tcreateConvolver(): ConvolverNode {\n\t\treturn {} as ConvolverNode;\n\t}\n\n\tcreateDelay(_maxDelayTime?: number | undefined): DelayNode {\n\t\treturn {} as DelayNode;\n\t}\n\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn {} as DynamicsCompressorNode;\n\t}\n\n\tcreateGain(): GainNode {\n\t\treturn {} as GainNode;\n\t}\n\n\tcreateIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\treturn {} as IIRFilterNode;\n\t}\n\n\tcreatePanner(): PannerNode {\n\t\treturn {} as PannerNode;\n\t}\n\n\tcreatePeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn {} as PeriodicWave;\n\t}\n\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn {} as StereoPannerNode;\n\t}\n\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn {} as WaveShaperNode;\n\t}\n\n\tcreateMediaStreamSource(_stream: MediaStream): MediaStreamAudioSourceNode {\n\t\treturn {} as MediaStreamAudioSourceNode;\n\t}\n\n\tcreateMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\treturn {} as MediaElementAudioSourceNode;\n\t}\n\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\treturn {} as MediaStreamAudioDestinationNode;\n\t}\n\n\tdecodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn Promise.resolve({} as AudioBuffer);\n\t}\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn {} as AudioWorkletNode;\n\t}\n\n\tget rawContext(): AnyAudioContext {\n\t\treturn {} as AnyAudioContext;\n\t}\n\n\tasync addAudioWorkletModule(_url: string, _name: string): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tlookAhead = 0;\n\n\tlatencyHint = 0;\n\n\tresume(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tsetTimeout(_fn: (...args: any[]) => void, _timeout: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearTimeout(_id: number): this {\n\t\treturn this;\n\t}\n\n\tsetInterval(_fn: (...args: any[]) => void, _interval: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearInterval(_id: number): this {\n\t\treturn this;\n\t}\n\n\tgetConstant(_val: number): AudioBufferSourceNode {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tget currentTime(): Seconds {\n\t\treturn 0;\n\t}\n\n\tget state(): AudioContextState {\n\t\treturn {} as AudioContextState;\n\t}\n\n\tget sampleRate(): number {\n\t\treturn 0;\n\t}\n\n\tget listener(): Listener {\n\t\treturn {} as Listener;\n\t}\n\n\tget transport(): Transport {\n\t\treturn {} as Transport;\n\t}\n\n\tget draw(): Draw {\n\t\treturn {} as Draw;\n\t}\n\tset draw(_d) {}\n\n\tget destination(): Destination {\n\t\treturn {} as Destination;\n\t}\n\tset destination(_d: Destination) {}\n\n\tnow() {\n\t\treturn 0;\n\t}\n\n\timmediate() {\n\t\treturn 0;\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { isArray } from \"./TypeCheck\";\n\n// return an interface which excludes certain keys\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => readOnly(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\tenumerable: true,\n\t\t\twritable: false,\n\t\t});\n\t}\n}\n\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => writable(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\twritable: true,\n\t\t});\n\t}\n}\n\nexport const noOp: (...args: any[]) => any = () => {\n\t// no operation here!\n};\n\n/**\n * Recursive Partial taken from here: https://stackoverflow.com/a/51365037\n */\nexport type RecursivePartial<T> = {\n\t[P in keyof T]?:\n\tT[P] extends Array<infer U> ? Array<RecursivePartial<U>> :\n\t\tT[P] extends object ? RecursivePartial<T[P]> :\n\t\t\tT[P];\n};\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { Samples, Seconds } from \"../type/Units\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n\ninterface ToneAudioBufferOptions {\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n\treverse: boolean;\n\tonload: (buffer?: ToneAudioBuffer) => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffer\";\n\n\t/**\n\t * stores the loaded AudioBuffer\n\t */\n\tprivate _buffer?: AudioBuffer;\n\n\t/**\n\t * indicates if the buffer should be reversed or not\n\t */\n\tprivate _reversed!: boolean;\n\n\t/**\n\t * Callback when the buffer is loaded.\n\t */\n\tonload: (buffer: ToneAudioBuffer) => void = noOp;\n\n\t/**\n\t *\n\t * @param url The url to load, or the audio buffer to set.\n\t * @param onload A callback which is invoked after the buffer is loaded.\n\t *                           It's recommended to use `ToneAudioBuffer.on('load', callback)` instead\n\t *                           since it will give you a callback when _all_ buffers are loaded.\n\t * @param onerror The callback to invoke if there is an error\n\t */\n\tconstructor(\n\t\turl?: string | ToneAudioBuffer | AudioBuffer,\n\t\tonload?: (buffer: ToneAudioBuffer) => void,\n\t\tonerror?: (error: Error) => void,\n\t);\n\tconstructor(options?: Partial<ToneAudioBufferOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tconst options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n\n\t\tthis.reverse = options.reverse;\n\t\tthis.onload = options.onload;\n\n\t\tif (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n\t\t\tthis.set(options.url);\n\t\t} else if (isString(options.url)) {\n\t\t\t// initiate the download\n\t\t\tthis.load(options.url).catch(options.onerror);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneAudioBufferOptions {\n\t\treturn {\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\treverse: false,\n\t\t};\n\t}\n\n\t/**\n\t * The sample rate of the AudioBuffer\n\t */\n\tget sampleRate(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.sampleRate;\n\t\t} else {\n\t\t\treturn getContext().sampleRate;\n\t\t}\n\t}\n\n\t/**\n\t * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n\t */\n\tset(buffer: AudioBuffer | ToneAudioBuffer): this {\n\t\tif (buffer instanceof ToneAudioBuffer) {\n\t\t\t// if it's loaded, set it\n\t\t\tif (buffer.loaded) {\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t// otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = () => {\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\t// reverse it initially\n\t\tif (this._reversed) {\n\t\t\tthis._reverse();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The audio buffer stored in the object.\n\t */\n\tget(): AudioBuffer | undefined {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n\t * Invokes the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t * @returns A Promise which resolves with this ToneAudioBuffer\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tconst doneLoading: Promise<void> = ToneAudioBuffer.load(url).then(audioBuffer => {\n\t\t\tthis.set(audioBuffer);\n\t\t\t// invoke the onload method\n\t\t\tthis.onload(this);\n\t\t});\n\t\tToneAudioBuffer.downloads.push(doneLoading);\n\t\ttry {\n\t\t\tawait doneLoading;\n\t\t} finally {\n\t\t\t// remove the downloaded file\n\t\t\tconst index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n\t\t\tToneAudioBuffer.downloads.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the audio buffer from the array.\n\t * To create a multichannel AudioBuffer, pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t */\n\tfromArray(array: Float32Array | Float32Array[]): this {\n\t\tconst isMultidimensional = isArray(array) && array[0].length > 0;\n\t\tconst channels = isMultidimensional ? array.length : 1;\n\t\tconst len = isMultidimensional ? (array[0] as Float32Array).length : array.length;\n\t\tconst context = getContext();\n\t\tconst buffer = context.createBuffer(channels, len, context.sampleRate);\n\t\tconst multiChannelArray: Float32Array[] = !isMultidimensional && channels === 1 ?\n\t\t\t[array as Float32Array] : array as Float32Array[];\n\n\t\tfor (let c = 0; c < channels; c++) {\n\t\t\tbuffer.copyToChannel(multiChannelArray[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sums multiple channels into 1 channel\n\t * @param chanNum Optionally only copy a single channel from the array.\n\t */\n\ttoMono(chanNum?: number): this {\n\t\tif (isNumber(chanNum)) {\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tlet outputArray = new Float32Array(this.length as number);\n\t\t\tconst numChannels = this.numberOfChannels;\n\t\t\tfor (let channel = 0; channel < numChannels; channel++) {\n\t\t\t\tconst channelArray = this.toArray(channel) as Float32Array;\n\t\t\t\tfor (let i = 0; i < channelArray.length; i++) {\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// divide by the number of channels\n\t\t\toutputArray = outputArray.map(sample => sample / numChannels);\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * Float32Array, and multichannel buffers will return multidimensional arrays.\n\t * @param channel Optionally only copy a single channel from the array.\n\t */\n\ttoArray(channel?: number): Float32Array | Float32Array[] {\n\t\tif (isNumber(channel)) {\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1) {\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tconst ret: Float32Array[] = [];\n\t\t\tfor (let c = 0; c < this.numberOfChannels; c++) {\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Float32Array representing the PCM audio data for the specific channel.\n\t * @param  channel  The channel number to return\n\t * @return The audio as a TypedArray\n\t */\n\tgetChannelData(channel: number): Float32Array {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.getChannelData(channel);\n\t\t} else {\n\t\t\treturn new Float32Array(0);\n\t\t}\n\t}\n\n\t/**\n\t * Cut a subsection of the array and return a buffer of the\n\t * subsection. Does not modify the original buffer\n\t * @param start The time to start the slice\n\t * @param end The end time to slice. If none is given will default to the end of the buffer\n\t */\n\tslice(start: Seconds, end: Seconds = this.duration): ToneAudioBuffer {\n\t\tconst startSamples = Math.floor(start * this.sampleRate);\n\t\tconst endSamples = Math.floor(end * this.sampleRate);\n\t\tassert(startSamples < endSamples, \"The start time must be less than the end time\");\n\t\tconst length = endSamples - startSamples;\n\t\tconst retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n\t\tfor (let channel = 0; channel < this.numberOfChannels; channel++) {\n\t\t\tretBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n\t\t}\n\t\treturn new ToneAudioBuffer(retBuffer);\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tprivate _reverse(): this {\n\t\tif (this.loaded) {\n\t\t\tfor (let i = 0; i < this.numberOfChannels; i++) {\n\t\t\t\tthis.getChannelData(i).reverse();\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffer is loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this.length > 0;\n\t}\n\n\t/**\n\t * The duration of the buffer in seconds.\n\t */\n\tget duration(): Seconds {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The length of the buffer in samples\n\t */\n\tget length(): Samples {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n\t */\n\tget numberOfChannels(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tget reverse(): boolean {\n\t\treturn this._reversed;\n\t}\n\tset reverse(rev: boolean) {\n\t\tif (this._reversed !== rev) {\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// STATIC METHODS\n\t//-------------------------------------\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tstatic baseUrl = \"\";\n\n\t/**\n\t * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n\t * pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t * @return A ToneAudioBuffer created from the array\n\t */\n\tstatic fromArray(array: Float32Array | Float32Array[]): ToneAudioBuffer {\n\t\treturn (new ToneAudioBuffer()).fromArray(array);\n\t}\n\n\t/**\n\t * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n\t * @param  url The url to load.\n\t * @return A promise which resolves to a ToneAudioBuffer\n\t */\n\tstatic async fromUrl(url: string): Promise<ToneAudioBuffer> {\n\t\tconst buffer = new ToneAudioBuffer();\n\t\treturn await buffer.load(url);\n\t}\n\n\t/**\n\t * All of the downloads\n\t */\n\tstatic downloads: Array<Promise<void>> = [];\n\n\t/**\n\t * Loads a url using fetch and returns the AudioBuffer.\n\t */\n\tstatic async load(url: string): Promise<AudioBuffer> {\n\n\t\t// test if the url contains multiple extensions\n\t\tconst matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n\t\tif (matches) {\n\t\t\tconst extensions = matches[1].split(\"|\");\n\t\t\tlet extension = extensions[0];\n\t\t\tfor (const ext of extensions) {\n\t\t\t\tif (ToneAudioBuffer.supportsType(ext)) {\n\t\t\t\t\textension = ext;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\t// make sure there is a slash between the baseUrl and the url\n\t\tconst baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n\t\tconst response = await fetch(baseUrl + url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`could not load url: ${url}`);\n\t\t}\n\t\tconst arrayBuffer = await response.arrayBuffer();\n\n\t\tconst audioBuffer = await getContext().decodeAudioData(arrayBuffer);\n\n\t\treturn audioBuffer;\n\t}\n\n\t/**\n\t * Checks a url's extension to see if the current browser can play that file type.\n\t * @param url The url/extension to test\n\t * @return If the file extension can be played\n\t * @static\n\t * @example\n\t * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n\t * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n\t */\n\tstatic supportsType(url: string): boolean {\n\t\tconst extensions = url.split(\".\");\n\t\tconst extension = extensions[extensions.length - 1];\n\t\tconst response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n\t\treturn response !== \"\";\n\t}\n\n\t/**\n\t * Returns a Promise which resolves when all of the buffers have loaded\n\t */\n\tstatic async loaded(): Promise<void> {\n\t\t// this makes sure that the function is always async\n\t\tawait Promise.resolve();\n\t\twhile (ToneAudioBuffer.downloads.length) {\n\t\t\tawait ToneAudioBuffer.downloads[0];\n\t\t}\n\t}\n}\n","import { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { Seconds } from \"../type/Units\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n\n\treadonly name: string = \"OfflineContext\";\n\n\t/**\n\t * A private reference to the duration\n\t */\n\tprivate readonly _duration: Seconds;\n\n\t/**\n\t * An artificial clock source\n\t */\n\tprivate _currentTime: Seconds = 0;\n\n\t/**\n\t * Private reference to the OfflineAudioContext.\n\t */\n\tprotected _context!: OfflineAudioContext;\n\n\treadonly isOffline: boolean = true;\n\n\t/**\n\t * @param  channels  The number of channels to render\n\t * @param  duration  The duration to render in seconds\n\t * @param sampleRate the sample rate to render at\n\t */\n\tconstructor(\n\t\tchannels: number,\n\t\tduration: Seconds, \n\t\tsampleRate: number,\n\t);\n\tconstructor(context: OfflineAudioContext);\n\tconstructor() {\n\n\t\tsuper({\n\t\t\tclockSource: \"offline\",\n\t\t\tcontext: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\targuments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n\t\t\tlookAhead: 0,\n\t\t\tupdateInterval: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\t128 / arguments[0].sampleRate : 128 / arguments[2],\n\t\t});\n\n\t\tthis._duration = isOfflineAudioContext(arguments[0]) ?\n\t\t\targuments[0].length / arguments[0].sampleRate : arguments[1];\n\t}\n\n\t/**\n\t * Override the now method to point to the internal clock time\n\t */\n\tnow(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Same as this.now()\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Render just the clock portion of the audio context.\n\t */\n\tprivate async _renderClock(asynchronous: boolean): Promise<void> {\n\t\tlet index = 0;\n\t\twhile (this._duration - this._currentTime >= 0) {\n\n\t\t\t// invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\n\t\t\t// increment the clock in block-sized chunks\n\t\t\tthis._currentTime += 128 / this.sampleRate;\n\n\t\t\t// yield once a second of audio\n\t\t\tindex++;\n\t\t\tconst yieldEvery = Math.floor(this.sampleRate / 128);\n\t\t\tif (asynchronous && index % yieldEvery === 0) {\n\t\t\t\tawait new Promise(done => setTimeout(done, 1));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render the output of the OfflineContext\n\t * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n\t */\n\tasync render(asynchronous = true): Promise<ToneAudioBuffer> {\n\t\tawait this.workletsAreReady();\n\t\tawait this._renderClock(asynchronous);\n\t\tconst buffer = await this._context.startRendering();\n\t\treturn new ToneAudioBuffer(buffer);\n\t}\n\n\t/**\n\t * Close the context\n\t */\n\tclose(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n","import { version } from \"../version\";\nimport { AnyAudioContext, hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { BaseContext } from \"./context/BaseContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext: BaseContext = dummyContext;\n\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext(): BaseContext {\n\tif (globalContext === dummyContext && hasAudioContext) {\n\t\tsetContext(new Context());\n\t}\n\treturn globalContext;\n}\n\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context: BaseContext | AnyAudioContext): void {\n\tif (isAudioContext(context)) {\n\t\tglobalContext = new Context(context);\n\t} else if (isOfflineAudioContext(context)) {\n\t\tglobalContext = new OfflineContext(context);\n\t} else {\n\t\tglobalContext = context;\n\t}\n}\n\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start(): Promise<void> {\n\treturn globalContext.resume();\n}\n\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n\tlet prefix = \"v\";\n\tif (version === \"dev\") {\n\t\tprefix = \"\";\n\t}\n\tconst printString = ` * Tone.js ${prefix}${version} * `;\n\t// eslint-disable-next-line no-console\n\tconsole.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n","import { Decibels, GainFactor, Hertz, Interval, MidiNote, NormalRange } from \"./Units\";\n\n/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent: NormalRange): number {\n\tconst piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n}\n\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db: Decibels): GainFactor {\n\treturn Math.pow(10, db / 20);\n}\n\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain: GainFactor): Decibels {\n\treturn 20 * (Math.log(gain) / Math.LN10);\n}\n\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval: Interval): number {\n\treturn Math.pow(2, (interval / 12));\n}\n\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4: Hertz = 440;\n\nexport function getA4(): Hertz {\n\treturn A4;\n}\n\nexport function setA4(freq: Hertz): void {\n\tA4 = freq;\n}\n\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency: Hertz): MidiNote {\n\treturn Math.round(ftomf(frequency)) as MidiNote;\n}\n\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency: Hertz): number {\n\treturn 69 + 12 * Math.log2(frequency / A4);\n}\n\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi: MidiNote): Hertz {\n\treturn A4 * Math.pow(2, (midi - 69) / 12);\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\nimport { BPM, Hertz, MidiNote, Milliseconds, Samples, Seconds, Ticks, Time } from \"./Units\";\n\nexport type TimeValue = Time | TimeBaseClass<any, any>;\n\n/**\n * The units that the TimeBase can accept. extended by other classes\n */\nexport type TimeBaseUnit = \"s\" | \"n\" | \"t\" | \"m\" | \"i\" | \"hz\" | \"tr\" | \"samples\" | \"number\";\n\nexport interface TypeFunction {\n\tregexp: RegExp;\n\tmethod: (value: string, ...args: string[]) => number;\n}\n\nexport interface TimeExpression<Type extends number> {\n\t[key: string]: {\n\t\tregexp: RegExp;\n\t\tmethod: (value: string, ...args: string[]) => Type;\n\t};\n}\n\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport abstract class TimeBaseClass<Type extends number, Unit extends string> extends Tone {\n\n\treadonly context: BaseContext;\n\n\t/**\n\t * The value of the units\n\t */\n\tprotected _val?: TimeValue;\n\n\t/**\n\t * The units of time\n\t */\n\tprotected _units?: Unit;\n\n\t/**\n\t * All of the conversion expressions\n\t */\n\tprotected _expressions: TimeExpression<Type>;\n\n\t/**\n\t * The default units\n\t */\n\treadonly defaultUnits: Unit = \"s\" as Unit;\n\n\t/**\n\t * @param context The context associated with the time value. Used to compute\n\t * Transport and context-relative timing.\n\t * @param  value  The time value as a number, string or object\n\t * @param  units  Unit values\n\t */\n\tconstructor(context: BaseContext, value?: TimeValue, units?: Unit) {\n\t\tsuper();\n\n\t\tthis._val = value;\n\t\tthis._units = units;\n\t\tthis.context = context;\n\t\tthis._expressions = this._getExpressions();\n\t}\n\n\t/**\n\t * All of the time encoding expressions\n\t */\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn {\n\t\t\thz: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\t},\n\t\t\ti: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._ticksToUnits(parseInt(value, 10));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)i$/i,\n\t\t\t},\n\t\t\tm: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)m$/i,\n\t\t\t},\n\t\t\tn: {\n\t\t\t\tmethod: (value, dot) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\tconst scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\t\tif (numericValue === 1) {\n\t\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature()) * scalar as Type;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._beatsToUnits(4 / numericValue) * scalar as Type;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)n(\\.?)$/i,\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._expressions[this.defaultUnits].method.call(this, value);\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\t},\n\t\t\ts: {\n\t\t\t\tmethod: (value): Type => {\n\t\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\t},\n\t\t\tsamples: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn parseInt(value, 10) / this.context.sampleRate as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)samples$/,\n\t\t\t},\n\t\t\tt: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\treturn this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)t$/i,\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tmethod: (m, q, s) => {\n\t\t\t\t\tlet total = 0;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\t},\n\t\t};\n\t}\n\n\t//-------------------------------------\n\t// \tVALUE OF\n\t//-------------------------------------\n\n\t/**\n\t * Evaluate the time value. Returns the time in seconds.\n\t */\n\tvalueOf(): Type {\n\t\tif (this._val instanceof TimeBaseClass) {\n\t\t\tthis.fromType(this._val);\n\t\t}\n\t\tif (isUndef(this._val)) {\n\t\t\treturn this._noArg();\n\t\t} else if (isString(this._val) && isUndef(this._units)) {\n\t\t\tfor (const units in this._expressions) {\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())) {\n\t\t\t\t\tthis._units = units as Unit;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isObject(this._val)) {\n\t\t\tlet total = 0;\n\t\t\tfor (const typeName in this._val) {\n\t\t\t\tif (isDefined(this._val[typeName])) {\n\t\t\t\t\tconst quantity = this._val[typeName];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n\t\t\t\t\ttotal += time;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn total as Type;\n\t\t}\n\t\tif (isDefined(this._units)) {\n\t\t\tconst expr = this._expressions[this._units];\n\t\t\tconst matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching) {\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, this._val);\n\t\t\t}\n\t\t} else if (isString(this._val)) {\n\t\t\treturn parseFloat(this._val) as Type;\n\t\t} else {\n\t\t\treturn this._val as Type;\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn 1 / freq as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn (60 / this._getBpm()) * beats as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn seconds as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn (ticks * (this._beatsToUnits(1)) / this._getPPQ()) as Type;\n\t}\n\n\t/**\n\t * With no arguments, return 'now'\n\t */\n\tprotected _noArg(): Type {\n\t\treturn this._now();\n\t}\n\n\t//-------------------------------------\n\t// \tTEMPO CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the bpm\n\t */\n\tprotected _getBpm(): BPM {\n\t\treturn this.context.transport.bpm.value;\n\t}\n\n\t/**\n\t * Return the timeSignature\n\t */\n\tprotected _getTimeSignature(): number {\n\t\treturn this.context.transport.timeSignature as number;\n\t}\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t */\n\tprotected _getPPQ(): number {\n\t\treturn this.context.transport.PPQ;\n\t}\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected abstract _now(): Type;\n\n\t//-------------------------------------\n\t// \tCONVERSION INTERFACE\n\t//-------------------------------------\n\n\t/**\n\t * Coerce a time type into this units type.\n\t * @param type Any time type units\n\t */\n\tfromType(type: TimeBaseClass<any, any>): this {\n\t\tthis._units = undefined;\n\t\tswitch (this.defaultUnits) {\n\t\t\tcase \"s\":\n\t\t\t\tthis._val = type.toSeconds();\n\t\t\t\tbreak;\n\t\t\tcase \"i\":\n\t\t\t\tthis._val = type.toTicks();\n\t\t\t\tbreak;\n\t\t\tcase \"hz\":\n\t\t\t\tthis._val = type.toFrequency();\n\t\t\t\tbreak;\n\t\t\tcase \"midi\":\n\t\t\t\tthis._val = type.toMidi();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the value in seconds\n\t */\n\tabstract toSeconds(): Seconds;\n\n\t/**\n\t * Return the value as a Midi note\n\t */\n\tabstract toMidi(): MidiNote;\n\n\t/**\n\t * Convert the value into ticks\n\t */\n\tabstract toTicks(): Ticks;\n\n\t/**\n\t * Return the value in hertz\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn 1 / this.toSeconds();\n\t}\n\n\t/**\n\t * Return the time in samples\n\t */\n\ttoSamples(): Samples {\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t}\n\n\t/**\n\t * Return the time in milliseconds.\n\t */\n\ttoMilliseconds(): Milliseconds {\n\t\treturn this.toSeconds() * 1000;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass, TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { BarsBeatsSixteenths, MidiNote, Seconds, Subdivision, Ticks, Time } from \"./Units\";\n\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass<Type extends Seconds | Ticks = Seconds, Unit extends string = TimeBaseUnit>\n\textends TimeBaseClass<Type, Unit> {\n\n\treadonly name: string = \"TimeClass\";\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign(super._getExpressions(), {\n\t\t\tnow: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\treturn this._now() + new (this.constructor as typeof TimeClass)(this.context, capture).valueOf() as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^\\+(.+)/,\n\t\t\t},\n\t\t\tquantize: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\tconst quantTo = new TimeClass(this.context, capture).valueOf();\n\t\t\t\t\treturn this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n\t\t\t\t},\n\t\t\t\tregexp: /^@(.+)/,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Quantize the time by the given subdivision. Optionally add a\n\t * percentage which will move the time value towards the ideal\n\t * quantized value by that percentage.\n\t * @param  subdiv    The subdivision to quantize to\n\t * @param  percent  Move the time value towards the quantized value by a percentage.\n\t * @example\n\t * Tone.Time(21).quantize(2); // returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n\t */\n\tquantize(subdiv: Time, percent = 1): Type {\n\t\tconst subdivision = new (this.constructor as typeof TimeClass)(this.context, subdiv).valueOf();\n\t\tconst value = this.valueOf();\n\t\tconst multiple = Math.round(value / subdivision);\n\t\tconst ideal = multiple * subdivision;\n\t\tconst diff = ideal - value;\n\t\treturn value + diff * percent as Type;\n\t}\n\n\t//-------------------------------------\n\t// CONVERSIONS\n\t//-------------------------------------\n\t/**\n\t * Convert a Time to Notation. The notation values are will be the\n\t * closest representation between 1m to 128th note.\n\t * @return {Notation}\n\t * @example\n\t * // if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation(); // returns \"1m\"\n\t */\n\ttoNotation(): Subdivision {\n\t\tconst time = this.toSeconds();\n\t\tconst testNotations: Subdivision[] = [\"1m\"];\n\t\tfor (let power = 1; power < 9; power++) {\n\t\t\tconst subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"n\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"t\" as Subdivision);\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t// find the closets notation representation\n\t\tlet closest = testNotations[0];\n\t\tlet closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(notation => {\n\t\t\tconst notationSeconds = new TimeClass(this.context, notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t}\n\n\t/**\n\t * Return the time encoded as Bars:Beats:Sixteenths.\n\t */\n\ttoBarsBeatsSixteenths(): BarsBeatsSixteenths {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tlet quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tconst measures = Math.floor(quarters / this._getTimeSignature());\n\t\tlet sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tconst sixteenthString = sixteenths.toString();\n\t\tif (sixteenthString.length > 3) {\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n\t\t}\n\t\tconst progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t}\n\n\t/**\n\t * Return the time in ticks.\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.round(quarters * this._getPPQ());\n\t}\n\n\t/**\n\t * Return the time in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value as a midi note.\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.toFrequency());\n\t}\n\n\tprotected _now(): Type {\n\t\treturn this.context.now() as Type;\n\t}\n}\n\n/**\n * Create a TimeClass from a time string or number. The time is computed against the \n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value?: TimeValue, units?: TimeBaseUnit): TimeClass<Seconds> {\n\treturn new TimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { Frequency, Hertz, Interval, MidiNote, Note, Seconds, Ticks } from \"./Units\";\n\nexport type FrequencyUnit = TimeBaseUnit | \"midi\";\n\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass<Type extends number = Hertz> extends TimeClass<Type, FrequencyUnit> {\n\n\treadonly name: string = \"Frequency\";\n\n\treadonly defaultUnits: FrequencyUnit = \"hz\";\n\n\t/**\n\t * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n\t * to generate all the other pitch values from notes. A4's values in Hertz.\n\t */\n\tstatic get A4(): Hertz {\n\t\treturn getA4();\n\t}\n\tstatic set A4(freq: Hertz) {\n\t\tsetA4(freq);\n\t}\n\n\t//-------------------------------------\n\t// \tAUGMENT BASE EXPRESSIONS\n\t//-------------------------------------\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign({}, super._getExpressions(), {\n\t\t\tmidi: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\t\tmethod(value): number {\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tregexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t\t\tmethod(pitch, octave): number {\n\t\t\t\t\tconst index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\t\tconst noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn noteNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(noteNumber);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\t\tmethod(m, q, s): number {\n\t\t\t\t\tlet total = 1;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total;\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tEXPRESSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return  A new transposed frequency\n\t * @example\n\t * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): FrequencyClass {\n\t\treturn new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n\t}\n\n\t/**\n\t * Takes an array of semitone intervals and returns\n\t * an array of frequencies transposed by those intervals.\n\t * @return  Returns an array of Frequencies\n\t * @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n\t */\n\tharmonize(intervals: Interval[]): FrequencyClass[] {\n\t\treturn intervals.map(interval => {\n\t\t\treturn this.transpose(interval);\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Frequency(\"C4\").toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.valueOf());\n\t}\n\n\t/**\n\t * Return the value of the frequency in Scientific Pitch Notation\n\t * @example\n\t * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n\t */\n\ttoNote(): Note {\n\t\tconst freq = this.toFrequency();\n\t\tconst log = Math.log2(freq / FrequencyClass.A4);\n\t\tlet noteNumber = Math.round(12 * log) + 57;\n\t\tconst octave = Math.floor(noteNumber / 12);\n\t\tif (octave < 0) {\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tconst noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString() as Note;\n\t}\n\n\t/**\n\t * Return the duration of one cycle in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn 1 / super.toSeconds();\n\t}\n\n\t/**\n\t * Return the duration of one cycle in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * this._getPPQ());\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS HELPERS\n\t//-------------------------------------\n\n\t/**\n\t * With no arguments, return 0\n\t */\n\tprotected _noArg(): Type {\n\t\treturn 0 as Type;\n\t}\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn freq as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ())) as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn 1 / super._beatsToUnits(beats) as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn 1 / seconds as Type;\n\t}\n\n\t/**\n\t * Convert a MIDI note to frequency value.\n\t * @param  midi The midi number to convert.\n\t * @return The corresponding frequency value\n\t */\n\tstatic mtof(midi: MidiNote): Hertz {\n\t\treturn mtof(midi);\n\t}\n\n\t/**\n\t * Convert a frequency value to a MIDI note.\n\t * @param frequency The value to frequency value to convert.\n\t */\n\tstatic ftom(frequency: Hertz): MidiNote {\n\t\treturn ftom(frequency);\n\t}\n}\n\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index. \n * @hidden\n */\nconst noteToScaleIndex = {\n\tcbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n\tdbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n\tebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n\tfbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n\tgbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n\tabb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n\tbbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value?: TimeValue | Frequency, units?: FrequencyUnit): FrequencyClass {\n\treturn new FrequencyClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Seconds, Ticks } from \"../type/Units\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass<Type extends Seconds | Ticks = Seconds> extends TimeClass<Type> {\n\n\treadonly name: string = \"TransportTime\";\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected _now(): Type {\n\t\treturn this.context.transport.seconds as Type;\n\t}\n}\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value?: TimeValue, units?: TimeBaseUnit): TransportTimeClass {\n\treturn new TransportTimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { RecursivePartial } from \"../util/Interface\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\nimport { BaseContext } from \"./BaseContext\";\n\n/**\n * A unit which process audio\n */\nexport interface ToneWithContextOptions {\n\tcontext: BaseContext;\n}\n\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport abstract class ToneWithContext<Options extends ToneWithContextOptions> extends Tone {\n\n\t/**\n\t * The context belonging to the node.\n\t */\n\treadonly context: BaseContext;\n\n\t/**\n\t * The default context to use if no AudioContext is passed in to the constructor.\n\t * Probably should not be set manually. Used internally.\n\t * @hidden\n\t */\n\treadonly defaultContext?: BaseContext;\n\n\t/**\n\t * Pass in a constructor as the first argument\n\t */\n\tconstructor(context?: BaseContext)\n\tconstructor(options?: Partial<ToneWithContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\t\tif (this.defaultContext) {\n\t\t\tthis.context = this.defaultContext;\n\t\t} else {\n\t\t\tthis.context = options.context;\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneWithContextOptions {\n\t\treturn {\n\t\t\tcontext: getContext(),\n\t\t};\n\t}\n\n\t/**\n\t * Return the current time of the Context clock plus the lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.now());\n\t * }, 100);\n\t */\n\tnow(): Seconds {\n\t\treturn this.context.currentTime + this.context.lookAhead;\n\t}\n\n\t/**\n\t * Return the current time of the Context clock without any lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.immediate());\n\t * }, 100);\n\t */\n\timmediate(): Seconds {\n\t\treturn this.context.currentTime;\n\t}\n\n\t/**\n\t * The duration in seconds of one sample.\n\t * @example\n\t * console.log(Tone.Transport.sampleTime);\n\t */\n\tget sampleTime(): Seconds {\n\t\treturn 1 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * The number of seconds of 1 processing block (128 samples)\n\t * @example\n\t * console.log(Tone.Destination.blockTime);\n\t */\n\tget blockTime(): Seconds {\n\t\treturn 128 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * Convert the incoming time to seconds. \n\t * This is calculated against the current [[Tone.Transport]] bpm\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n\t * // ramp the tempo to 60 bpm over 30 seconds\n\t * Tone.getTransport().bpm.rampTo(60, 30);\n\t */\n\ttoSeconds(time?: Time): Seconds {\n\t\treturn new TimeClass(this.context, time).toSeconds();\n\t}\n\n\t/**\n\t * Convert the input to a frequency number\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toFrequency(\"4n\"));\n\t */\n\ttoFrequency(freq: Frequency): Hertz {\n\t\treturn new FrequencyClass(this.context, freq).toFrequency();\n\t}\n\n\t/**\n\t * Convert the input time into ticks\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toTicks(\"4n\"));\n\t */\n\ttoTicks(time?: Time | TimeClass): Ticks {\n\t\treturn new TransportTimeClass(this.context, time).toTicks();\n\t}\n\n\t//-------------------------------------\n\t// \tGET/SET\n\t//-------------------------------------\n\n\t/**\n\t * Get a subset of the properties which are in the partial props\n\t */\n\tprotected _getPartialProperties(props: Options): Partial<Options> {\n\t\tconst options = this.get();\n\t\t// remove attributes from the prop that are not in the partial\n\t\tObject.keys(options).forEach(name => {\n\t\t\tif (isUndef(props[name])) {\n\t\t\t\tdelete options[name];\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t}\n\n\t/**\n\t * Get the object's attributes.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.get());\n\t */\n\tget(): Options {\n\t\tconst defaults = getDefaultsFromInstance(this) as Options;\n\t\tObject.keys(defaults).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute)) {\n\t\t\t\tconst member = this[attribute];\n\t\t\t\tif (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n\t\t\t\t\tdefaults[attribute] = member.value;\n\t\t\t\t} else if (member instanceof ToneWithContext) {\n\t\t\t\t\tdefaults[attribute] = member._getPartialProperties(defaults[attribute]);\n\t\t\t\t\t// otherwise make sure it's a serializable type\n\t\t\t\t} else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n\t\t\t\t\tdefaults[attribute] = member;\n\t\t\t\t} else {\n\t\t\t\t\t// remove all undefined and unserializable attributes\n\t\t\t\t\tdelete defaults[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn defaults;\n\t}\n\n\t/**\n\t * Set multiple properties at once with an object.\n\t * @example\n\t * const filter = new Tone.Filter().toDestination();\n\t * // set values using an object\n\t * filter.set({\n\t * \tfrequency: \"C6\",\n\t * \ttype: \"highpass\"\n\t * });\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n\t * player.autostart = true;\n\t */\n\tset(props: RecursivePartial<Options>): this {\n\t\tObject.keys(props).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n\t\t\t\tif (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n\t\t\t\t\t// small optimization\n\t\t\t\t\tif (this[attribute].value !== props[attribute]) {\n\t\t\t\t\t\tthis[attribute].value = props[attribute];\n\t\t\t\t\t}\n\t\t\t\t} else if (this[attribute] instanceof ToneWithContext) {\n\t\t\t\t\tthis[attribute].set(props[attribute]);\n\t\t\t\t} else {\n\t\t\t\t\tthis[attribute] = props[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n\nexport type BasicPlaybackState = \"started\" | \"stopped\";\nexport type PlaybackState = BasicPlaybackState | \"paused\";\n\nexport interface StateTimelineEvent extends TimelineEvent {\n\tstate: PlaybackState;\n}\n\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline<AdditionalOptions extends {} = {}> extends Timeline<StateTimelineEvent & AdditionalOptions> {\n\n\treadonly name: string = \"StateTimeline\";\n\n\t/**\n\t * The initial state\n\t */\n\tprivate _initial: PlaybackState;\n\n\tconstructor(initial: PlaybackState = \"stopped\") {\n\t\tsuper();\n\t\tthis._initial = initial;\n\t\tthis.setStateAtTime(this._initial, 0);\n\t}\n\n\t/**\n\t * Returns the scheduled state scheduled before or at\n\t * the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t */\n\tgetValueAtTime(time: Seconds): PlaybackState {\n\t\tconst event = this.get(time);\n\t\tif (event !== null) {\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t}\n\n\t/**\n\t * Add a state to the timeline.\n\t * @param  state The name of the state to set.\n\t * @param  time  The time to query.\n\t * @param options Any additional options that are needed in the timeline.\n\t */\n\tsetStateAtTime(state: PlaybackState, time: Seconds, options?: AdditionalOptions): this {\n\t\tassertRange(time, 0);\n\t\tthis.add(Object.assign({}, options, {\n\t\t\tstate,\n\t\t\ttime,\n\t\t}));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the event before the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check before\n\t * @return  The event with the given state before the time\n\t */\n\tgetLastState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tconst event = this._timeline[i];\n\t\t\tif (event.state === state) {\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return the event after the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check from\n\t * @return  The event with the given state after the time\n\t */\n\tgetNextState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tif (index !== -1) {\n\t\t\tfor (let i = index; i < this._timeline.length; i++) {\n\t\t\t\tconst event = this._timeline[i];\n\t\t\t\tif (event.state === state) {\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AbstractParam } from \"../context/AbstractParam\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { Decibels, Frequency, Positive, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n\nexport interface ParamOptions<TypeName extends UnitName> extends ToneWithContextOptions {\n\tunits: TypeName;\n\tvalue?: UnitMap[TypeName];\n\tparam: AudioParam | Param<TypeName>;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n\tswappable?: boolean;\n}\n\n/**\n * the possible automation types\n */\ntype AutomationType = \"linearRampToValueAtTime\" | \"exponentialRampToValueAtTime\" | \"setValueAtTime\" | \"setTargetAtTime\" | \"cancelScheduledValues\";\n\ninterface TargetAutomationEvent {\n\ttype: \"setTargetAtTime\";\n\ttime: number;\n\tvalue: number;\n\tconstant: number;\n}\n\ninterface NormalAutomationEvent {\n\ttype: Exclude<AutomationType, \"setTargetAtTime\">;\n\ttime: number;\n\tvalue: number;\n}\n/**\n * The events on the automation\n */\nexport type AutomationEvent = NormalAutomationEvent | TargetAutomationEvent;\n\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param<TypeName extends UnitName = \"number\">\n\textends ToneWithContext<ParamOptions<TypeName>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Param\";\n\n\treadonly input: GainNode | AudioParam;\n\n\treadonly units: UnitName;\n\tconvert: boolean;\n\toverridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<AutomationEvent>;\n\n\t/**\n\t * The native parameter to control\n\t */\n\tprotected _param: AudioParam;\n\n\t/**\n\t * The default value before anything is assigned\n\t */\n\tprotected _initialValue: number;\n\n\t/**\n\t * The minimum output value\n\t */\n\tprivate _minOutput = 1e-7;\n\n\t/**\n\t * Private reference to the min and max values if passed into the constructor\n\t */\n\tprivate readonly _minValue?: number;\n\tprivate readonly _maxValue?: number;\n\n\t/**\n\t * If the underlying AudioParam can be swapped out\n\t * using the setParam method. \n\t */\n\tprotected readonly _swappable: boolean;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\tconstructor(param: AudioParam, units?: TypeName, convert?: boolean);\n\tconstructor(options: Partial<ParamOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n\n\t\tconst options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n\n\t\tassert(isDefined(options.param) &&\n\t\t\t(isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n\t\twhile (!isAudioParam(options.param)) {\n\t\t\toptions.param = options.param._param;\n\t\t}\n\n\t\tthis._swappable = isDefined(options.swappable) ? options.swappable : false;\n\t\tif (this._swappable) {\n\t\t\tthis.input = this.context.createGain();\n\t\t\t// initialize\n\t\t\tthis._param = options.param;\n\t\t\tthis.input.connect(this._param);\n\t\t} else {\n\t\t\tthis._param = this.input = options.param;\n\t\t}\n\t\tthis._events = new Timeline<AutomationEvent>(1000);\n\t\tthis._initialValue = this._param.defaultValue;\n\t\tthis.units = options.units;\n\t\tthis.convert = options.convert;\n\t\tthis._minValue = options.minValue;\n\t\tthis._maxValue = options.maxValue;\n\n\t\t// if the value is defined, set it immediately\n\t\tif (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ParamOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t} as ParamOptions<any>);\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\tconst now = this.now();\n\t\treturn this.getValueAtTime(now);\n\t}\n\tset value(value) {\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n\n\tget minValue(): number {\n\t\t// if it's not the default minValue, return it\n\t\tif (isDefined(this._minValue)) {\n\t\t\treturn this._minValue;\n\t\t} else if (this.units === \"time\" || this.units === \"frequency\" ||\n\t\t\tthis.units === \"normalRange\" || this.units === \"positive\" ||\n\t\t\tthis.units === \"transportTime\" || this.units === \"ticks\" ||\n\t\t\tthis.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n\t\t\treturn 0;\n\t\t} else if (this.units === \"audioRange\") {\n\t\t\treturn -1;\n\t\t} else if (this.units === \"decibels\") {\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n\n\tget maxValue(): number {\n\t\tif (isDefined(this._maxValue)) {\n\t\t\treturn this._maxValue;\n\t\t} else if (this.units === \"normalRange\" ||\n\t\t\tthis.units === \"audioRange\") {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n\n\t/**\n\t * Type guard based on the unit name\n\t */\n\tprivate _is<T>(arg: any, type: UnitName): arg is T {\n\t\treturn this.units === type;\n\t}\n\n\t/**\n\t * Make sure the value is always in the defined range\n\t */\n\tprivate _assertRange(value: number): number {\n\t\tif (isDefined(this.maxValue) && isDefined(this.minValue)) {\n\t\t\tassertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Convert the given value from the type specified by Param.units\n\t * into the destination value (such as Gain or Frequency).\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.convert && !this.overridden) {\n\t\t\tif (this._is<Time>(val, \"time\")) {\n\t\t\t\treturn this.toSeconds(val);\n\t\t\t} else if (this._is<Decibels>(val, \"decibels\")) {\n\t\t\t\treturn dbToGain(val);\n\t\t\t} else if (this._is<Frequency>(val, \"frequency\")) {\n\t\t\t\treturn this.toFrequency(val);\n\t\t\t} else {\n\t\t\t\treturn val as number;\n\t\t\t}\n\t\t} else if (this.overridden) {\n\t\t\t// if it's overridden, should only schedule 0s\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn val as number;\n\t\t}\n\t}\n\n\t/**\n\t * Convert the parameters value into the units specified by Param.units.\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.convert && this.units === \"decibels\") {\n\t\t\treturn gainToDb(val) as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn val as UnitMap[TypeName];\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// all docs are generated from ParamInterface.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst numericValue = this._fromType(value);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis.log(this.units, \"setValueAtTime\", value, computedTime);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis._param.setValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\tconst computedTime = Math.max(this.toSeconds(time), 0);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tconst before = this._events.get(computedTime);\n\t\tlet value = this._initialValue;\n\t\t// if it was set by\n\t\tif (before === null) {\n\t\t\tvalue = this._initialValue;\n\t\t} else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\tlet previousVal;\n\t\t\tif (previous === null) {\n\t\t\t\tpreviousVal = this._initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n\t\t\t}\n\t\t} else if (after === null) {\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n\t\t\tlet beforeValue = before.value;\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\t\tif (previous === null) {\n\t\t\t\t\tbeforeValue = this._initialValue;\n\t\t\t\t} else {\n\t\t\t\t\tbeforeValue = previous.value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tvalue = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t} else {\n\t\t\t\tvalue = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn this._toType(value);\n\t}\n\n\tsetRampPoint(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tlet currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (this._fromType(currentVal) === 0) {\n\t\t\tcurrentVal = this._toType(this._minOutput);\n\t\t}\n\t\tthis.setValueAtTime(currentVal, time);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tconst numericValue = this._fromType(value);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"linearRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\t\tthis._param.linearRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tlet numericValue = this._fromType(value);\n\t\t// the value can't be 0\n\t\tnumericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n\t\tthis._assertRange(numericValue);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\t// store the event\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"exponentialRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\t\tthis._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t}\n\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\trampTime = this.toSeconds(rampTime);\n\t\tconst timeConstant = Math.log(rampTime + 1) / Math.log(200);\n\t\tthis.setTargetAtTime(value, time, timeConstant);\n\t\t// at 90% start a linear ramp to the final value\n\t\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\t\tthis.linearRampToValueAtTime(value, time + rampTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: Positive): this {\n\t\tconst numericValue = this._fromType(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tassert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n\t\tconst computedTime = this.toSeconds(startTime);\n\t\tthis._assertRange(numericValue);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n\t\tthis._events.add({\n\t\t\tconstant: timeConstant,\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setTargetAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\t\tthis._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling = 1): this {\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tconst startingValue = this._fromType(values[0]) * scaling;\n\t\tthis.setValueAtTime(this._toType(startingValue), startTime);\n\t\tconst segTime = duration / (values.length - 1);\n\t\tfor (let i = 1; i < values.length; i++) {\n\t\t\tconst numericValue = this._fromType(values[i]) * scaling;\n\t\t\tthis.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n\t\tthis._events.cancel(computedTime);\n\t\tthis._param.cancelScheduledValues(computedTime);\n\t\tthis.log(this.units, \"cancelScheduledValues\", computedTime);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n\t\t// remove the schedule events\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n\n\t\tthis.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n\t\t\n\t\t// if there is an event at the given computedTime\n\t\t// and that even is not a \"set\"\n\t\tconst before = this._events.get(computedTime);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tif (before && EQ(before.time, computedTime)) {\n\t\t\t// remove everything after\n\t\t\tif (after) {\n\t\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._param.cancelAndHoldAtTime(computedTime);\n\t\t\t\tthis._events.cancel(computedTime + this.sampleTime);\n\t\t\t}\n\t\t} else if (after) {\n\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t// cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tthis.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t} else if (after.type === \"exponentialRampToValueAtTime\") {\n\t\t\t\tthis.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t}\n\t\t}\n\n\t\t// set the value at the given time\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: valueAtTime,\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, computedTime);\n\t\treturn this;\n\t}\n\n\trampTo(value: UnitMap[TypeName], rampTime: Time = 0.1, startTime?: Time): this {\n\t\tif (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n\t * The applied values will start at the context's current time and schedule\n\t * all of the events which are scheduled on this Param onto the passed in param.\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tconst now = this.context.currentTime;\n\t\t// set the param's value at the current time and schedule everything else\n\t\tparam.setValueAtTime(this.getValueAtTime(now) as number, now);\n\t\t// if the previous event was a curve, then set the rest of it\n\t\tconst previousEvent = this._events.get(now);\n\t\tif (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n\t\t\t// approx it until the next event with linear ramps\n\t\t\tconst nextEvent = this._events.getAfter(previousEvent.time);\n\t\t\t// or for 2 seconds if there is no event\n\t\t\tconst endTime = nextEvent ? nextEvent.time : now + 2;\n\t\t\tconst subdivisions = (endTime - now) / 10;\n\t\t\tfor (let i = now; i < endTime; i += subdivisions) {\n\t\t\t\tparam.linearRampToValueAtTime(this.getValueAtTime(i) as number, i);\n\t\t\t}\n\t\t}\n\t\tthis._events.forEachAfter(this.context.currentTime, event => {\n\t\t\tif (event.type === \"cancelScheduledValues\") {\n\t\t\t\tparam.cancelScheduledValues(event.time);\n\t\t\t} else if (event.type === \"setTargetAtTime\") {\n\t\t\t\tparam.setTargetAtTime(event.value, event.time, event.constant);\n\t\t\t} else {\n\t\t\t\tparam[event.type](event.value, event.time);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Replace the Param's internal AudioParam. Will apply scheduled curves \n\t * onto the parameter and replace the connections.\n\t */\n\tsetParam(param: AudioParam): this {\n\t\tassert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n\t\tconst input = this.input as GainNode;\n\t\tinput.disconnect(this._param);\n\t\tthis.apply(param);\n\t\tthis._param = param;\n\t\tinput.connect(this._param);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\treturn this;\n\t}\n\n\tget defaultValue(): UnitMap[TypeName] {\n\t\treturn this._toType(this._param.defaultValue);\n\t}\n\n\t//-------------------------------------\n\t// \tAUTOMATION CURVE CALCULATIONS\n\t// \tMIT License, copyright (c) 2014 Jordan Santell\n\t//-------------------------------------\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tprotected _exponentialApproach(t0: number, v0: number, v1: number, timeConstant: number, t: number): number {\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t}\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tprotected _linearInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t}\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tprotected _exponentialInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t}\n}\n","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n\nexport type InputNode = ToneAudioNode | AudioNode | Param<any> | AudioParam;\nexport type OutputNode = ToneAudioNode | AudioNode;\n\ninterface ChannelProperties {\n\tchannelCount: number;\n\tchannelCountMode: ChannelCountMode;\n\tchannelInterpretation: ChannelInterpretation;\n}\n\n/**\n * The possible options for this node\n */\nexport type ToneAudioNodeOptions = ToneWithContextOptions;\n\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport abstract class ToneAudioNode<Options extends ToneAudioNodeOptions = ToneAudioNodeOptions>\n\textends ToneWithContext<Options> {\n\n\t/**\n\t * The name of the class\n\t */\n\tabstract readonly name: string = \"ToneAudioNode\";\n\n\t/**\n\t * The input node or nodes. If the object is a source,\n\t * it does not have any input and this.input is undefined.\n\t */\n\tabstract input: InputNode | undefined;\n\n\t/**\n\t * The output nodes. If the object is a sink,\n\t * it does not have any output and this.output is undefined.\n\t */\n\tabstract output: OutputNode | undefined;\n\n\t/**\n\t * The number of inputs feeding into the AudioNode.\n\t * For source nodes, this will be 0.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfInputs);\n\t */\n\tget numberOfInputs(): number {\n\t\tif (isDefined(this.input)) {\n\t\t\tif (isAudioParam(this.input) || this.input instanceof Param) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this.input.numberOfInputs;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of outputs of the AudioNode.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfOutputs);\n\t */\n\tget numberOfOutputs(): number {\n\t\tif (isDefined(this.output)) {\n\t\t\treturn this.output.numberOfOutputs;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * List all of the node that must be set to match the ChannelProperties\n\t */\n\tprotected _internalChannels: OutputNode[] = [];\n\n\t//-------------------------------------\n\t// AUDIO PROPERTIES\n\t//-------------------------------------\n\n\t/**\n\t * Used to decide which nodes to get/set properties on\n\t */\n\tprivate _isAudioNode(node: any): node is AudioNode | ToneAudioNode {\n\t\treturn isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n\t}\n\n\t/**\n\t * Get all of the audio nodes (either internal or input/output) which together\n\t * make up how the class node responds to channel input/output\n\t */\n\tprivate _getInternalNodes(): OutputNode[] {\n\t\tconst nodeList = this._internalChannels.slice(0);\n\t\tif (this._isAudioNode(this.input)) {\n\t\t\tnodeList.push(this.input);\n\t\t}\n\t\tif (this._isAudioNode(this.output)) {\n\t\t\tif (this.input !== this.output) {\n\t\t\t\tnodeList.push(this.output);\n\t\t\t}\n\t\t}\n\t\treturn nodeList;\n\t}\n\n\t/**\n\t * Set the audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t * @param options\n\t */\n\tprivate _setChannelProperties(options: ChannelProperties): void {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tnodeList.forEach(node => {\n\t\t\tnode.channelCount = options.channelCount;\n\t\t\tnode.channelCountMode = options.channelCountMode;\n\t\t\tnode.channelInterpretation = options.channelInterpretation;\n\t\t});\n\t}\n\n\t/**\n\t * Get the current audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t */\n\tprivate _getChannelProperties(): ChannelProperties {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tassert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n\t\t// use the first node to get properties\n\t\t// they should all be the same\n\t\tconst node = nodeList[0];\n\t\treturn {\n\t\t\tchannelCount: node.channelCount,\n\t\t\tchannelCountMode: node.channelCountMode,\n\t\t\tchannelInterpretation: node.channelInterpretation,\n\t\t};\n\t}\n\n\t/**\n\t * channelCount is the number of channels used when up-mixing and down-mixing\n\t * connections to any inputs to the node. The default value is 2 except for\n\t * specific nodes where its value is specially determined.\n\t */\n\tget channelCount(): number {\n\t\treturn this._getChannelProperties().channelCount;\n\t}\n\tset channelCount(channelCount) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCount }));\n\t}\n\n\t/**\n\t * channelCountMode determines how channels will be counted when up-mixing and\n\t * down-mixing connections to any inputs to the node.\n\t * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n\t * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n\t * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n\t */\n\tget channelCountMode(): ChannelCountMode {\n\t\treturn this._getChannelProperties().channelCountMode;\n\t}\n\tset channelCountMode(channelCountMode) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCountMode }));\n\t}\n\n\t/**\n\t * channelInterpretation determines how individual channels will be treated\n\t * when up-mixing and down-mixing connections to any inputs to the node.\n\t * The default value is \"speakers\".\n\t */\n\tget channelInterpretation(): ChannelInterpretation {\n\t\treturn this._getChannelProperties().channelInterpretation;\n\t}\n\tset channelInterpretation(channelInterpretation) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelInterpretation }));\n\t}\n\n\t//-------------------------------------\n\t// CONNECTIONS\n\t//-------------------------------------\n\n\t/**\n\t * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n\t * @param destination The output to connect to\n\t * @param outputNum The output to connect from\n\t * @param inputNum The input to connect to\n\t */\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C2\").start();\n\t * osc.toDestination();\n\t */\n\ttoDestination(): this {\n\t\tthis.connect(this.context.destination);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * See [[toDestination]]\n\t * @deprecated\n\t */\n\ttoMaster(): this {\n\t\twarn(\"toMaster() has been renamed toDestination()\");\n\t\treturn this.toDestination();\n\t}\n\n\t/**\n\t * disconnect the output\n\t */\n\tdisconnect(destination?: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tdisconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output of this node to the rest of the nodes in series.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n\t * player.autostart = true;\n\t * const filter = new Tone.AutoFilter(4).start();\n\t * const distortion = new Tone.Distortion(0.5);\n\t * // connect the player to the filter, distortion and then to the master output\n\t * player.chain(filter, distortion, Tone.Destination);\n\t */\n\tchain(...nodes: InputNode[]): this {\n\t\tconnectSeries(this, ...nodes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the output of this node to the rest of the nodes in parallel.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n\t * player.autostart = true;\n\t * const pitchShift = new Tone.PitchShift(4).toDestination();\n\t * const filter = new Tone.Filter(\"G5\").toDestination();\n\t * // connect a node to the pitch shift and filter in parallel\n\t * player.fan(pitchShift, filter);\n\t */\n\tfan(...nodes: InputNode[]): this {\n\t\tnodes.forEach(node => this.connect(node));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (isDefined(this.input)) {\n\t\t\tif (this.input instanceof ToneAudioNode) {\n\t\t\t\tthis.input.dispose();\n\t\t\t} else if (isAudioNode(this.input)) {\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t}\n\t\tif (isDefined(this.output)) {\n\t\t\tif (this.output instanceof ToneAudioNode) {\n\t\t\t\tthis.output.dispose();\n\t\t\t} else if (isAudioNode(this.output)) {\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t}\n\t\tthis._internalChannels = [];\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes: InputNode[]): void {\n\tconst first = nodes.shift();\n\tnodes.reduce((prev, current) => {\n\t\tif (prev instanceof ToneAudioNode) {\n\t\t\tprev.connect(current);\n\t\t} else if (isAudioNode(prev)) {\n\t\t\tconnect(prev, current);\n\t\t}\n\t\treturn current;\n\t}, first);\n}\n\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode: OutputNode, dstNode: InputNode, outputNumber = 0, inputNumber = 0): void {\n\n\tassert(isDefined(srcNode), \"Cannot connect from undefined node\");\n\tassert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n\tif (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n\t\tassert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n\t}\n\tassert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n\n\t// resolve the input of the dstNode\n\twhile ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n\t\tif (isDefined(dstNode.input)) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\twhile (srcNode instanceof ToneAudioNode) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\t// make the connection\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.connect(dstNode as AudioParam, outputNumber);\n\t} else {\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n}\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(\n\tsrcNode: OutputNode,\n\tdstNode?: InputNode,\n\toutputNumber = 0,\n\tinputNumber = 0,\n): void {\n\n\t// resolve the destination node\n\tif (isDefined(dstNode)) {\n\t\twhile (dstNode instanceof ToneAudioNode) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t// resolve the src node\n\twhile (!(isAudioNode(srcNode))) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t} else if (isAudioNode(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n}\n","import { Param } from \"../context/Param\";\nimport { UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface GainOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tgain: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain<TypeName extends \"gain\" | \"decibels\" | \"normalRange\" = \"gain\"> extends ToneAudioNode<GainOptions<TypeName>> {\n\n\treadonly name: string = \"Gain\";\n\n\t/**\n\t * The gain parameter of the gain node.\n\t * @example\n\t * const gainNode = new Tone.Gain(0).toDestination();\n\t * const osc = new Tone.Oscillator().connect(gainNode).start();\n\t * gainNode.gain.rampTo(1, 0.1);\n\t * gainNode.gain.rampTo(0, 2, \"+0.5\");\n\t */\n\treadonly gain: Param<TypeName>;\n\n\t/**\n\t * The wrapped GainNode.\n\t */\n\tprivate _gainNode: GainNode = this.context.createGain();\n\n\t// input = output\n\treadonly input: GainNode = this._gainNode;\n\treadonly output: GainNode = this._gainNode;\n\n\t/**\n\t * @param  gain The initial gain of the GainNode\n\t * @param units The units of the gain parameter.\n\t */\n\tconstructor(gain?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<GainOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n\t\tconst options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._gainNode.gain,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.gain,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\treadOnly(this, \"gain\");\n\t}\n\n\tstatic getDefaults(): GainOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tgain: 1,\n\t\t\tunits: \"gain\",\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { GainFactor, Seconds, Time } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport type OneShotSourceCurve = \"linear\" | \"exponential\";\n\ntype onEndedCallback = (source: OneShotSource<any>) => void;\n\nexport interface OneShotSourceOptions extends ToneAudioNodeOptions {\n\tonended: onEndedCallback;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tcurve: OneShotSourceCurve;\n}\n\n/**\n * Base class for fire-and-forget nodes\n */\nexport abstract class OneShotSource<\n\tOptions extends ToneAudioNodeOptions\n> extends ToneAudioNode<Options> {\n\t/**\n\t * The callback to invoke after the\n\t * source is done playing.\n\t */\n\tonended: onEndedCallback = noOp;\n\n\t/**\n\t * Sources do not have input nodes\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The start time\n\t */\n\tprotected _startTime = -1;\n\n\t/**\n\t * The stop time\n\t */\n\tprotected _stopTime = -1;\n\n\t/**\n\t * The id of the timeout\n\t */\n\tprivate _timeout = -1;\n\n\t/**\n\t * The public output node\n\t */\n\toutput: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output gain node.\n\t */\n\tprotected _gainNode = this.output;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tprotected _curve: OneShotSourceCurve;\n\n\tconstructor(options: OneShotSourceOptions) {\n\t\tsuper(options);\n\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t\tthis._curve = options.curve;\n\t\tthis.onended = options.onended;\n\t}\n\n\tstatic getDefaults(): OneShotSourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tcurve: \"linear\" as OneShotSourceCurve,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tonended: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Stop the source node\n\t */\n\tprotected abstract _stopSource(time: Seconds): void;\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the node\n\t */\n\tprotected abstract start(time?: Time): this;\n\t/**\n\t * Start the source at the given time\n\t * @param  time When to start the source\n\t */\n\tprotected _startGain(time: Seconds, gain: GainFactor = 1): this {\n\t\tassert(\n\t\t\tthis._startTime === -1,\n\t\t\t\"Source cannot be started more than once\"\n\t\t);\n\t\t// apply a fade in envelope\n\t\tconst fadeInTime = this.toSeconds(this._fadeIn);\n\n\t\t// record the start time\n\t\tthis._startTime = time + fadeInTime;\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\n\t\t// schedule the envelope\n\t\tif (fadeInTime > 0) {\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampToValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime + fadeInTime\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime,\n\t\t\t\t\tfadeInTime\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source node at the given time.\n\t * @param time When to stop the source\n\t */\n\tstop(time?: Time): this {\n\t\tthis.log(\"stop\", time);\n\t\tthis._stopGain(this.toSeconds(time));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the given time\n\t * @param  time When to stop the source\n\t */\n\tprotected _stopGain(time: Seconds): this {\n\t\tassert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t// cancel the previous stop\n\t\tthis.cancelStop();\n\n\t\t// the fadeOut time\n\t\tconst fadeOutTime = this.toSeconds(this._fadeOut);\n\n\t\t// schedule the stop callback\n\t\tthis._stopTime = this.toSeconds(time) + fadeOutTime;\n\t\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\t\tif (fadeOutTime > 0) {\n\t\t\t// start the fade out curve at the given time\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// stop any ongoing ramps, and set the value to 0\n\t\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t}\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(() => {\n\t\t\t// allow additional time for the exponential curve to fully decay\n\t\t\tconst additionalTail =\n\t\t\t\tthis._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\t\t\tthis._stopSource(this.now() + additionalTail);\n\t\t\tthis._onended();\n\t\t}, this._stopTime - this.context.currentTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the onended callback\n\t */\n\tprotected _onended(): void {\n\t\tif (this.onended !== noOp) {\n\t\t\tthis.onended(this);\n\t\t\t// overwrite onended to make sure it only is called once\n\t\t\tthis.onended = noOp;\n\t\t\t// dispose when it's ended to free up for garbage collection only in the online context\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tconst disposeCallback = () => this.dispose();\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (typeof window.requestIdleCallback !== \"undefined\") {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\twindow.requestIdleCallback(disposeCallback);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(disposeCallback, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the playback state at the given time\n\t */\n\tgetStateAtTime = function(time: Time): BasicPlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (\n\t\t\tthis._startTime !== -1 &&\n\t\t\tcomputedTime >= this._startTime &&\n\t\t\t(this._stopTime === -1 || computedTime <= this._stopTime)\n\t\t) {\n\t\t\treturn \"started\";\n\t\t} else {\n\t\t\treturn \"stopped\";\n\t\t}\n\t};\n\n\t/**\n\t * Get the playback state at the current time\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Cancel a scheduled stop event\n\t */\n\tcancelStop(): this {\n\t\tthis.log(\"cancelStop\");\n\t\tassert(this._startTime !== -1, \"Source is not started\");\n\t\t// cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(\n\t\t\tthis._startTime + this.sampleTime\n\t\t);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { Seconds, Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../source/OneShotSource\";\n\nexport interface ToneConstantSourceOptions<TypeName extends UnitName> extends OneShotSourceOptions {\n\tconvert: boolean;\n\toffset: UnitMap[TypeName];\n\tunits: TypeName;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource<TypeName extends UnitName = \"number\"> extends OneShotSource<ToneConstantSourceOptions<TypeName>> {\n\n\treadonly name: string = \"ToneConstantSource\";\n\n\t/**\n\t * The signal generator\n\t */\n\tprivate _source = this.context.createConstantSource();\n\n\t/**\n\t * The offset of the signal generator\n\t */\n\treadonly offset: Param<TypeName>;\n\n\t/**\n\t * @param  offset   The offset value\n\t */\n\tconstructor(offset: UnitMap[TypeName]);\n\tconstructor(options?: Partial<ToneConstantSourceOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n\t\tconst options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\n\t\tthis.offset = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._source.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.offset,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t}\n\n\tstatic getDefaults(): ToneConstantSourceOptions<any> {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\toffset: 1,\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the source\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._source.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._source.stop(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._source.disconnect();\n\t\tthis.offset.dispose();\n\t\treturn this;\n\t}\n}\n","import { AbstractParam } from \"../core/context/AbstractParam\";\nimport { Param } from \"../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n\nexport interface SignalOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tvalue: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal<TypeName extends UnitName = \"number\"> extends ToneAudioNode<SignalOptions<any>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Signal\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection.\n\t */\n\treadonly override: boolean = true;\n\n\t/**\n\t * The constant source node which generates the signal\n\t */\n\tprotected _constantSource: ToneConstantSource<TypeName>;\n\treadonly output: OutputNode;\n\tprotected _param: Param<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis.output = this._constantSource = new ToneConstantSource({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\tthis._constantSource.start(0);\n\t\tthis.input = this._param = this._constantSource.offset;\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\t// start it only when connected to something\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// just a proxy for the ConstantSourceNode's offset AudioParam\n\t// all docs are generated from AbstractParam.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t}\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\treturn this._param.getValueAtTime(time);\n\t}\n\tsetRampPoint(time: Time): this {\n\t\tthis._param.setRampPoint(time);\n\t\treturn this;\n\t}\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.linearRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.exponentialRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.exponentialRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.linearRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.targetRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\tthis._param.exponentialApproachValueAtTime(value, time, rampTime);\n\t\treturn this;\n\t}\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: number): this {\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t}\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling?: number): this {\n\t\tthis._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\t\treturn this;\n\t}\n\tcancelScheduledValues(time: Time): this {\n\t\tthis._param.cancelScheduledValues(time);\n\t\treturn this;\n\t}\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tthis._param.cancelAndHoldAtTime(time);\n\t\treturn this;\n\t}\n\trampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.rampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\treturn this._param.value;\n\t}\n\tset value(value: UnitMap[TypeName]) {\n\t\tthis._param.value = value;\n\t}\n\n\tget convert(): boolean {\n\t\treturn this._param.convert;\n\t}\n\tset convert(convert: boolean) {\n\t\tthis._param.convert = convert;\n\t}\n\n\tget units(): UnitName {\n\t\treturn this._param.units;\n\t}\n\n\tget overridden(): boolean {\n\t\treturn this._param.overridden;\n\t}\n\tset overridden(overridden: boolean) {\n\t\tthis._param.overridden = overridden;\n\t}\n\n\tget maxValue(): number {\n\t\treturn this._param.maxValue;\n\t}\n\tget minValue(): number {\n\t\treturn this._param.minValue;\n\t}\n\n\t/**\n\t * See [[Param.apply]].\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tthis._param.apply(param);\n\t\treturn this;\n\t}\n}\n\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal: OutputNode, destination: InputNode, outputNum?: number, inputNum?: number): void {\n\tif (destination instanceof Param || isAudioParam(destination) ||\n\t\t(destination instanceof Signal && destination.override)) {\n\t\t// cancel changes\n\t\tdestination.cancelScheduledValues(0);\n\t\t// reset the value\n\t\tdestination.setValueAtTime(0, 0);\n\t\t// mark the value as overridden\n\t\tif (destination instanceof Signal) {\n\t\t\tdestination.overridden = true;\n\t\t}\n\t}\n\tconnect(signal, destination, outputNum, inputNum);\n}\n","import { AutomationEvent, Param, ParamOptions } from \"../context/Param\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n\ntype TickAutomationEvent = AutomationEvent & {\n\tticks: number;\n};\n\ninterface TickParamOptions<TypeName extends UnitName> extends ParamOptions<TypeName> {\n\tmultiplier: number;\n}\n\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam<TypeName extends \"hertz\" | \"bpm\"> extends Param<TypeName> {\n\n\treadonly name: string = \"TickParam\";\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<TickAutomationEvent> = new Timeline(Infinity);\n\n\t/**\n\t * The internal holder for the multiplier value\n\t */\n\tprivate _multiplier = 1;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: number);\n\tconstructor(options: Partial<TickParamOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n\n\t\t// set the multiplier\n\t\tthis._multiplier = options.multiplier;\n\n\t\t// clear the ticks from the beginning\n\t\tthis._events.cancel(0);\n\t\t// set an initial event\n\t\tthis._events.add({\n\t\t\tticks: 0,\n\t\t\ttime: 0,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: this._fromType(options.value),\n\t\t});\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): TickParamOptions<any> {\n\t\treturn Object.assign(Param.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], time: Time, constant: number): this {\n\t\t// approximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tconst computedValue = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\tconst segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = constant * i + time;\n\t\t\tconst rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.setValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.linearRampToValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\t// aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tconst computedVal = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\t// approx 10 segments per second\n\t\tconst segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n\t\tconst segmentDur = ((time - prevEvent.time) / segments);\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = segmentDur * i + prevEvent.time;\n\t\t\tconst rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  event The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tprivate _getTicksUntilEvent(event: TickAutomationEvent | null, time: number): Ticks {\n\t\tif (event === null) {\n\t\t\tevent = {\n\t\t\t\tticks: 0,\n\t\t\t\ttime: 0,\n\t\t\t\ttype: \"setValueAtTime\",\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t} else if (isUndef(event.ticks)) {\n\t\t\tconst previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tconst val0 = this._fromType(this.getValueAtTime(event.time));\n\t\tlet val1 = this._fromType(this.getValueAtTime(time));\n\t\t// if it's right on the line, take the previous value\n\t\tconst onTheLineEvent = this._events.get(time);\n\t\tif (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n\t\t\tval1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  time The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tgetTicksAtTime(time: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst event = this._events.get(computedTime);\n\t\treturn Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n\t}\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param ticks The number of ticks to calculate\n\t * @param  time The time to get the next tick from\n\t * @return The duration of the number of ticks from the given time in seconds\n\t */\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - computedTime;\n\t}\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @return The time that the tick occurs.\n\t */\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\tconst before = this._events.get(tick, \"ticks\");\n\t\tconst after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick) {\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === \"linearRampToValueAtTime\" &&\n\t\t\tbefore.value !== after.value) {\n\t\t\tconst val0 = this._fromType(this.getValueAtTime(before.time));\n\t\t\tconst val1 = this._fromType(this.getValueAtTime(after.time));\n\t\t\tconst delta = (val1 - val0) / (after.time - before.time);\n\t\t\tconst k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tconst sol1 = (-val0 + k) / delta;\n\t\t\tconst sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before) {\n\t\t\tif (before.value === 0) {\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t}\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  ticks The number of ticks to convert to seconds.\n\t * @param  when  When along the automation timeline to convert the ticks.\n\t * @return The duration in seconds of the ticks.\n\t */\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this.getDurationOfTicks(ticks, when);\n\t}\n\n\t/**\n\t * The inverse of [[ticksToTime]]. Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  duration The time interval to convert to ticks.\n\t * @param  when When along the automation timeline to convert the ticks.\n\t * @return The duration in ticks.\n\t */\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tconst startTicks = this.getTicksAtTime(computedTime);\n\t\tconst endTicks = this.getTicksAtTime(computedTime + computedDuration);\n\t\treturn endTicks - startTicks;\n\t}\n\n\t/**\n\t * Convert from the type when the unit value is BPM\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn 1 / (60 / val / this.multiplier);\n\t\t} else {\n\t\t\treturn super._fromType(val);\n\t\t}\n\t}\n\n\t/**\n\t * Special case of type conversion where the units === \"bpm\"\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn (val / this.multiplier) * 60 as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn super._toType(val);\n\t\t}\n\t}\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\t// get and reset the current value with the new multiplier\n\t\t// might be necessary to clear all the previous values\n\t\tconst currentVal = this.value;\n\t\tthis._multiplier = m;\n\t\tthis.cancelScheduledValues(0);\n\t\tthis.setValueAtTime(currentVal, 0);\n\t}\n}\n","import { Signal, SignalOptions } from \"../../signal/Signal\";\nimport { InputNode } from \"../context/ToneAudioNode\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n\ninterface TickSignalOptions<TypeName extends UnitName> extends SignalOptions<TypeName> {\n\tvalue: UnitMap[TypeName];\n\tmultiplier: number;\n}\n\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal<TypeName extends \"hertz\" | \"bpm\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"TickSignal\";\n\n\t/**\n\t * The param which controls the output signal value\n\t */\n\tprotected _param: TickParam<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: UnitMap[TypeName]);\n\tconstructor(options: Partial<TickSignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis.input = this._param = new TickParam({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tmultiplier: options.multiplier,\n\t\t\tparam: this._constantSource.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.value,\n\t\t});\n\t}\n\n\tstatic getDefaults(): TickSignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this._param.ticksToTime(ticks, when);\n\t}\n\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\treturn this._param.timeToTicks(duration, when);\n\t}\n\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\treturn this._param.getTimeOfTick(tick);\n\t}\n\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\treturn this._param.getDurationOfTicks(ticks, time);\n\t}\n\n\tgetTicksAtTime(time: Time): Ticks {\n\t\treturn this._param.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._param.multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\tthis._param.multiplier = m;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline, StateTimelineEvent } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n\ninterface TickSourceOptions extends ToneWithContextOptions {\n\tfrequency: number;\n\tunits: \"bpm\" | \"hertz\";\n}\n\ninterface TickSourceOffsetEvent {\n\tticks: number;\n\ttime: number;\n\tseconds: number;\n}\n\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource<TypeName extends \"bpm\" | \"hertz\"> extends ToneWithContext<TickSourceOptions> {\n\n\treadonly name: string = \"TickSource\";\n\n\t/**\n\t * The frequency the callback function should be invoked.\n\t */\n\treadonly frequency: TickSignal<TypeName>;\n\n\t/**\n\t * The state timeline\n\t */\n\tprivate _state: StateTimeline = new StateTimeline();\n\n\t/**\n\t * The offset values of the ticks\n\t */\n\tprivate _tickOffset: Timeline<TickSourceOffsetEvent> = new Timeline();\n\n\t/**\n\t * @param frequency The initial frequency that the signal ticks at\n\t */\n\tconstructor(frequency?: number);\n\tconstructor(options?: Partial<TickSourceOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new TickSignal({\n\t\t\tcontext: this.context,\n\t\t\tunits: options.units as TypeName,\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\t// set the initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\t\t// add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t}\n\n\tstatic getDefaults(): TickSourceOptions {\n\t\treturn Object.assign({\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\" as \"hertz\",\n\t\t}, ToneWithContext.getDefaults());\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset The number of ticks to start the source at\n\t */\n\tstart(time: Time, offset?: Ticks): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (isDefined(offset)) {\n\t\t\t\tthis.setTicksAtTime(offset, computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t */\n\tstop(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// cancel the previous stop\n\t\tif (this._state.getValueAtTime(computedTime) === \"stopped\") {\n\t\t\tconst event = this._state.get(computedTime);\n\t\t\tif (event && event.time > 0) {\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis.setTicksAtTime(0, computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t * @param time When to clear the events after\n\t */\n\tcancel(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  time  When to get the tick value\n\t * @return The number of ticks\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", computedTime) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time: computedTime };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedTicks = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedTicks;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked. Returns -1 when stopped.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this.getTicksAtTime(this.now());\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n\n\t/**\n\t * The time since ticks=0 that the TickSource has been running. Accounts\n\t * for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this.getSecondsAtTime(this.now());\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\ttime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", time) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedSeconds = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedSeconds;\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\tseconds: this.frequency.getDurationOfTicks(ticks, time),\n\t\t\tticks,\n\t\t\ttime,\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\tconst offset = this._tickOffset.get(before) as TickSourceOffsetEvent;\n\t\tconst event = this._state.get(before) as StateTimelineEvent;\n\t\tconst startTime = Math.max(offset.time, event.time);\n\t\tconst absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t}\n\n\t/**\n\t * Invoke the callback event at all scheduled ticks between the\n\t * start time and the end time\n\t * @param  startTime  The beginning of the search range\n\t * @param  endTime    The end of the search range\n\t * @param  callback   The callback to invoke with each tick\n\t */\n\tforEachTickBetween(startTime: number, endTime: number, callback: (when: Seconds, ticks: Ticks) => void): this {\n\t\t// only iterate through the sections where it is \"started\"\n\t\tlet lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, event => {\n\t\t\tif (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t});\n\n\t\tlet error: Error | null = null;\n\n\t\tif (lastStateEvent && lastStateEvent.state === \"started\") {\n\t\t\tconst maxStartTime = Math.max(lastStateEvent.time, startTime);\n\t\t\t// figure out the difference between the frequency ticks and the\n\t\t\tconst startTicks = this.frequency.getTicksAtTime(maxStartTime);\n\t\t\tconst ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tconst diff = startTicks - ticksAtStart;\n\t\t\tlet offset = Math.ceil(diff) - diff;\n\t\t\t// guard against floating point issues\n\t\t\toffset = EQ(offset, 1) ? 0 : offset;\n\t\t\tlet nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\twhile (nextTickTime < endTime) {\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._state.dispose();\n\t\tthis._tickOffset.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline } from \"../util/StateTimeline\";\nimport { TickSignal } from \"./TickSignal\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n\ntype ClockCallback = (time: Seconds, ticks?: Ticks) => void;\n\ninterface ClockOptions extends ToneWithContextOptions {\n\tfrequency: Hertz;\n\tcallback: ClockCallback;\n\tunits: \"hertz\" | \"bpm\";\n}\n\ntype ClockEvent = \"start\" | \"stop\" | \"pause\";\n\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock<TypeName extends \"bpm\" | \"hertz\" = \"hertz\">\n\textends ToneWithContext<ClockOptions> implements Emitter<ClockEvent> {\n\n\treadonly name: string = \"Clock\";\n\n\t/**\n\t * The callback function to invoke at the scheduled tick.\n\t */\n\tcallback: ClockCallback = noOp;\n\n\t/**\n\t * The tick counter\n\t */\n\tprivate _tickSource: TickSource<TypeName>;\n\n\t/**\n\t * The last time the loop callback was invoked\n\t */\n\tprivate _lastUpdate = 0;\n\n\t/**\n\t * Keep track of the playback state\n\t */\n\tprivate _state: StateTimeline = new StateTimeline(\"stopped\");\n\n\t/**\n\t * Context bound reference to the _loop method\n\t * This is necessary to remove the event in the end.\n\t */\n\tprivate _boundLoop: () => void = this._loop.bind(this);\n\n\t/**\n\t * The rate the callback function should be invoked.\n\t */\n\tfrequency: TickSignal<TypeName>;\n\n\t/**\n\t * @param callback The callback to be invoked with the time of the audio event\n\t * @param frequency The rate of the callback\n\t */\n\tconstructor(callback?: ClockCallback, frequency?: Frequency);\n\tconstructor(options: Partial<ClockOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n\t\tconst options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._tickSource = new TickSource({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tunits: options.units,\n\t\t});\n\t\tthis._lastUpdate = 0;\n\t\tthis.frequency = this._tickSource.frequency;\n\t\treadOnly(this, \"frequency\");\n\n\t\t// add an initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\n\t\t// bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t}\n\n\tstatic getDefaults(): ClockOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp as ClockCallback,\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\",\n\t\t}) as ClockOptions;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset  Where the tick counter starts counting from.\n\t */\n\tstart(time?: Time, offset?: Ticks): this {\n\t\t// make sure the context is running\n\t\tassertContextRunning(this.context);\n\t\t// start the loop\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis._tickSource.start(computedTime, offset);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"start\", computedTime, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t * @example\n\t * const clock = new Tone.Clock(time => {\n\t * \tconsole.log(time);\n\t * }, 1);\n\t * clock.start();\n\t * // stop the clock after 10 seconds\n\t * clock.stop(\"+10\");\n\t */\n\tstop(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"stop\", computedTime);\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis._tickSource.stop(computedTime);\n\t\tif (computedTime < this._lastUpdate) {\n\t\t\tthis.emit(\"stop\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t\tthis._tickSource.pause(computedTime);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"pause\", computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked.\n\t */\n\tget ticks(): Ticks {\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis._tickSource.ticks = t;\n\t}\n\n\t/**\n\t * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._tickSource.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tthis._tickSource.seconds = s;\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\treturn this._tickSource.getTimeOfTick(tick, before);\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  offset The tick number.\n\t */\n\tnextTickTime(offset: Ticks, when: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst currentTick = this.getTicksAtTime(computedTime);\n\t\treturn this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n\t}\n\n\t/**\n\t * The scheduling loop.\n\t */\n\tprivate _loop(): void {\n\n\t\tconst startTime = this._lastUpdate;\n\t\tconst endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\t\tthis.log(\"loop\", startTime, endTime);\n\n\t\tif (startTime !== endTime) {\n\t\t\t// the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, e => {\n\t\t\t\tswitch (e.state) {\n\t\t\t\t\tcase \"started\":\n\t\t\t\t\t\tconst offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stopped\":\n\t\t\t\t\t\tif (e.time !== 0) {\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"paused\":\n\t\t\t\t\t\tthis.emit(\"pause\", e.time);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t * @example\n\t * const clock = new Tone.Clock();\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(computedTime);\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._tickSource.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\tonce!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\toff!: (event: ClockEvent, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Clock);\n","import { Param } from \"../context/Param\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\nexport interface DelayOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode<DelayOptions> {\n\n\treadonly name: string = \"Delay\";\n\n\t/**\n\t * Private holder of the max delay time\n\t */\n\tprivate _maxDelay: Seconds;\n\n\t/**\n\t * The amount of time the incoming signal is delayed.\n\t * @example\n\t * const delay = new Tone.Delay().toDestination();\n\t * // modulate the delayTime between 0.1 and 1 seconds\n\t * const delayLFO = new Tone.LFO(0.5, 0.1, 1).start().connect(delay.delayTime);\n\t * const pulse = new Tone.PulseOscillator().connect(delay).start();\n\t * // the change in delayTime causes the pitch to go up and down\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Private reference to the internal DelayNode\n\t */\n\tprivate _delayNode: DelayNode;\n\treadonly input: DelayNode;\n\treadonly output: DelayNode;\n\n\t/**\n\t * @param delayTime The delay applied to the incoming signal.\n\t * @param maxDelay The maximum delay time.\n\t */\n\tconstructor(delayTime?: Time, maxDelay?: Time);\n\tconstructor(options?: Partial<DelayOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n\n\t\tconst options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n\t\tconst maxDelayInSeconds = this.toSeconds(options.maxDelay);\n\t\tthis._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n\n\t\tthis._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n\n\t\tthis.delayTime = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._delayNode.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t\tminValue: 0,\n\t\t\tmaxValue: this.maxDelay,\n\t\t});\n\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): DelayOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The maximum delay time. This cannot be changed after\n\t * the value is passed into the constructor.\n\t */\n\tget maxDelay(): Seconds {\n\t\treturn this._maxDelay;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.disconnect();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n\nexport interface ToneAudioBuffersUrlMap {\n\t[name: string]: string | AudioBuffer | ToneAudioBuffer;\n\t[name: number]: string | AudioBuffer | ToneAudioBuffer;\n}\n\ninterface ToneAudioBuffersOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tonload: () => void;\n\tonerror?: (error: Error) => void;\n\tbaseUrl: string;\n}\n\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffers\";\n\n\t/**\n\t * All of the buffers\n\t */\n\tprivate _buffers: Map<string, ToneAudioBuffer> = new Map();\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tbaseUrl: string;\n\n\t/**\n\t * Keep track of the number of loaded buffers\n\t */\n\tprivate _loadingCount = 0;\n\n\t/**\n\t * @param  urls  An object literal or array of urls to load.\n\t * @param onload  The callback to invoke when the buffers are loaded.\n\t * @param baseUrl A prefix url to add before all the urls\n\t */\n\tconstructor(\n\t\turls?: ToneAudioBuffersUrlMap,\n\t\tonload?: () => void,\n\t\tbaseUrl?: string,\n\t);\n\tconstructor(options?: Partial<ToneAudioBuffersOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\t\tconst options = optionsFromArguments(\n\t\t\tToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\",\n\t\t);\n\n\t\tthis.baseUrl = options.baseUrl;\n\t\t// add each one\n\t\tObject.keys(options.urls).forEach(name => {\n\t\t\tthis._loadingCount++;\n\t\t\tconst url = options.urls[name];\n\t\t\tthis.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n\t\t});\n\n\t}\n\n\tstatic getDefaults(): ToneAudioBuffersOptions {\n\t\treturn {\n\t\t\tbaseUrl: \"\",\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\turls: {},\n\t\t};\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param  name  The key or index of the buffer.\n\t */\n\thas(name: string | number): boolean {\n\t\treturn this._buffers.has(name.toString());\n\t}\n\n\t/**\n\t * Get a buffer by name. If an array was loaded,\n\t * then use the array index.\n\t * @param  name  The key or index of the buffer.\n\t */\n\tget(name: string | number): ToneAudioBuffer {\n\t\tassert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n\t\treturn this._buffers.get(name.toString()) as ToneAudioBuffer;\n\t}\n\n\t/**\n\t * A buffer was loaded. decrement the counter.\n\t */\n\tprivate _bufferLoaded(callback: () => void): void {\n\t\tthis._loadingCount--;\n\t\tif (this._loadingCount === 0 && callback) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n\t}\n\n\t/**\n\t * Add a buffer by name and url to the Buffers\n\t * @param  name      A unique name to give the buffer\n\t * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t * @param  onerror  Invoked if the buffer can't be loaded\n\t */\n\tadd(\n\t\tname: string | number,\n\t\turl: string | AudioBuffer | ToneAudioBuffer,\n\t\tcallback: () => void = noOp,\n\t\tonerror: (e: Error) => void = noOp,\n\t): this {\n\t\tif (isString(url)) {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n\t\t} else {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.forEach(buffer => buffer.dispose());\n\t\tthis._buffers.clear();\n\t\treturn this;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\nimport { TransportTimeClass } from \"./TransportTime\";\nimport { Seconds, Ticks } from \"./Units\";\n\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass<Ticks> {\n\n\treadonly name: string = \"Ticks\";\n\n\treadonly defaultUnits: TimeBaseUnit = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t */\n\tprotected _now(): Ticks {\n\t\treturn this.context.transport.ticks;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Ticks {\n\t\treturn this._getPPQ() * beats;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Ticks {\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Ticks {\n\t\treturn ticks;\n\t}\n\n\t/**\n\t * Return the time in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\treturn this.valueOf() as Ticks;\n\t}\n\n\t/**\n\t * Return the time in seconds\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t}\n}\n\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value?: TimeValue, units?: TimeBaseUnit): TicksClass {\n\treturn new TicksClass(getContext(), value, units);\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n\ninterface DrawEvent extends TimelineEvent {\n\tcallback: () => void;\n}\n\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext<ToneWithContextOptions> {\n\n\treadonly name: string = \"Draw\";\n\n\t/**\n\t * The duration after which events are not invoked.\n\t */\n\texpiration: Seconds = 0.25;\n\n\t/**\n\t * The amount of time before the scheduled time\n\t * that the callback can be invoked. Default is\n\t * half the time of an animation frame (0.008 seconds).\n\t */\n\tanticipation: Seconds = 0.008;\n\n\t/**\n\t * All of the events.\n\t */\n\tprivate _events: Timeline<DrawEvent> = new Timeline();\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _boundDrawLoop = this._drawLoop.bind(this);\n\n\t/**\n\t * The animation frame id\n\t */\n\tprivate _animationFrame = -1;\n\n\t/**\n\t * Schedule a function at the given time to be invoked\n\t * on the nearest animation frame.\n\t * @param  callback  Callback is invoked at the given time.\n\t * @param  time      The time relative to the AudioContext time to invoke the callback.\n\t * @example\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tTone.Draw.schedule(() => console.log(time), time);\n\t * }, 1);\n\t * Tone.Transport.start();\n\t */\n\tschedule(callback: () => void, time: Time): this {\n\t\tthis._events.add({\n\t\t\tcallback,\n\t\t\ttime: this.toSeconds(time),\n\t\t});\n\t\t// start the draw loop on the first event\n\t\tif (this._events.length === 1) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events scheduled after the given time\n\t * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._events.cancel(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _drawLoop(): void {\n\t\tconst now = this.context.currentTime;\n\t\twhile (this._events.length && (this._events.peek() as DrawEvent).time - this.anticipation <= now) {\n\t\t\tconst event = this._events.shift();\n\t\t\tif (event && now - event.time <= this.expiration) {\n\t\t\t\tevent.callback();\n\t\t\t}\n\t\t}\n\t\tif (this._events.length > 0) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\tcancelAnimationFrame(this._animationFrame);\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.draw = new Draw({ context });\n});\n\nonContextClose(context => {\n\tcontext.draw.dispose();\n});\n","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n\n/**\n * An IntervalTimeline event must have a time and duration\n */\nexport interface IntervalTimelineEvent {\n\ttime: number;\n\tduration: number;\n\t[propName: string]: any;\n}\n\ntype IteratorCallback = (event: IntervalTimelineEvent) => void;\n\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n\n\treadonly name: string = \"IntervalTimeline\";\n\n\t/**\n\t * The root node of the inteval tree\n\t */\n\tprivate _root: IntervalNode | null = null;\n\n\t/**\n\t * Keep track of the length of the timeline.\n\t */\n\tprivate _length = 0;\n\n\t/**\n\t * The event to add to the timeline. All events must\n\t * have a time and duration value\n\t * @param  event  The event to add to the timeline\n\t */\n\tadd(event: IntervalTimelineEvent): this {\n\t\tassert(isDefined(event.time), \"Events must have a time property\");\n\t\tassert(isDefined(event.duration), \"Events must have a duration parameter\");\n\n\t\tevent.time = event.time.valueOf();\n\t\tlet node: IntervalNode | null = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null) {\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null) {\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  event  The event to remove from the timeline\n\t */\n\tremove(event: IntervalTimelineEvent): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (const node of results) {\n\t\t\t\tif (node.event === event) {\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t * @readOnly\n\t */\n\tget length(): number {\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Remove events whose time time is after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tthis.forEachFrom(after, event => this.remove(event));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the root node as the given node\n\t */\n\tprivate _setRoot(node: IntervalNode | null): void {\n\t\tthis._root = node;\n\t\tif (this._root !== null) {\n\t\t\tthis._root.parent = null;\n\t\t}\n\t}\n\n\t/**\n\t * Replace the references to the node in the node's parent\n\t * with the replacement node.\n\t */\n\tprivate _replaceNodeInParent(node: IntervalNode, replacement: IntervalNode | null): void {\n\t\tif (node.parent !== null) {\n\t\t\tif (node.isLeftChild()) {\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t}\n\n\t/**\n\t * Remove the node from the tree and replace it with\n\t * a successor which follows the schema.\n\t */\n\tprivate _removeNode(node: IntervalNode): void {\n\t\tif (node.left === null && node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null) {\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tconst balance = node.getBalance();\n\t\t\tlet replacement: IntervalNode;\n\t\t\tlet temp: IntervalNode | null = null;\n\t\t\tif (balance > 0) {\n\t\t\t\tif (node.left.right === null) {\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null) {\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (replacement.parent) {\n\t\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null) {\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null) {\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\tif (replacement.parent) {\n\t\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node.parent !== null) {\n\t\t\t\tif (node.isLeftChild()) {\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\tif (temp) {\n\t\t\t\tthis._rebalance(temp);\n\t\t\t}\n\t\t}\n\t\tnode.dispose();\n\t}\n\n\t/**\n\t * Rotate the tree to the left\n\t */\n\tprivate _rotateLeft(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.right;\n\t\tif (pivotNode) {\n\t\t\tnode.right = pivotNode.left;\n\t\t\tpivotNode.left = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Rotate the tree to the right\n\t */\n\tprivate _rotateRight(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.left;\n\t\tif (pivotNode) {\n\t\t\tnode.left = pivotNode.right;\n\t\t\tpivotNode.right = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Balance the BST\n\t */\n\tprivate _rebalance(node: IntervalNode): void {\n\t\tconst balance = node.getBalance();\n\t\tif (balance > 1 && node.left) {\n\t\t\tif (node.left.getBalance() < 0) {\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1 && node.right) {\n\t\t\tif (node.right.getBalance() > 0) {\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get an event whose time and duration span the give time. Will\n\t * return the match whose \"time\" value is closest to the given time.\n\t * @return  The event which spans the desired time\n\t */\n\tget(time: number): IntervalTimelineEvent | null {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0) {\n\t\t\t\tlet max = results[0];\n\t\t\t\tfor (let i = 1; i < results.length; i++) {\n\t\t\t\t\tif (results[i].low > max.low) {\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Iterate over everything in the timeline.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst allNodes: IntervalNode[] = [];\n\t\t\tthis._root.traverse(node => allNodes.push(node));\n\t\t\tallNodes.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the given time\n\t * overlaps with the time and duration time of the event.\n\t * @param  time The time to check if items are overlapping\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the time is greater\n\t * than or equal to the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._root !== null) {\n\t\t\tthis._root.traverse(node => node.dispose());\n\t\t}\n\t\tthis._root = null;\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n\n\t// the event container\n\tevent: IntervalTimelineEvent | null;\n\t// the low value\n\tlow: number;\n\t// the high value\n\thigh: number;\n\t// the high value for this and all child nodes\n\tmax: number;\n\t// the nodes to the left\n\tprivate _left: IntervalNode | null = null;\n\t// the nodes to the right\n\tprivate _right: IntervalNode | null = null;\n\t// the parent node\n\tparent: IntervalNode | null = null;\n\t// the number of child nodes\n\theight = 0;\n\n\tconstructor(low: number, high: number, event: IntervalTimelineEvent) {\n\t\tthis.event = event;\n\t\t// the low value\n\t\tthis.low = low;\n\t\t// the high value\n\t\tthis.high = high;\n\t\t// the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t}\n\n\t/**\n\t * Insert a node into the correct spot in the tree\n\t */\n\tinsert(node: IntervalNode): void {\n\t\tif (node.low <= this.low) {\n\t\t\tif (this.left === null) {\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null) {\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which overlap\n\t * with the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearch(point: number, results: IntervalNode[]): void {\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max) {\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null) {\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point) {\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point) {\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null) {\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which are less\n\t * than the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearchAfter(point: number, results: IntervalNode[]): void {\n\t\t// Check this node\n\t\tif (this.low >= point) {\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null) {\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null) {\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Invoke the callback on this element and both it's branches\n\t * @param  {Function}  callback\n\t */\n\ttraverse(callback: (self: IntervalNode) => void): void {\n\t\tcallback(this);\n\t\tif (this.left !== null) {\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateHeight(): void {\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null) {\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateMax(): void {\n\t\tthis.max = this.high;\n\t\tif (this.left !== null) {\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t}\n\n\t/**\n\t * The balance is how the leafs are distributed on the node\n\t * @return  Negative numbers are balanced to the right\n\t */\n\tgetBalance(): number {\n\t\tlet balance = 0;\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null) {\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t}\n\n\t/**\n\t * @returns true if this node is the left child of its parent\n\t */\n\tisLeftChild(): boolean {\n\t\treturn this.parent !== null && this.parent.left === this;\n\t}\n\n\t/**\n\t * get/set the left node\n\t */\n\tget left(): IntervalNode | null {\n\t\treturn this._left;\n\t}\n\n\tset left(node: IntervalNode | null) {\n\t\tthis._left = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * get/set the right node\n\t */\n\tget right(): IntervalNode | null {\n\t\treturn this._right;\n\t}\n\n\tset right(node: IntervalNode | null) {\n\t\tthis._right = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * null out references.\n\t */\n\tdispose(): void {\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface VolumeOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode<VolumeOptions> {\n\n\treadonly name: string = \"Volume\";\n\n\t/**\n\t * the output node\n\t */\n\toutput: Gain<\"decibels\">;\n\n\t/**\n\t * Input and output are the same\n\t */\n\tinput: Gain<\"decibels\">;\n\n\t/**\n\t * The unmuted volume\n\t */\n\tprivate _unmutedVolume: Decibels;\n\n\t/**\n\t * The volume control in decibels.\n\t * @example\n\t * const vol = new Tone.Volume().toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * vol.volume.value = -20;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume the initial volume in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<VolumeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.volume,\n\t\t\tunits: \"decibels\",\n\t\t});\n\t\tthis.volume = this.output.gain;\n\t\treadOnly(this, \"volume\");\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t// set the mute initially\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): VolumeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const vol = new Tone.Volume(-12).toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * // mute the output\n\t * vol.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this.volume.value === -Infinity;\n\t}\n\tset mute(mute: boolean) {\n\t\tif (!this.mute && mute) {\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t// maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute) {\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Decibels } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { Param } from \"./Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface DestinationOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode<DestinationOptions> {\n\n\treadonly name: string = \"Destination\";\n\n\tinput: Volume = new Volume({ context: this.context });\n\toutput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The volume of the master output in decibels. -Infinity is silent, and 0 is no change. \n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * osc.start();\n\t * // ramp the volume down to silent over 10 seconds\n\t * Tone.getDestination().volume.rampTo(-Infinity, 10);\n\t */\n\tvolume: Param<\"decibels\"> = this.input.volume;\n\n\tconstructor(options: Partial<DestinationOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Destination.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Destination.getDefaults(), arguments);\n\n\t\tconnectSeries(this.input, this.output, this.context.rawContext.destination);\n\n\t\tthis.mute = options.mute;\n\t\tthis._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n\t}\n\n\tstatic getDefaults(): DestinationOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const oscillator = new Tone.Oscillator().start().toDestination();\n\t * setTimeout(() => {\n\t * \t// mute the output\n\t * \tTone.Destination.mute = true;\n\t * }, 1000);\n\t */\n\tget mute(): boolean {\n\t\treturn this.input.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis.input.mute = mute;\n\t}\n\n\t/**\n\t * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t * chained in the master effects chain.\n\t * @param args All arguments will be connected in a row and the Master will be routed through it.\n\t * @example\n\t * // route all audio through a filter and compressor\n\t * const lowpass = new Tone.Filter(800, \"lowpass\");\n\t * const compressor = new Tone.Compressor(-18);\n\t * Tone.Destination.chain(lowpass, compressor);\n\t */\n\tchain(...args: Array<AudioNode | ToneAudioNode>): this {\n\t\tthis.input.disconnect();\n\t\targs.unshift(this.input);\n\t\targs.push(this.output);\n\t\tconnectSeries(...args);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The maximum number of channels the system can output\n\t * @example\n\t * console.log(Tone.Destination.maxChannelCount);\n\t */\n\tget maxChannelCount(): number {\n\t\treturn this.context.rawContext.destination.maxChannelCount;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.destination = new Destination({ context });\n});\n\nonContextClose(context => {\n\tcontext.destination.dispose();\n});\n","import { Timeline, TimelineEvent } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\n\ninterface TimelineValueEvent<T> extends TimelineEvent {\n\tvalue: T;\n}\n\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue<Type> extends Tone {\n\n\treadonly name: string = \"TimelineValue\";\n\n\t/**\n\t * The timeline which stores the values\n\t */\n\tprivate _timeline: Timeline<TimelineValueEvent<Type>> = new Timeline({ memory: 10 })\n\n\t/**\n\t * Hold the value to return if there is no scheduled values\n\t */\n\tprivate _initialValue: Type;\n\n\t/**\n\t * @param initialValue The value to return if there is no scheduled values\n\t */\n\tconstructor(initialValue: Type) {\n\n\t\tsuper();\n\t\tthis._initialValue = initialValue;\n\t}\n\n\t/**\n\t * Set the value at the given time\n\t */\n\tset(value: Type, time: Seconds): this {\n\t\tthis._timeline.add({\n\t\t\tvalue, time\n\t\t});\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value at the given time\n\t */\n\tget(time: Seconds): Type {\n\t\tconst event = this._timeline.get(time);\n\t\tif (event) {\n\t\t\treturn event.value;\n\t\t} else {\n\t\t\treturn this._initialValue;\n\t\t}\n\t}\n}\n","import { Seconds, Ticks } from \"../type/Units\";\nimport { noOp } from \"../util/Interface\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\nexport interface TransportEventOptions {\n\tcallback: (time: number) => void;\n\tonce: boolean;\n\ttime: Ticks;\n}\n\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n\n\t/**\n\t * Reference to the Transport that created it\n\t */\n\tprotected transport: Transport;\n\n\t/**\n\t * The unique id of the event\n\t */\n\tid: number = TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t */\n\ttime: Ticks;\n\n\t/**\n\t * The callback to invoke\n\t */\n\tprivate callback?: (time: Seconds) => void;\n\n\t/**\n\t * If the event should be removed after being invoked.\n\t */\n\tprivate _once: boolean;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportEventOptions>) {\n\n\t\tconst options: TransportEventOptions = Object.assign(TransportEvent.getDefaults(), opts);\n\n\t\tthis.transport = transport;\n\t\tthis.callback = options.callback;\n\t\tthis._once = options.once;\n\t\tthis.time = options.time;\n\t}\n\n\tstatic getDefaults(): TransportEventOptions {\n\t\treturn {\n\t\t\tcallback: noOp,\n\t\t\tonce: false,\n\t\t\ttime: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Current ID counter\n\t */\n\tprivate static _eventId = 0;\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\tif (this.callback) {\n\t\t\tthis.callback(time);\n\t\t\tif (this._once) {\n\t\t\t\tthis.transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tthis.callback = undefined;\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { TransportEvent, TransportEventOptions } from \"./TransportEvent\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\ninterface TransportRepeatEventOptions extends TransportEventOptions {\n\tinterval: Ticks;\n\tduration: Ticks;\n}\n\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n\n\t/**\n\t * When the event should stop repeating\n\t */\n\tprivate duration: Ticks;\n\n\t/**\n\t * The interval of the repeated event\n\t */\n\tprivate _interval: Ticks;\n\n\t/**\n\t * The ID of the current timeline event\n\t */\n\tprivate _currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t */\n\tprivate _nextId = -1;\n\n\t/**\n\t * The time of the next event\n\t */\n\tprivate _nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t */\n\tprivate _boundRestart = this._restart.bind(this);\n\n\t/**\n\t * The audio context belonging to this event\n\t */\n\tprotected context: BaseContext;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportRepeatEventOptions>) {\n\n\t\tsuper(transport, opts);\n\n\t\tconst options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n\n\t\tthis.duration = new TicksClass(transport.context, options.duration).valueOf();\n\t\tthis._interval = new TicksClass(transport.context, options.interval).valueOf();\n\t\tthis._nextTick = options.time;\n\t\tthis.transport.on(\"start\", this._boundRestart);\n\t\tthis.transport.on(\"loopStart\", this._boundRestart);\n\t\tthis.context = this.transport.context;\n\t\tthis._restart();\n\t}\n\n\tstatic getDefaults(): TransportRepeatEventOptions {\n\t\treturn Object.assign({}, TransportEvent.getDefaults(), {\n\t\t\tduration: Infinity,\n\t\t\tinterval: 1,\n\t\t\tonce: false,\n\t\t});\n\t}\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\t// create more events if necessary\n\t\tthis._createEvents(time);\n\t\t// call the super class\n\t\tsuper.invoke(time);\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _createEvents(time: Seconds): void {\n\t\t// schedule the next event\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _restart(time?: Time): void {\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis._nextTick = this.time;\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (ticks > this.time) {\n\t\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis.transport.off(\"start\", this._boundRestart);\n\t\tthis.transport.off(\"loopStart\", this._boundRestart);\n\t\treturn this;\n\t}\n}\n","import { TimeClass } from \"../../core/type/Time\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { Signal } from \"../../signal/Signal\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport {\n\tBarsBeatsSixteenths, BPM, NormalRange, Seconds,\n\tSubdivision, Ticks, Time, TimeSignature, TransportTime\n} from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TickParam } from \"./TickParam\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n\ninterface TransportOptions extends ToneWithContextOptions {\n\tbpm: BPM;\n\tswing: NormalRange;\n\tswingSubdivision: Subdivision;\n\ttimeSignature: number;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tppq: number;\n}\n\ntype TransportEventNames = \"start\" | \"stop\" | \"pause\" | \"loop\" | \"loopEnd\" | \"loopStart\";\n\ninterface SyncedSignalEvent {\n\tsignal: Signal;\n\tinitial: number;\n\tratio: Gain;\n}\n\ntype TransportCallback = (time: Seconds) => void;\n\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext<TransportOptions> implements Emitter<TransportEventNames> {\n\n\treadonly name: string = \"Transport\";\n\n\t//-------------------------------------\n\t// \tLOOPING\n\t//-------------------------------------\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tprivate _loop: TimelineValue<boolean> = new TimelineValue(false);\n\n\t/**\n\t * The loop start position in ticks\n\t */\n\tprivate _loopStart: Ticks = 0;\n\n\t/**\n\t * The loop end position in ticks\n\t */\n\tprivate _loopEnd: Ticks = 0;\n\n\t//-------------------------------------\n\t// \tCLOCK/TEMPO\n\t//-------------------------------------\n\n\t/**\n\t * Pulses per quarter is the number of ticks per quarter note.\n\t */\n\tprivate _ppq: number;\n\n\t/**\n\t * watches the main oscillator for timing ticks\n\t * initially starts at 120bpm\n\t */\n\tprivate _clock: Clock<\"bpm\">;\n\n\t/**\n\t * The Beats Per Minute of the Transport.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * Tone.Transport.bpm.value = 80;\n\t * // start/stop the oscillator every quarter note\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"4n\");\n\t * Tone.Transport.start();\n\t * // ramp the bpm to 120 over 10 seconds\n\t * Tone.Transport.bpm.rampTo(120, 10);\n\t */\n\tbpm: TickParam<\"bpm\">;\n\n\t/**\n\t * The time signature, or more accurately the numerator\n\t * of the time signature over a denominator of 4.\n\t */\n\tprivate _timeSignature: number;\n\n\t//-------------------------------------\n\t// \tTIMELINE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * All the events in an object to keep track by ID\n\t */\n\tprivate _scheduledEvents = {};\n\n\t/**\n\t * The scheduled events.\n\t */\n\tprivate _timeline: Timeline<TransportEvent> = new Timeline();\n\n\t/**\n\t * Repeated events\n\t */\n\tprivate _repeatedEvents: IntervalTimeline = new IntervalTimeline();\n\n\t/**\n\t * All of the synced Signals\n\t */\n\tprivate _syncedSignals: SyncedSignalEvent[] = [];\n\n\t//-------------------------------------\n\t// \tSWING\n\t//-------------------------------------\n\n\t/**\n\t * The subdivision of the swing\n\t */\n\tprivate _swingTicks: Ticks;\n\n\t/**\n\t * The swing amount\n\t */\n\tprivate _swingAmount: NormalRange = 0;\n\n\tconstructor(options?: Partial<TransportOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Transport.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Transport.getDefaults(), arguments);\n\n\t\t// CLOCK/TEMPO\n\t\tthis._ppq = options.ppq;\n\t\tthis._clock = new Clock({\n\t\t\tcallback: this._processTick.bind(this),\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 0,\n\t\t\tunits: \"bpm\",\n\t\t});\n\t\tthis._bindClockEvents();\n\t\tthis.bpm = this._clock.frequency as unknown as TickParam<\"bpm\">;\n\t\tthis._clock.frequency.multiplier = options.ppq;\n\t\tthis.bpm.setValueAtTime(options.bpm, 0);\n\t\treadOnly(this, \"bpm\");\n\t\tthis._timeSignature = options.timeSignature;\n\n\t\t// SWING\n\t\tthis._swingTicks = options.ppq / 2; // 8n\n\t}\n\n\tstatic getDefaults(): TransportOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tbpm: 120,\n\t\t\tloopEnd: \"4m\" as Subdivision,\n\t\t\tloopStart: 0,\n\t\t\tppq: 192,\n\t\t\tswing: 0,\n\t\t\tswingSubdivision: \"8n\" as Subdivision,\n\t\t\ttimeSignature: 4,\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tTICKS\n\t//-------------------------------------\n\n\t/**\n\t * called on every tick\n\t * @param  tickTime clock relative tick time\n\t */\n\tprivate _processTick(tickTime: Seconds, ticks: Ticks): void {\n\t\t// do the loop test\n\t\tif (this._loop.get(tickTime)) {\n\t\t\tif (ticks >= this._loopEnd) {\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t// handle swing\n\t\tif (this._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && // not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0) {\n\t\t\t// add some swing\n\t\t\tconst progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tconst amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\t\ttickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n\t\t}\n\t\t// invoke the timeline events scheduled on this tick\n\t\tthis._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n\t}\n\n\t//-------------------------------------\n\t// \tSCHEDULABLE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * Schedule an event along the timeline.\n\t * @param callback The callback to be invoked at the time.\n\t * @param time The time to invoke the callback at.\n\t * @return The id of the event which can be used for canceling the event.\n\t * @example\n\t * // schedule an event on the 16th measure\n\t * Tone.Transport.schedule((time) => {\n\t * \t// invoked on measure 16\n\t * \tconsole.log(\"measure 16!\");\n\t * }, \"16:0:0\");\n\t */\n\tschedule(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Schedule a repeated event along the timeline. The event will fire\n\t * at the `interval` starting at the `startTime` and for the specified\n\t * `duration`.\n\t * @param  callback   The callback to invoke.\n\t * @param  interval   The duration between successive callbacks. Must be a positive number.\n\t * @param  startTime  When along the timeline the events should start being invoked.\n\t * @param  duration How long the event should repeat.\n\t * @return  The ID of the scheduled event. Use this to cancel the event.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat((time) => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"8n\", \"1m\");\n\t */\n\tscheduleRepeat(\n\t\tcallback: TransportCallback,\n\t\tinterval: Time | TimeClass,\n\t\tstartTime?: TransportTime | TransportTimeClass,\n\t\tduration: Time = Infinity,\n\t): number {\n\t\tconst event = new TransportRepeatEvent(this, {\n\t\t\tcallback,\n\t\t\tduration: new TimeClass(this.context, duration).toTicks(),\n\t\t\tinterval: new TimeClass(this.context, interval).toTicks(),\n\t\t\ttime: new TransportTimeClass(this.context, startTime).toTicks(),\n\t\t});\n\t\t// kick it off if the Transport is started\n\t\t// @ts-ignore\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t}\n\n\t/**\n\t * Schedule an event that will be removed after it is invoked.\n\t * @param callback The callback to invoke once.\n\t * @param time The time the callback should be invoked.\n\t * @returns The ID of the scheduled event.\n\t */\n\tscheduleOnce(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\tonce: true,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Clear the passed in event id from the timeline\n\t * @param eventId The id of the event.\n\t */\n\tclear(eventId: number): this {\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t\tconst item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @returns the event id which was just added\n\t */\n\tprivate _addEvent(event: TransportEvent, timeline: Timeline<TransportEvent>): number {\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\tevent,\n\t\t\ttimeline,\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t}\n\n\t/**\n\t * Remove scheduled events from the timeline after\n\t * the given time. Repeated events will be removed\n\t * if their startTime is after the given time\n\t * @param after Clear all events after this time.\n\t */\n\tcancel(after: TransportTime = 0): this {\n\t\tconst computedAfter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\tthis._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSTART/STOP/PAUSE\n\t//-------------------------------------\n\n\t/**\n\t * Bind start/stop/pause events from the clock and emit them.\n\t */\n\tprivate _bindClockEvents(): void {\n\t\tthis._clock.on(\"start\", (time, offset) => {\n\t\t\toffset = new TicksClass(this.context, offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t});\n\n\t\tthis._clock.on(\"stop\", (time) => {\n\t\t\tthis.emit(\"stop\", time);\n\t\t});\n\n\t\tthis._clock.on(\"pause\", (time) => {\n\t\t\tthis.emit(\"pause\", time);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the transport and all sources synced to the transport.\n\t * @param  time The time when the transport should start.\n\t * @param  offset The timeline offset to start the transport.\n\t * @example\n\t * // start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tstart(time?: Time, offset?: TransportTime): this {\n\t\tlet offsetTicks;\n\t\tif (isDefined(offset)) {\n\t\t\toffsetTicks = this.toTicks(offset);\n\t\t}\n\t\t// start the clock\n\t\tthis._clock.start(time, offsetTicks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the transport and all sources synced to the transport.\n\t * @param time The time when the transport should stop.\n\t * @example\n\t * Tone.Transport.stop();\n\t */\n\tstop(time?: Time): this {\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the transport and all sources synced to the transport.\n\t */\n\tpause(time?: Time): this {\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  time The time of the event\n\t */\n\ttoggle(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== \"started\") {\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSETTERS/GETTERS\n\t//-------------------------------------\n\n\t/**\n\t * The time signature as just the numerator over 4.\n\t * For example 4/4 would be just 4 and 6/8 would be 3.\n\t * @example\n\t * // common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * // this will be reduced to a single number\n\t * Tone.Transport.timeSignature; // returns 3.5\n\t */\n\tget timeSignature(): TimeSignature {\n\t\treturn this._timeSignature;\n\t}\n\tset timeSignature(timeSig: TimeSignature) {\n\t\tif (isArray(timeSig)) {\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the starting position of the loop.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n\t}\n\tset loopStart(startPosition: Time) {\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the ending position of the loop.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n\t}\n\tset loopEnd(endPosition: Time) {\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop.get(this.now());\n\t}\n\tset loop(loop) {\n\t\tthis._loop.set(loop, this.now());\n\t}\n\n\t/**\n\t * Set the loop start and stop at the same time.\n\t * @example\n\t * // loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tsetLoopPoints(startPosition: TransportTime, endPosition: TransportTime): this {\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n\t */\n\tget swing(): NormalRange {\n\t\treturn this._swingAmount;\n\t}\n\tset swing(amount: NormalRange) {\n\t\t// scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n\n\t/**\n\t * Set the subdivision which the swing will be applied to.\n\t * The default value is an 8th note. Value must be less\n\t * than a quarter note.\n\t */\n\tget swingSubdivision(): Subdivision {\n\t\treturn new TicksClass(this.context, this._swingTicks).toNotation();\n\t}\n\tset swingSubdivision(subdivision: Subdivision) {\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n\n\t/**\n\t * The Transport's position in Bars:Beats:Sixteenths.\n\t * Setting the value will jump to that position right away.\n\t */\n\tget position(): BarsBeatsSixteenths | Time {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\treturn new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n\t}\n\tset position(progress: Time) {\n\t\tconst ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's position in seconds\n\t * Setting the value will jump to that position right away.\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._clock.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.frequency.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's loop position as a normalized value. Always\n\t * returns 0 if the transport if loop is not true.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this.loop) {\n\t\t\tconst now = this.now();\n\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The transports current tick position.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this._clock.ticks;\n\t}\n\tset ticks(t: Ticks) {\n\t\tif (this._clock.ticks !== t) {\n\t\t\tconst now = this.now();\n\t\t\t// stop everything synced to the transport\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\t\t// schedule to start on the next tick, #573\n\t\t\t\tconst remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n\t\t\t\tconst time = now + remainingTick;\n\t\t\t\tthis.emit(\"stop\", time);\n\t\t\t\tthis._clock.setTicksAtTime(t, time);\n\t\t\t\t// restart it with the new time\n\t\t\t\tthis.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn Math.round(this._clock.getTicksAtTime(time));\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._clock.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Pulses Per Quarter note. This is the smallest resolution\n\t * the Transport timing supports. This should be set once\n\t * on initialization and not set again. Changing this value\n\t * after other objects have been created can cause problems.\n\t */\n\tget PPQ(): number {\n\t\treturn this._clock.frequency.multiplier;\n\t}\n\tset PPQ(ppq: number) {\n\t\tthis._clock.frequency.multiplier = ppq;\n\t}\n\n\t//-------------------------------------\n\t// \tSYNCING\n\t//-------------------------------------\n\n\t/**\n\t * Returns the time aligned to the next subdivision\n\t * of the Transport. If the Transport is not started,\n\t * it will return 0.\n\t * Note: this will not work precisely during tempo ramps.\n\t * @param  subdivision  The subdivision to quantize to\n\t * @return  The context time of the next subdivision.\n\t * @example\n\t * // the transport must be started, otherwise returns 0\n\t * Tone.Transport.start(); \n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tnextSubdivision(subdivision?: Time): Seconds {\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== \"started\") {\n\t\t\t// if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconst now = this.now();\n\t\t\t// the remainder of the current ticks and the subdivision\n\t\t\tconst transportPos = this.getTicksAtTime(now);\n\t\t\tconst remainingTicks = subdivision - transportPos % subdivision;\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t}\n\n\t/**\n\t * Attaches the signal to the tempo control signal so that\n\t * any changes in the tempo will change the signal in the same\n\t * ratio.\n\t *\n\t * @param signal\n\t * @param ratio Optionally pass in the ratio between the two signals.\n\t * \t\t\tOtherwise it will be computed based on their current values.\n\t */\n\tsyncSignal(signal: Signal<any>, ratio?: number): this {\n\t\tif (!ratio) {\n\t\t\t// get the sync ratio\n\t\t\tconst now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0) {\n\t\t\t\tconst bpm = this.bpm.getValueAtTime(now);\n\t\t\t\tconst computedFreq = 1 / (60 / bpm / this.PPQ);\n\t\t\t\tratio = signal.getValueAtTime(now) / computedFreq;\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tconst ratioSignal = new Gain(ratio);\n\t\t// @ts-ignore\n\t\tthis.bpm.connect(ratioSignal);\n\t\t// @ts-ignore\n\t\tratioSignal.connect(signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\tinitial: signal.value,\n\t\t\tratio: ratioSignal,\n\t\t\tsignal,\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsyncs a previously synced signal from the transport's control.\n\t * See Transport.syncSignal.\n\t */\n\tunsyncSignal(signal: Signal<any>): this {\n\t\tfor (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t\tconst syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal) {\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._clock.dispose();\n\t\twritable(this, \"bpm\");\n\t\tthis._timeline.dispose();\n\t\tthis._repeatedEvents.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\tonce!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\toff!: (event: TransportEventNames, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Transport);\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.transport = new Transport({ context });\n});\n\nonContextClose(context => {\n\tcontext.transport.dispose();\n});\n","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Seconds, Time } from \"../core/type/Units\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { BasicPlaybackState, StateTimeline, StateTimelineEvent } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n\ntype onStopCallback = (source: Source<any>) => void;\n\nexport interface SourceOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n\tonstop: onStopCallback;\n}\n\n/**\n * Base class for sources. \n * start/stop of this.context.transport.\n * \n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport abstract class Source<Options extends SourceOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The output note\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * Sources have no inputs\n\t */\n\tinput = undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const source = new Tone.PWMOscillator().toDestination();\n\t * source.volume.value = -6;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * The callback to invoke when the source is stopped.\n\t */\n\tonstop: onStopCallback;\n\n\t/**\n\t * Keep track of the scheduled state.\n\t */\n\tprotected _state: StateTimeline<{\n\t\tduration?: Seconds;\n\t\toffset?: Seconds;\n\t\t/**\n\t\t * Either the buffer is explicitly scheduled to end using the stop method,\n\t\t * or it's implicitly ended when the buffer is over.\n\t\t */\n\t\timplicitEnd?: boolean;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The synced `start` callback function from the transport\n\t */\n\tprotected _synced = false;\n\n\t/**\n\t * Keep track of all of the scheduled event ids\n\t */\n\tprivate _scheduled: number[] = [];\n\n\t/**\n\t * Placeholder functions for syncing/unsyncing to transport\n\t */\n\tprivate _syncedStart: (time: Seconds, offset: Seconds) => void = noOp;\n\tprivate _syncedStop: (time: Seconds) => void = noOp;\n\n\tconstructor(options: SourceOptions) {\n\t\tsuper(options);\n\t\tthis._state.memory = 100;\n\t\tthis._state.increasing = true;\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tmute: options.mute,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.onstop = options.onstop;\n\t}\n\n\tstatic getDefaults(): SourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tonstop: noOp,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n\t * \tplayer.start();\n\t * \tconsole.log(player.state);\n\t * }).toDestination();\n\t */\n\tget state(): BasicPlaybackState {\n\t\tif (this._synced) {\n\t\t\tif (this.context.transport.state === \"started\") {\n\t\t\t\treturn this._state.getValueAtTime(this.context.transport.seconds) as BasicPlaybackState;\n\t\t\t} else {\n\t\t\t\treturn \"stopped\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now()) as BasicPlaybackState;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // mute the output\n\t * osc.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t// overwrite these functions\n\tprotected abstract _start(time: Time, offset?: Time, duration?: Time): void;\n\tprotected abstract _stop(time: Time): void;\n\tprotected abstract _restart(time: Seconds, offset?: Time, duration?: Time): void;\n\n\t/**\n\t * Ensure that the scheduled time is not before the current time.\n\t * Should only be used when scheduled unsynced.\n\t */\n\tprivate _clampToCurrentTime(time: Seconds): Seconds {\n\t\tif (this._synced) {\n\t\t\treturn time;\n\t\t} else {\n\t\t\treturn Math.max(time, this.context.currentTime);\n\t\t}\n\t}\n\n\t/**\n\t * Start the source at the specified time. If no time is given,\n\t * start the source now.\n\t * @param  time When the source should be started.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\t// if it's started, stop it and restart it\n\t\tif (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\t// time should be strictly greater than the previous start time\n\t\t\tassert(GT(computedTime, (this._state.get(computedTime) as StateTimelineEvent).time), \"Start time must be strictly greater than previous start time\");\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis.log(\"restart\", computedTime);\n\t\t\tthis.restart(computedTime, offset, duration);\n\t\t} else {\n\t\t\tthis.log(\"start\", computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (this._synced) {\n\t\t\t\t// add the offset time to the event\n\t\t\t\tconst event = this._state.get(computedTime);\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.offset = this.toSeconds(defaultArg(offset, 0));\n\t\t\t\t\tevent.duration = duration ? this.toSeconds(duration) : undefined;\n\t\t\t\t}\n\t\t\t\tconst sched = this.context.transport.schedule(t => {\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}, computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t// if the transport is already started\n\t\t\t\t// and the time is greater than where the transport is\n\t\t\t\tif (this.context.transport.state === \"started\" && \n\t\t\t\t\tthis.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n\t\t\t\t\tthis._syncedStart(this.now(), this.context.transport.seconds);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassertContextRunning(this.context);\n\t\t\t\tthis._start(computedTime, offset, duration);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the specified time. If no time is given,\n\t * stop the source now.\n\t * @param  time When the source should be stopped.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start();\n\t * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n\t */\n\tstop(time?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n\t\t\tthis.log(\"stop\", computedTime);\n\t\t\tif (!this._synced) {\n\t\t\t\tthis._stop(computedTime);\n\t\t\t} else {\n\t\t\t\tconst sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\t\t\t}\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the source.\n\t */\n\trestart(time?: Time, offset?: Time, duration?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === \"started\") {\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._restart(time, offset, duration);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the source to the Transport so that all subsequent\n\t * calls to `start` and `stop` are synced to the TransportTime\n\t * instead of the AudioContext time.\n\t *\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * osc.sync().start(0).stop(0.3);\n\t * // start the transport.\n\t * Tone.Transport.start();\n\t * // set it to loop once a second\n\t * Tone.Transport.loop = true;\n\t * Tone.Transport.loopEnd = 1;\n\t */\n\tsync(): this {\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tthis._syncedStart = (time, offset) => {\n\t\t\t\tif (offset > 0) {\n\t\t\t\t\t// get the playback state at that time\n\t\t\t\t\tconst stateEvent = this._state.get(offset);\n\t\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\t\tif (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n\t\t\t\t\t\t// get the offset\n\t\t\t\t\t\tconst startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\t\t\tlet duration: number | undefined;\n\t\t\t\t\t\tif (stateEvent.duration) {\n\t\t\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._syncedStop = time => {\n\t\t\t\tconst seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\t\t\tif (this._state.getValueAtTime(seconds) === \"started\") {\n\t\t\t\t\tthis._stop(time);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.context.transport.on(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"loopStart\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedStop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the source to the Transport. See Source.sync\n\t */\n\tunsync(): this {\n\t\tif (this._synced) {\n\t\t\tthis.context.transport.off(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"loopEnd\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.off(\"loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tthis._scheduled.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\t// stop it also\n\t\tthis._stop(0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.onstop = noOp;\n\t\tthis.unsync();\n\t\tthis._volume.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { GainFactor, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource, OneShotSourceCurve, OneShotSourceOptions } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n\nexport type ToneBufferSourceCurve = OneShotSourceCurve;\n\nexport interface ToneBufferSourceOptions extends OneShotSourceOptions {\n\turl: string | AudioBuffer | ToneAudioBuffer;\n\tcurve: ToneBufferSourceCurve;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tloop: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource<ToneBufferSourceOptions> {\n\n\treadonly name: string = \"ToneBufferSource\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _source = this.context.createBufferSource();\n\tprotected _internalChannels = [this._source];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly playbackRate: Param<\"positive\">;\n\n\t/**\n\t * The private instance of the buffer object\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * indicators if the source has started/stopped\n\t */\n\tprivate _sourceStarted = false;\n\tprivate _sourceStopped = false;\n\n\t/**\n\t * @param url The buffer to play or url to load\n\t * @param onload The callback to invoke when the buffer is done playing.\n\t */\n\tconstructor(url?: ToneAudioBuffer | AudioBuffer | string, onload?: () => void);\n\tconstructor(options?: Partial<ToneBufferSourceOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\t\tthis._source.onended = () => this._stopSource();\n\n\t\t/**\n\t\t * The playbackRate of the buffer\n\t\t */\n\t\tthis.playbackRate = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._source.playbackRate,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.playbackRate,\n\t\t});\n\n\t\t// set some values initially\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n\t\tthis._internalChannels.push(this._source);\n\t}\n\n\tstatic getDefaults(): ToneBufferSourceOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\turl: new ToneAudioBuffer(),\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(t: Time) {\n\t\tthis._fadeIn = t;\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(t: Time) {\n\t\tthis._fadeOut = t;\n\t}\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tget curve(): ToneBufferSourceCurve {\n\t\treturn this._curve;\n\t}\n\tset curve(t) {\n\t\tthis._curve = t;\n\t}\n\n\t/**\n\t * Start the buffer\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t * @param  gain  The gain to play the buffer back at.\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time, gain: GainFactor = 1): this {\n\t\tassert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\t\tconst computedTime = this.toSeconds(time);\n\n\t\t// apply the gain envelope\n\t\tthis._startGain(computedTime, gain);\n\n\t\t// if it's a loop the default offset is the loopstart point\n\t\tif (this.loop) {\n\t\t\toffset = defaultArg(offset, this.loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\t\t// make sure the offset is not less than 0\n\t\tlet computedOffset = Math.max(this.toSeconds(offset), 0);\n\n\t\t// start the buffer source\n\t\tif (this.loop) {\n\t\t\t// modify the offset if it's greater than the loop time\n\t\t\tconst loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\t\tconst loopStart = this.toSeconds(this.loopStart);\n\t\t\tconst loopDuration = loopEnd - loopStart;\n\t\t\t// move the offset back\n\t\t\tif (GTE(computedOffset, loopEnd)) {\n\t\t\t\tcomputedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n\t\t\t}\n\t\t\t// when the offset is very close to the duration, set it to 0\n\t\t\tif (EQ(computedOffset, this.buffer.duration)) {\n\t\t\t\tcomputedOffset = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// this.buffer.loaded would have return false if the AudioBuffer was undefined\n\t\tthis._source.buffer = this.buffer.get() as AudioBuffer;\n\t\tthis._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\tif (LT(computedOffset, this.buffer.duration)) {\n\t\t\tthis._sourceStarted = true;\n\t\t\tthis._source.start(computedTime, computedOffset);\n\t\t}\n\n\t\t// if a duration is given, schedule a stop\n\t\tif (isDefined(duration)) {\n\t\t\tlet computedDur = this.toSeconds(duration);\n\t\t\t// make sure it's never negative\n\t\t\tcomputedDur = Math.max(computedDur, 0);\n\t\t\tthis.stop(computedTime + computedDur);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tif (!this._sourceStopped && this._sourceStarted) {\n\t\t\tthis._sourceStopped = true;\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._onended();\n\t\t}\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._source.loopStart;\n\t}\n\tset loopStart(loopStart: Time) {\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._source.loopEnd;\n\t}\n\tset loopEnd(loopEnd: Time) {\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer: ToneAudioBuffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t */\n\tget loop(): boolean {\n\t\treturn this._source.loop;\n\t}\n\tset loop(loop: boolean) {\n\t\tthis._source.loop = loop;\n\t\tif (this._sourceStarted) {\n\t\t\tthis.cancelStop();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._buffer.dispose();\n\t\tthis.playbackRate.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Cents, Degrees, Frequency, Positive } from \"../../core/type/Units\";\nimport { Omit } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { SourceOptions } from \"../Source\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n\n/**\n * The common interface of all Oscillators\n */\nexport interface ToneOscillatorInterface {\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * osc.type = \"sine2\";\n\t * console.log(osc.baseType); // \"sine\"\n\t */\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\n\n\t/**\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator. \n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would \n\t * set the first 8 partials of the triangle wave.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\n\t * \tosc.type = \"sine2\";\n\t * }, 0.1, 1);\n\t */\n\ttype: ExtendedToneOscillatorType;\n\n\t/**\n\t * The frequency value of the oscillator\n\t * @example\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\n\t * osc.frequency.rampTo(\"D2\", 3);\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune value in cents (100th of a semitone).\n\t * @example\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\n\t * osc.stop(Tone.now() + 1.5);\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The phase is the starting position within the oscillator's cycle. For example\n\t * a phase of 180 would start halfway through the oscillator's cycle. \n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator({\n\t * \t\tfrequency: 20,\n\t * \t\tphase: 90\n\t * \t}).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\tphase: Degrees;\n\n\t/**\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator. \n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the \n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals. \n\t * \n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @example\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\n\t * setInterval(() => {\n\t * \t// generate 8 random partials\n\t * \tosc.partials = new Array(8).fill(0).map(() => Math.random());\n\t * }, 1000);\n\t */\n\tpartials: number[];\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials.\n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\n\t * not settable, but equals the length of the partials array. A square wave wave\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\n\t * can limit the number of harmonics which are used to generate the waveform.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\n\t * osc.partialCount = 1;\n\t * setInterval(() => {\n\t * \tosc.partialCount++;\n\t * \tconsole.log(osc.partialCount);\n\t * }, 500);\n\t */\n\tpartialCount?: number;\n\n\t/**\n\t * Returns an array of values which represents the waveform.\n\t * @param length The length of the waveform to return\n\t */\n\tasArray(length: number): Promise<Float32Array>;\n}\n\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport async function generateWaveform(instance: any, length: number): Promise<Float32Array> {\n\tconst duration = length / instance.context.sampleRate;\n\tconst context = new OfflineContext(1, duration, instance.context.sampleRate);\n\tconst clone = new instance.constructor(Object.assign(instance.get(), {\n\t\t// should do 2 iterations\n\t\tfrequency: 2 / duration,\n\t\t// zero out the detune\n\t\tdetune: 0,\n\t\tcontext\n\t})).toDestination();\n\tclone.start(0);\n\tconst buffer = await context.render();\n\treturn buffer.getChannelData(0);\n}\n\n/**\n * Oscillators with partials\n */\ntype SineWithPartials =\n\t\"sine1\" | \"sine2\" | \"sine3\" | \"sine4\" | \"sine5\" | \"sine6\" | \"sine7\" | \"sine8\" | \"sine9\" |\n\t\"sine10\" | \"sine11\" | \"sine12\" | \"sine13\" | \"sine14\" | \"sine15\" | \"sine16\" | \"sine17\" | \"sine18\" | \"sine19\" |\n\t\"sine20\" | \"sine21\" | \"sine22\" | \"sine23\" | \"sine24\" | \"sine25\" | \"sine26\" | \"sine27\" | \"sine28\" | \"sine29\" |\n\t\"sine30\" | \"sine31\" | \"sine32\";\n\ntype SquareWithPartials =\n\t\"square1\" | \"square2\" | \"square3\" | \"square4\" | \"square5\" | \"square6\" | \"square7\" | \"square8\" | \"square9\" |\n\t\"square10\" | \"square11\" | \"square12\" | \"square13\" | \"square14\" | \"square15\" | \"square16\" | \"square17\" | \"square18\" | \"square19\" |\n\t\"square20\" | \"square21\" | \"square22\" | \"square23\" | \"square24\" | \"square25\" | \"square26\" | \"square27\" | \"square28\" | \"square29\" |\n\t\"square30\" | \"square31\" | \"square32\";\n\ntype SawtoothWithPartials =\n\t\"sawtooth1\" | \"sawtooth2\" | \"sawtooth3\" | \"sawtooth4\" | \"sawtooth5\" | \"sawtooth6\" | \"sawtooth7\" | \"sawtooth8\" | \"sawtooth9\" |\n\t\"sawtooth10\" | \"sawtooth11\" | \"sawtooth12\" | \"sawtooth13\" | \"sawtooth14\" | \"sawtooth15\" | \"sawtooth16\" | \"sawtooth17\" | \"sawtooth18\" | \"sawtooth19\" |\n\t\"sawtooth20\" | \"sawtooth21\" | \"sawtooth22\" | \"sawtooth23\" | \"sawtooth24\" | \"sawtooth25\" | \"sawtooth26\" | \"sawtooth27\" | \"sawtooth28\" | \"sawtooth29\" |\n\t\"sawtooth30\" | \"sawtooth31\" | \"sawtooth32\";\n\ntype TriangleWithPartials =\n\t\"triangle1\" | \"triangle2\" | \"triangle3\" | \"triangle4\" | \"triangle5\" | \"triangle6\" | \"triangle7\" | \"triangle8\" | \"triangle9\" |\n\t\"triangle10\" | \"triangle11\" | \"triangle12\" | \"triangle13\" | \"triangle14\" | \"triangle15\" | \"triangle16\" | \"triangle17\" | \"triangle18\" | \"triangle19\" |\n\t\"triangle20\" | \"triangle21\" | \"triangle22\" | \"triangle23\" | \"triangle24\" | \"triangle25\" | \"triangle26\" | \"triangle27\" | \"triangle28\" | \"triangle29\" |\n\t\"triangle30\" | \"triangle31\" | \"triangle32\";\n\ntype TypeWithPartials = SineWithPartials | SquareWithPartials | TriangleWithPartials | SawtoothWithPartials;\n\ninterface BaseOscillatorOptions extends SourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tphase: Degrees;\n}\n\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\n\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\n\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\n\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\n\n/**\n * Oscillator Interfaces\n */\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type ToneOscillatorConstructorOptions = ToneCustomOscillatorOptions | ToneTypeOscillatorOptions | TonePartialOscillatorOptions;\n\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\n\ttype: ToneOscillatorType;\n\tpartialCount: number;\n\tpartials: number[];\n}\n\n/**\n * FMOscillator Interface\n */\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FMConstructorOptions = FMTypeOscillatorOptions | FMCustomOscillatorOptions | FMPartialsOscillatorOptions;\n\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\n/**\n * AMOscillator Interface\n */\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type AMConstructorOptions = AMCustomOscillatorOptions | AMTypeOscillatorOptions | AMPartialsOscillatorOptions;\n\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n/**\n * FatOscillator\n */\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FatConstructorOptions = FatCustomOscillatorOptions | FatTypeOscillatorOptions | FatPartialsOscillatorOptions;\n\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\n/**\n * Pulse Oscillator\n */\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pulse\";\n\twidth: AudioRange;\n}\n\n/**\n * PWM Oscillator\n */\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pwm\";\n\tmodulationFrequency: Frequency;\n}\n\n/**\n * OMNI OSCILLATOR\n */\n\n/**\n * FM Oscillators with partials\n */\ntype FMSineWithPartials =\n\t\"fmsine1\" | \"fmsine2\" | \"fmsine3\" | \"fmsine4\" | \"fmsine5\" | \"fmsine6\" | \"fmsine7\" | \"fmsine8\" | \"fmsine9\" |\n\t\"fmsine10\" | \"fmsine11\" | \"fmsine12\" | \"fmsine13\" | \"fmsine14\" | \"fmsine15\" | \"fmsine16\" | \"fmsine17\" | \"fmsine18\" | \"fmsine19\" |\n\t\"fmsine20\" | \"fmsine21\" | \"fmsine22\" | \"fmsine23\" | \"fmsine24\" | \"fmsine25\" | \"fmsine26\" | \"fmsine27\" | \"fmsine28\" | \"fmsine29\" |\n\t\"fmsine30\" | \"fmsine31\" | \"fmsine32\";\n\ntype FMSquareWithPartials =\n\t\"fmsquare1\" | \"fmsquare2\" | \"fmsquare3\" | \"fmsquare4\" | \"fmsquare5\" | \"fmsquare6\" | \"fmsquare7\" | \"fmsquare8\" | \"fmsquare9\" |\n\t\"fmsquare10\" | \"fmsquare11\" | \"fmsquare12\" | \"fmsquare13\" | \"fmsquare14\" | \"fmsquare15\" | \"fmsquare16\" | \"fmsquare17\" | \"fmsquare18\" | \"fmsquare19\" |\n\t\"fmsquare20\" | \"fmsquare21\" | \"fmsquare22\" | \"fmsquare23\" | \"fmsquare24\" | \"fmsquare25\" | \"fmsquare26\" | \"fmsquare27\" | \"fmsquare28\" | \"fmsquare29\" |\n\t\"fmsquare30\" | \"fmsquare31\" | \"fmsquare32\";\n\ntype FMSawtoothWithPartials =\n\t\"fmsawtooth1\" | \"fmsawtooth2\" | \"fmsawtooth3\" | \"fmsawtooth4\" | \"fmsawtooth5\" | \"fmsawtooth6\" | \"fmsawtooth7\" | \"fmsawtooth8\" | \"fmsawtooth9\" |\n\t\"fmsawtooth10\" | \"fmsawtooth11\" | \"fmsawtooth12\" | \"fmsawtooth13\" | \"fmsawtooth14\" | \"fmsawtooth15\" | \"fmsawtooth16\" | \"fmsawtooth17\" | \"fmsawtooth18\" | \"fmsawtooth19\" |\n\t\"fmsawtooth20\" | \"fmsawtooth21\" | \"fmsawtooth22\" | \"fmsawtooth23\" | \"fmsawtooth24\" | \"fmsawtooth25\" | \"fmsawtooth26\" | \"fmsawtooth27\" | \"fmsawtooth28\" | \"fmsawtooth29\" |\n\t\"fmsawtooth30\" | \"fmsawtooth31\" | \"fmsawtooth32\";\n\ntype FMTriangleWithPartials =\n\t\"fmtriangle1\" | \"fmtriangle2\" | \"fmtriangle3\" | \"fmtriangle4\" | \"fmtriangle5\" | \"fmtriangle6\" | \"fmtriangle7\" | \"fmtriangle8\" | \"fmtriangle9\" |\n\t\"fmtriangle10\" | \"fmtriangle11\" | \"fmtriangle12\" | \"fmtriangle13\" | \"fmtriangle14\" | \"fmtriangle15\" | \"fmtriangle16\" | \"fmtriangle17\" | \"fmtriangle18\" | \"fmtriangle19\" |\n\t\"fmtriangle20\" | \"fmtriangle21\" | \"fmtriangle22\" | \"fmtriangle23\" | \"fmtriangle24\" | \"fmtriangle25\" | \"fmtriangle26\" | \"fmtriangle27\" | \"fmtriangle28\" | \"fmtriangle29\" |\n\t\"fmtriangle30\" | \"fmtriangle31\" | \"fmtriangle32\";\n\ntype FMTypeWithPartials = FMSineWithPartials | FMSquareWithPartials | FMSawtoothWithPartials | FMTriangleWithPartials;\n\n/**\n * AM Oscillators with partials\n */\ntype AMSineWithPartials =\n\t\"amsine1\" | \"amsine2\" | \"amsine3\" | \"amsine4\" | \"amsine5\" | \"amsine6\" | \"amsine7\" | \"amsine8\" | \"amsine9\" |\n\t\"amsine10\" | \"amsine11\" | \"amsine12\" | \"amsine13\" | \"amsine14\" | \"amsine15\" | \"amsine16\" | \"amsine17\" | \"amsine18\" | \"amsine19\" |\n\t\"amsine20\" | \"amsine21\" | \"amsine22\" | \"amsine23\" | \"amsine24\" | \"amsine25\" | \"amsine26\" | \"amsine27\" | \"amsine28\" | \"amsine29\" |\n\t\"amsine30\" | \"amsine31\" | \"amsine32\";\n\ntype AMSquareWithPartials =\n\t\"amsquare1\" | \"amsquare2\" | \"amsquare3\" | \"amsquare4\" | \"amsquare5\" | \"amsquare6\" | \"amsquare7\" | \"amsquare8\" | \"amsquare9\" |\n\t\"amsquare10\" | \"amsquare11\" | \"amsquare12\" | \"amsquare13\" | \"amsquare14\" | \"amsquare15\" | \"amsquare16\" | \"amsquare17\" | \"amsquare18\" | \"amsquare19\" |\n\t\"amsquare20\" | \"amsquare21\" | \"amsquare22\" | \"amsquare23\" | \"amsquare24\" | \"amsquare25\" | \"amsquare26\" | \"amsquare27\" | \"amsquare28\" | \"amsquare29\" |\n\t\"amsquare30\" | \"amsquare31\" | \"amsquare32\";\n\ntype AMSawtoothWithPartials =\n\t\"amsawtooth1\" | \"amsawtooth2\" | \"amsawtooth3\" | \"amsawtooth4\" | \"amsawtooth5\" | \"amsawtooth6\" | \"amsawtooth7\" | \"amsawtooth8\" | \"amsawtooth9\" |\n\t\"amsawtooth10\" | \"amsawtooth11\" | \"amsawtooth12\" | \"amsawtooth13\" | \"amsawtooth14\" | \"amsawtooth15\" | \"amsawtooth16\" | \"amsawtooth17\" | \"amsawtooth18\" | \"amsawtooth19\" |\n\t\"amsawtooth20\" | \"amsawtooth21\" | \"amsawtooth22\" | \"amsawtooth23\" | \"amsawtooth24\" | \"amsawtooth25\" | \"amsawtooth26\" | \"amsawtooth27\" | \"amsawtooth28\" | \"amsawtooth29\" |\n\t\"amsawtooth30\" | \"amsawtooth31\" | \"amsawtooth32\";\n\ntype AMTriangleWithPartials =\n\t\"amtriangle1\" | \"amtriangle2\" | \"amtriangle3\" | \"amtriangle4\" | \"amtriangle5\" | \"amtriangle6\" | \"amtriangle7\" | \"amtriangle8\" | \"amtriangle9\" |\n\t\"amtriangle10\" | \"amtriangle11\" | \"amtriangle12\" | \"amtriangle13\" | \"amtriangle14\" | \"amtriangle15\" | \"amtriangle16\" | \"amtriangle17\" | \"amtriangle18\" | \"amtriangle19\" |\n\t\"amtriangle20\" | \"amtriangle21\" | \"amtriangle22\" | \"amtriangle23\" | \"amtriangle24\" | \"amtriangle25\" | \"amtriangle26\" | \"amtriangle27\" | \"amtriangle28\" | \"amtriangle29\" |\n\t\"amtriangle30\" | \"amtriangle31\" | \"amtriangle32\";\n\ntype AMTypeWithPartials = AMSineWithPartials | AMSquareWithPartials | AMSawtoothWithPartials | AMTriangleWithPartials;\n\n/**\n * Fat Oscillators with partials\n */\ntype FatSineWithPartials =\n\t\"fatsine1\" | \"fatsine2\" | \"fatsine3\" | \"fatsine4\" | \"fatsine5\" | \"fatsine6\" | \"fatsine7\" | \"fatsine8\" | \"fatsine9\" |\n\t\"fatsine10\" | \"fatsine11\" | \"fatsine12\" | \"fatsine13\" | \"fatsine14\" | \"fatsine15\" | \"fatsine16\" | \"fatsine17\" | \"fatsine18\" | \"fatsine19\" |\n\t\"fatsine20\" | \"fatsine21\" | \"fatsine22\" | \"fatsine23\" | \"fatsine24\" | \"fatsine25\" | \"fatsine26\" | \"fatsine27\" | \"fatsine28\" | \"fatsine29\" |\n\t\"fatsine30\" | \"fatsine31\" | \"fatsine32\";\n\ntype FatSquareWithPartials =\n\t\"fatsquare1\" | \"fatsquare2\" | \"fatsquare3\" | \"fatsquare4\" | \"fatsquare5\" | \"fatsquare6\" | \"fatsquare7\" | \"fatsquare8\" | \"fatsquare9\" |\n\t\"fatsquare10\" | \"fatsquare11\" | \"fatsquare12\" | \"fatsquare13\" | \"fatsquare14\" | \"fatsquare15\" | \"fatsquare16\" | \"fatsquare17\" | \"fatsquare18\" | \"fatsquare19\" |\n\t\"fatsquare20\" | \"fatsquare21\" | \"fatsquare22\" | \"fatsquare23\" | \"fatsquare24\" | \"fatsquare25\" | \"fatsquare26\" | \"fatsquare27\" | \"fatsquare28\" | \"fatsquare29\" |\n\t\"fatsquare30\" | \"fatsquare31\" | \"fatsquare32\";\n\ntype FatSawtoothWithPartials =\n\t\"fatsawtooth1\" | \"fatsawtooth2\" | \"fatsawtooth3\" | \"fatsawtooth4\" | \"fatsawtooth5\" | \"fatsawtooth6\" | \"fatsawtooth7\" | \"fatsawtooth8\" | \"fatsawtooth9\" |\n\t\"fatsawtooth10\" | \"fatsawtooth11\" | \"fatsawtooth12\" | \"fatsawtooth13\" | \"fatsawtooth14\" | \"fatsawtooth15\" | \"fatsawtooth16\" | \"fatsawtooth17\" | \"fatsawtooth18\" | \"fatsawtooth19\" |\n\t\"fatsawtooth20\" | \"fatsawtooth21\" | \"fatsawtooth22\" | \"fatsawtooth23\" | \"fatsawtooth24\" | \"fatsawtooth25\" | \"fatsawtooth26\" | \"fatsawtooth27\" | \"fatsawtooth28\" | \"fatsawtooth29\" |\n\t\"fatsawtooth30\" | \"fatsawtooth31\" | \"fatsawtooth32\";\n\ntype FatTriangleWithPartials =\n\t\"fattriangle1\" | \"fattriangle2\" | \"fattriangle3\" | \"fattriangle4\" | \"fattriangle5\" | \"fattriangle6\" | \"fattriangle7\" | \"fattriangle8\" | \"fattriangle9\" |\n\t\"fattriangle10\" | \"fattriangle11\" | \"fattriangle12\" | \"fattriangle13\" | \"fattriangle14\" | \"fattriangle15\" | \"fattriangle16\" | \"fattriangle17\" | \"fattriangle18\" | \"fattriangle19\" |\n\t\"fattriangle20\" | \"fattriangle21\" | \"fattriangle22\" | \"fattriangle23\" | \"fattriangle24\" | \"fattriangle25\" | \"fattriangle26\" | \"fattriangle27\" | \"fattriangle28\" | \"fattriangle29\" |\n\t\"fattriangle30\" | \"fattriangle31\" | \"fattriangle32\";\n\ntype FatTypeWithPartials = FatSineWithPartials | FatSquareWithPartials | FatSawtoothWithPartials | FatTriangleWithPartials;\n\n/**\n * Omni FM\n */\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: FMTypeWithPartials;\n}\n\n/**\n * Omni AM\n */\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amcustom\";\n\tpartials: number[];\n}\n\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: AMTypeWithPartials;\n}\n\n/**\n * Omni Fat\n */\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: FatTypeWithPartials;\n}\n\nexport type OmniOscillatorType =\n\t\"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials |\n\t\"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials |\n\t\"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials |\n\tTypeWithPartials | OscillatorType | \"pulse\" | \"pwm\";\n\nexport type OmniOscillatorOptions =\n\tPulseOscillatorOptions | PWMOscillatorOptions |\n\tOmniFatCustomOscillatorOptions | OmniFatTypeOscillatorOptions | OmniFatPartialsOscillatorOptions |\n\tOmniFMCustomOscillatorOptions | OmniFMTypeOscillatorOptions | OmniFMPartialsOscillatorOptions |\n\tOmniAMCustomOscillatorOptions | OmniAMTypeOscillatorOptions | OmniAMPartialsOscillatorOptions |\n\tToneOscillatorConstructorOptions;\n\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<T, \"frequency\" | \"detune\" | \"context\">;\n\n/**\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\n */\nexport type OmniOscillatorSynthOptions =\n\tOmitSourceOptions<PulseOscillatorOptions> | OmitSourceOptions<PWMOscillatorOptions> |\n\tOmitSourceOptions<OmniFatCustomOscillatorOptions> | OmitSourceOptions<OmniFatTypeOscillatorOptions> | OmitSourceOptions<OmniFatPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniFMCustomOscillatorOptions> | OmitSourceOptions<OmniFMTypeOscillatorOptions> | OmitSourceOptions<OmniFMPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniAMCustomOscillatorOptions> | OmitSourceOptions<OmniAMTypeOscillatorOptions> | OmitSourceOptions<OmniAMPartialsOscillatorOptions> |\n\tOmitSourceOptions<ToneCustomOscillatorOptions> | OmitSourceOptions<ToneTypeOscillatorOptions> | OmitSourceOptions<TonePartialOscillatorOptions>\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { Cents, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface ToneOscillatorNodeOptions extends OneShotSourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\ttype: OscillatorType;\n}\n\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource<ToneOscillatorNodeOptions> {\n\n\treadonly name: string = \"ToneOscillatorNode\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _oscillator = this.context.createOscillator();\n\tprotected _internalChannels = [this._oscillator];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator\n\t */\n\treadonly detune: Param<\"cents\">;\n\n\t/**\n\t * @param  frequency   The frequency value\n\t * @param  type  The basic oscillator type\n\t */\n\tconstructor(\n\t\tfrequency: Frequency,\n\t\ttype: OscillatorType,\n\t);\n\tconstructor(options?: Partial<ToneOscillatorNodeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tconnect(this._oscillator, this._gainNode);\n\n\t\tthis.type = options.type;\n\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.frequency,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.detune,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ToneOscillatorNodeOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\ttype: \"sine\" as OscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * Start the oscillator node at the given time\n\t * @param  time When to start the oscillator\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._oscillator.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\t/**\n\t * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n\t * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n\t */\n\tsetPeriodicWave(periodicWave: PeriodicWave): this {\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t */\n\tget type(): OscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type: OscillatorType) {\n\t\tthis._oscillator.type = type;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._oscillator.disconnect();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Degrees, Frequency, Radians, Time } from \"../../core/type/Units\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport {\n\tgenerateWaveform, ToneOscillatorConstructorOptions, ToneOscillatorInterface,\n\tToneOscillatorOptions, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\nexport { ToneOscillatorOptions, ToneOscillatorType } from \"./OscillatorInterface\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source<ToneOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"Oscillator\";\n\n\t/**\n\t * the main oscillator\n\t */\n\tprivate _oscillator: ToneOscillatorNode | null = null;\n\n\t/**\n\t * The frequency control.\n\t */\n\tfrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control signal.\n\t */\n\tdetune: Signal<\"cents\">;\n\n\t/**\n\t * the periodic wave\n\t */\n\tprivate _wave?: PeriodicWave;\n\n\t/**\n\t * The partials of the oscillator\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to limit or extend the periodic wave by\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * the phase of the oscillator between 0 - 360\n\t */\n\tprivate _phase!: Radians;\n\n\t/**\n\t * the type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * @param frequency Starting frequency\n\t * @param type The oscillator type. Read more about type below.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType);\n\tconstructor(options?: Partial<ToneOscillatorConstructorOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal<\"frequency\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\tthis.detune = new Signal<\"cents\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, \"detune\");\n\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\t\tthis._type = options.type;\n\n\t\tif (options.partialCount && options.type !== \"custom\") {\n\t\t\tthis._type = this.baseType + options.partialCount.toString() as ToneOscillatorType;\n\t\t}\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): ToneOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tpartialCount: 0,\n\t\t\tpartials: [],\n\t\t\tphase: 0,\n\t\t\ttype: \"sine\" as const,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// new oscillator with previous values\n\t\tconst oscillator = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\tonended: () => this.onstop(this),\n\t\t});\n\t\tthis._oscillator = oscillator;\n\t\tif (this._wave) {\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type as OscillatorType;\n\t\t}\n\t\t// connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\n\t\t// start the oscillator\n\t\tthis._oscillator.start(computedTime);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.stop(computedTime);\n\t\t}\n\t}\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t */\n\tprotected _restart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"restart\", computedTime);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t * will also affect the oscillators frequency.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * osc.frequency.value = 440;\n\t * // the ratio between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * // double the tempo\n\t * Tone.Transport.bpm.value *= 2;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tsyncFrequency(): this {\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the oscillator's frequency from the Transport.\n\t * See Oscillator.syncFrequency\n\t */\n\tunsyncFrequency(): this {\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cache the periodic waves to avoid having to redo computations\n\t */\n\tprivate static _periodicWaveCache: Array<{\n\t\tpartials: number[];\n\t\tphase: number;\n\t\ttype: string;\n\t\tpartialCount: number;\n\t\treal: Float32Array;\n\t\timag: Float32Array;\n\t\twave: PeriodicWave;\n\t}> = [];\n\n\t/**\n\t * Get a cached periodic wave. Avoids having to recompute\n\t * the oscillator values when they have already been computed\n\t * with the same values.\n\t */\n\tprivate _getCachedPeriodicWave(): { real: Float32Array; imag: Float32Array; partials: number[]; wave: PeriodicWave } | undefined {\n\t\tif (this._type === \"custom\") {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.phase === this._phase &&\n\t\t\t\t\tdeepEquals(description.partials, this._partials);\n\t\t\t});\n\t\t\treturn oscProps;\n\t\t} else {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.type === this._type &&\n\t\t\t\t\tdescription.phase === this._phase;\n\t\t\t});\n\t\t\tthis._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n\t\t\treturn oscProps;\n\t\t}\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type) {\n\t\tthis._type = type;\n\t\tconst isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\t\tif (this._phase === 0 && isBasicType) {\n\t\t\tthis._wave = undefined;\n\t\t\tthis._partialCount = 0;\n\t\t\t// just go with the basic approach\n\t\t\tif (this._oscillator !== null) {\n\t\t\t\t// already tested that it's a basic type\n\t\t\t\tthis._oscillator.type = type as OscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// first check if the value is cached\n\t\t\tconst cache = this._getCachedPeriodicWave();\n\t\t\tif (isDefined(cache)) {\n\t\t\t\tconst { partials, wave } = cache;\n\t\t\t\tthis._wave = wave;\n\t\t\t\tthis._partials = partials;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [real, imag] = this._getRealImaginary(type, this._phase);\n\t\t\t\tconst periodicWave = this.context.createPeriodicWave(real, imag);\n\t\t\t\tthis._wave = periodicWave;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t\t// set the cache\n\t\t\t\tOscillator._periodicWaveCache.push({\n\t\t\t\t\timag,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tpartials: this._partials,\n\t\t\t\t\tphase: this._phase,\n\t\t\t\t\treal,\n\t\t\t\t\ttype: this._type,\n\t\t\t\t\twave: this._wave,\n\t\t\t\t});\n\t\t\t\tif (Oscillator._periodicWaveCache.length > 100) {\n\t\t\t\t\tOscillator._periodicWaveCache.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn (this._type as string).replace(this.partialCount.toString(), \"\") as OscillatorType;\n\t}\n\tset baseType(baseType) {\n\t\tif (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n\t\t\tthis.type = baseType + this.partialCount as ToneOscillatorType;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._partialCount;\n\t}\n\tset partialCount(p) {\n\t\tassertRange(p, 0);\n\t\tlet type = this._type;\n\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial) {\n\t\t\ttype = partial[1] as OscillatorType;\n\t\t}\n\t\tif (this._type !== \"custom\") {\n\t\t\tif (p === 0) {\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString() as ToneOscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// extend or shorten the partials array\n\t\t\tconst fullPartials = new Float32Array(p);\n\t\t\t// copy over the partials array\n\t\t\tthis._partials.forEach((v, i) => fullPartials[i] = v);\n\t\t\tthis._partials = Array.from(fullPartials);\n\t\t\tthis.type = this._type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the real and imaginary components based\n\t * on the oscillator type.\n\t * @returns [real: Float32Array, imaginary: Float32Array]\n\t */\n\tprivate _getRealImaginary(type: ToneOscillatorType, phase: Radians): Float32Array[] {\n\t\tconst fftSize = 4096;\n\t\tlet periodicWaveSize = fftSize / 2;\n\n\t\tconst real = new Float32Array(periodicWaveSize);\n\t\tconst imag = new Float32Array(periodicWaveSize);\n\n\t\tlet partialCount = 1;\n\t\tif (type === \"custom\") {\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t\t// if the partial count is 0, don't bother doing any computation\n\t\t\tif (this._partials.length === 0) {\n\t\t\t\treturn [real, imag];\n\t\t\t}\n\t\t} else {\n\t\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial) {\n\t\t\t\tpartialCount = parseInt(partial[2], 10) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2], 10);\n\t\t\t\ttype = partial[1] as ToneOscillatorType;\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (let n = 1; n < periodicWaveSize; ++n) {\n\t\t\tconst piFactor = 2 / (n * Math.PI);\n\t\t\tlet b;\n\t\t\tswitch (type) {\n\t\t\t\tcase \"sine\":\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"square\":\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sawtooth\":\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"triangle\":\n\t\t\t\t\tif (n & 1) {\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"custom\":\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Oscillator: invalid type: \" + type);\n\t\t\t}\n\t\t\tif (b !== 0) {\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t}\n\n\t/**\n\t * Compute the inverse FFT for a given phase.\n\t */\n\tprivate _inverseFFT(real: Float32Array, imag: Float32Array, phase: Radians): number {\n\t\tlet sum = 0;\n\t\tconst len = real.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t}\n\n\t/**\n\t * Returns the initial value of the oscillator when stopped.\n\t * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n\t */\n\tgetInitialValue(): AudioRange {\n\t\tconst [real, imag] = this._getRealImaginary(this._type, 0);\n\t\tlet maxValue = 0;\n\t\tconst twoPi = Math.PI * 2;\n\t\tconst testPositions = 32;\n\t\t// check for peaks in 16 places\n\t\tfor (let i = 0; i < testPositions; i++) {\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n\t\t}\n\t\treturn clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._partials.slice(0, this.partialCount);\n\t}\n\tset partials(partials) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis.type = \"custom\";\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase * (180 / Math.PI);\n\t}\n\tset phase(phase) {\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t// reset the type\n\t\tthis.type = this._type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._oscillator !== null) {\n\t\t\tthis._oscillator.dispose();\n\t\t}\n\t\tthis._wave = undefined;\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n\nexport type SignalOperatorOptions = ToneAudioNodeOptions;\n\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport abstract class SignalOperator<Options extends SignalOperatorOptions> extends ToneAudioNode<Options> {\n\n\tconstructor(options?: Partial<Options>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport type WaveShaperMappingFn = (value: number, index?: number) => number;\n\ntype WaveShaperMapping = WaveShaperMappingFn | number[] | Float32Array;\n\ninterface WaveShaperOptions extends ToneAudioNodeOptions {\n\tmapping?: WaveShaperMapping;\n\tlength: number;\n\tcurve?: number[] | Float32Array;\n}\n\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator<WaveShaperOptions> {\n\n\treadonly name: string = \"WaveShaper\";\n\n\t/**\n\t * the waveshaper node\n\t */\n\tprivate _shaper: WaveShaperNode = this.context.createWaveShaper();\n\n\t/**\n\t * The input to the waveshaper node.\n\t */\n\tinput = this._shaper;\n\n\t/**\n\t * The output from the waveshaper node\n\t */\n\toutput = this._shaper;\n\n\t/**\n\t * @param mapping The function used to define the values.\n\t *                The mapping function should take two arguments:\n\t *                the first is the value at the current position\n\t *                and the second is the array position.\n\t *                If the argument is an array, that array will be\n\t *                set as the wave shaping function. The input\n\t *                signal is an AudioRange [-1, 1] value and the output\n\t *                signal can take on any numerical values.\n\t *\n\t * @param bufferLen The length of the WaveShaperNode buffer.\n\t */\n\tconstructor(mapping?: WaveShaperMapping, length?: number);\n\tconstructor(options?: Partial<WaveShaperOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n\t\tconst options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n\t\tif (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n\t\t\tthis.curve = Float32Array.from(options.mapping);\n\t\t} else if (isFunction(options.mapping)) {\n\t\t\tthis.setMap(options.mapping, options.length);\n\t\t}\n\t}\n\n\tstatic getDefaults(): WaveShaperOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tlength: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Uses a mapping function to set the value of the curve.\n\t * @param mapping The function used to define the values.\n\t *                The mapping function take two arguments:\n\t *                the first is the value at the current position\n\t *                which goes from -1 to 1 over the number of elements\n\t *                in the curve array. The second argument is the array position.\n\t * @example\n\t * const shaper = new Tone.WaveShaper();\n\t * // map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap((val, index) => (val + 1) * 5);\n\t */\n\tsetMap(mapping: WaveShaperMappingFn, length = 1024): this {\n\t\tconst array = new Float32Array(length);\n\t\tfor (let i = 0, len = length; i < len; i++) {\n\t\t\tconst normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t */\n\tget curve(): Float32Array | null {\n\t\treturn this._shaper.curve;\n\t}\n\n\tset curve(mapping: Float32Array | null) {\n\t\tthis._shaper.curve = mapping;\n\t}\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\n\tset oversample(oversampling: OverSampleType) {\n\t\tconst isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n\t\tassert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"AudioToGain\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => (x + 1) / 2,\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The GainRange output [0, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { InputNode, OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply<TypeName extends \"number\" | \"positive\" = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"Multiply\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection\n\t */\n\treadonly override = false;\n\n\t/**\n\t * the input gain node\n\t */\n\tprivate _mult: Gain;\n\n\t/**\n\t * The multiplicand input.\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The product of the input and [[factor]]\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The multiplication factor. Can be set directly or a signal can be connected to it.\n\t */\n\tfactor: Param<TypeName>;\n\n\t/**\n\t * @param value Constant value to multiple\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._mult = this.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\n\t\tthis.factor = this._param = this._mult.gain as unknown as Param<TypeName>;\n\t\tthis.factor.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tAMConstructorOptions, AMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType,\n\tToneOscillatorInterface,\n\tToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { AMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source<AMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"AMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * convert the -1,1 output to 0,1\n\t */\n\tprivate _modulationScale = new AudioToGain({ context: this.context });\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amOsc = new Tone.AMOscillator(\"D2\").toDestination().start();\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tamOsc.harmonicity.setValueAtTime(1, time);\n\t * \tamOsc.harmonicity.setValueAtTime(0.5, time + 0.5);\n\t * \tamOsc.harmonicity.setValueAtTime(1.5, time + 1);\n\t * \tamOsc.harmonicity.setValueAtTime(1, time + 2);\n\t * \tamOsc.harmonicity.linearRampToValueAtTime(2, time + 4);\n\t * }, 4);\n\t * Tone.Transport.start();\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode = new Gain({\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<AMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\t\tthis.frequency = this._carrier.frequency,\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\treadOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): AMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Seconds): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Seconds): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t}\n\n\t/**\n\t * The type of the carrier oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFMConstructorOptions, FMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { FMOscillatorOptions } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source<FMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const fmOsc = new Tone.FMOscillator(\"D2\").toDestination().start();\n\t * // pitch the modulator an octave below carrier\n\t * fmOsc.harmonicity.value = 0.5;\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<FMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: 0,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\treadOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): FMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationIndex: 2,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t\treturn this;\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { AudioRange, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PulseOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\n\nexport { PulseOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source<PulseOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PulseOscillator\";\n\n\t/**\n\t * The width of the pulse.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst pulse = new Tone.PulseOscillator(20, 0.8).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly width: Signal<\"audioRange\">;\n\n\t/**\n\t * gate the width amount\n\t */\n\tprivate _widthGate: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * the sawtooth oscillator\n\t */\n\tprivate _triangle: Oscillator;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Threshold the signal to turn it into a square\n\t */\n\tprivate _thresh = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => val <= 0 ? -1 : 1,\n\t});\n\n\t/**\n\t * @param frequency The frequency of the oscillator\n\t * @param width The width of the pulse\n\t */\n\tconstructor(frequency?: Frequency, width?: AudioRange);\n\tconstructor(options?: Partial<PulseOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n\t\tconst options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: options.width,\n\t\t});\n\n\t\tthis._triangle = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: \"triangle\",\n\t\t});\n\t\tthis.frequency = this._triangle.frequency;\n\t\tthis.detune = this._triangle.detune;\n\n\t\t// connections\n\t\tthis._triangle.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\treadOnly(this, [\"width\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PulseOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tphase: 0,\n\t\t\ttype: \"pulse\" as \"pulse\",\n\t\t\twidth: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.stop(time);\n\t\t// the width is still connected to the output.\n\t\t// that needs to be stopped also\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._triangle.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._triangle.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._triangle.phase = phase;\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t */\n\tget type(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t */\n\tget baseType(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * *Internal use* The carrier oscillator type is fed through the \n\t * waveshaper node to create the pulse. Using different carrier oscillators\n\t * changes oscillator's behavior. \n\t */\n\tset carrierType(type: \"triangle\" | \"sine\") {\n\t\tthis._triangle.type = type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up method.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._triangle.dispose();\n\t\tthis.width.dispose();\n\t\tthis._widthGate.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFatConstructorOptions, FatOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport { FatOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source<FatOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FatOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of oscillators\n\t */\n\tprivate _oscillators: Oscillator[] = [];\n\n\t/**\n\t * The total spread of the oscillators\n\t */\n\tprivate _spread: Cents;\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * The phase of the oscillators\n\t */\n\tprivate _phase: Degrees;\n\n\t/**\n\t * The partials array\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to use\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * @param frequency The oscillator's frequency.\n\t * @param type The type of the oscillator.\n\t * @param spread The detune spread between the oscillators.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, spread?: Cents);\n\tconstructor(options?: Partial<FatConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n\t\tconst options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis._spread = options.spread;\n\t\tthis._type = options.type;\n\t\tthis._phase = options.phase;\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\n\t\t// set the count initially\n\t\tthis.count = options.count;\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): FatOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tcount: 3,\n\t\t\tspread: 20,\n\t\t\ttype: \"sawtooth\",\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.start(time));\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.stop(time));\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._forEach(osc => osc.restart(time));\n\t}\n\n\t/**\n\t * Iterate over all of the oscillators\n\t */\n\tprivate _forEach(iterator: (osc: Oscillator, index: number) => void): void {\n\t\tfor (let i = 0; i < this._oscillators.length; i++) {\n\t\t\titerator(this._oscillators[i], i);\n\t\t}\n\t}\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._type = type;\n\t\tthis._forEach(osc => osc.type = type);\n\t}\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator().toDestination().start();\n\t * fatOsc.spread = 70;\n\t */\n\tget spread(): Cents {\n\t\treturn this._spread;\n\t}\n\tset spread(spread: Cents) {\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1) {\n\t\t\tconst start = -spread / 2;\n\t\t\tconst step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach((osc, i) => osc.detune.value = start + step * i);\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators. Must be an integer greater than 1.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n\t * // use 4 sawtooth oscillators\n\t * fatOsc.count = 4;\n\t */\n\tget count(): number {\n\t\treturn this._oscillators.length;\n\t}\n\tset count(count: number) {\n\t\tassertRange(count, 1);\n\t\tif (this._oscillators.length !== count) {\n\t\t\t// dispose the previous oscillators\n\t\t\tthis._forEach(osc => osc.dispose());\n\t\t\tthis._oscillators = [];\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst osc = new Oscillator({\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t\tvolume: -6 - count * 1.1,\n\t\t\t\t\ttype: this._type as NonCustomOscillatorType,\n\t\t\t\t\tphase: this._phase + (i / count) * 360,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tonstop: i === 0 ? () => this.onstop(this) : noOp,\n\t\t\t\t});\n\t\t\t\tif (this.type === \"custom\") {\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t}\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.detune.overridden = false;\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t// set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._forEach(osc => osc.start());\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._phase = phase;\n\t\tthis._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._oscillators[0].baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._forEach(osc => osc.baseType = baseType);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._oscillators[0].partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis._type = \"custom\";\n\t\t\tthis._forEach(osc => osc.partials = partials);\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillators[0].partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(osc => osc.partialCount = partialCount);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._forEach(osc => osc.dispose());\n\t\treturn this;\n\t}\n}\n","import { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PWMOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n\nexport { PWMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source<PWMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PWMOscillator\";\n\n\treadonly sourceType = \"pwm\";\n\n\t/**\n\t * the pulse oscillator\n\t */\n\tprivate _pulse: PulseOscillator;\n\t/**\n\t * the modulator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Scale the oscillator so it doesn't go silent\n\t * at the extreme values.\n\t */\n\tprivate _scale: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: 2,\n\t});\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The width modulation rate of the oscillator.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.PWMOscillator(20, 2).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly modulationFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param {Frequency} frequency The starting frequency of the oscillator.\n\t * @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t */\n\tconstructor(frequency?: Frequency, modulationFrequency?: Frequency);\n\tconstructor(options?: Partial<PWMOscillatorOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n\t\tconst options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n\n\t\tthis._pulse = new PulseOscillator({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.modulationFrequency,\n\t\t});\n\t\t// change the pulse oscillator type\n\t\tthis._pulse.carrierType = \"sine\";\n\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t});\n\n\t\tthis.frequency = this._modulator.frequency;\n\t\tthis.detune = this._modulator.detune;\n\n\t\t// connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\treadOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PWMOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tmodulationFrequency: 0.4,\n\t\t\tphase: 0,\n\t\t\ttype: \"pwm\" as \"pwm\",\n\t\t});\n\t}\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t}\n\n\t/**\n\t * restart the oscillator\n\t */\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t */\n\tget type(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t */\n\tget baseType(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._modulator.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._pulse.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._modulator.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tgenerateWaveform,\n\tOmniOscillatorOptions, \n\tOmniOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\n\nexport { OmniOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * All of the oscillator types that OmniOscillator can take on\n */\ntype AnyOscillator = Oscillator | PWMOscillator | PulseOscillator | FatOscillator | AMOscillator | FMOscillator;\n\n/**\n * All of the Oscillator constructor types mapped to their name.\n */\ninterface OmniOscillatorSource {\n\t\"fm\": FMOscillator;\n\t\"am\": AMOscillator;\n\t\"pwm\": PWMOscillator;\n\t\"pulse\": PulseOscillator;\n\t\"oscillator\": Oscillator;\n\t\"fat\": FatOscillator;\n}\n\n/**\n * The available oscillator types.\n */\nexport type OmniOscSourceType = keyof OmniOscillatorSource;\n\n// Conditional Types\ntype IsAmOrFmOscillator<Osc, Ret> = Osc extends AMOscillator ? Ret : Osc extends FMOscillator ? Ret : undefined;\ntype IsFatOscillator<Osc, Ret> = Osc extends FatOscillator ? Ret : undefined;\ntype IsPWMOscillator<Osc, Ret> = Osc extends PWMOscillator ? Ret : undefined;\ntype IsPulseOscillator<Osc, Ret> = Osc extends PulseOscillator ? Ret : undefined;\ntype IsFMOscillator<Osc, Ret> = Osc extends FMOscillator ? Ret : undefined;\n\ntype AnyOscillatorConstructor = new (...args: any[]) => AnyOscillator;\n\nconst OmniOscillatorSourceMap: {\n\t[key in OmniOscSourceType]: AnyOscillatorConstructor\n} = {\n\tam: AMOscillator,\n\tfat: FatOscillator,\n\tfm: FMOscillator,\n\toscillator: Oscillator,\n\tpulse: PulseOscillator,\n\tpwm: PWMOscillator,\n};\n\n/**\n * OmniOscillator aggregates all of the oscillator types into one. \n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator<OscType extends AnyOscillator>\n\textends Source<OmniOscillatorOptions>\n\timplements Omit<ToneOscillatorInterface, \"type\"> {\n\n\treadonly name: string = \"OmniOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The oscillator that can switch types\n\t */\n\tprivate _oscillator!: AnyOscillator;\n\n\t/**\n\t * the type of the oscillator source\n\t */\n\tprivate _sourceType!: OmniOscSourceType;\n\n\t/**\n\t * @param frequency The initial frequency of the oscillator.\n\t * @param type The type of the oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: OmniOscillatorType);\n\tconstructor(options?: Partial<OmniOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\n\t\t// set the options\n\t\tthis.set(options);\n\t}\n\n\tstatic getDefaults(): OmniOscillatorOptions {\n\t\treturn Object.assign(\n\t\t\tOscillator.getDefaults(),\n\t\t\tFMOscillator.getDefaults(),\n\t\t\tAMOscillator.getDefaults(),\n\t\t\tFatOscillator.getDefaults(),\n\t\t\tPulseOscillator.getDefaults(),\n\t\t\tPWMOscillator.getDefaults(),\n\t\t);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._oscillator.start(time);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._oscillator.restart(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not. \n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n\t * omniOsc.type = \"pwm\";\n\t * // modulationFrequency is parameter which is available\n\t * // only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t */\n\tget type(): OmniOscillatorType {\n\t\tlet prefix = \"\";\n\t\tif ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n\t\t\tprefix = this._sourceType;\n\t\t}\n\t\treturn prefix + this._oscillator.type as OmniOscillatorType;\n\t}\n\tset type(type) {\n\t\tif (type.substr(0, 2) === \"fm\") {\n\t\t\tthis._createNewOscillator(\"fm\");\n\t\t\tthis._oscillator = this._oscillator as FMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 2) === \"am\") {\n\t\t\tthis._createNewOscillator(\"am\");\n\t\t\tthis._oscillator = this._oscillator as AMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 3) === \"fat\") {\n\t\t\tthis._createNewOscillator(\"fat\");\n\t\t\tthis._oscillator = this._oscillator as FatOscillator;\n\t\t\tthis._oscillator.type = type.substr(3) as ToneOscillatorType;\n\t\t} else if (type === \"pwm\") {\n\t\t\tthis._createNewOscillator(\"pwm\");\n\t\t\tthis._oscillator = this._oscillator as PWMOscillator;\n\t\t} else if (type === \"pulse\") {\n\t\t\tthis._createNewOscillator(\"pulse\");\n\t\t} else {\n\t\t\tthis._createNewOscillator(\"oscillator\");\n\t\t\tthis._oscillator = this._oscillator as Oscillator;\n\t\t\tthis._oscillator.type = (type as ToneOscillatorType);\n\t\t}\n\t}\n\n\t/**\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillator.partialCount;\n\t}\n\tset partialCount(partialCount) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t}\n\n\tset(props: Partial<OmniOscillatorOptions>): this {\n\t\t// make sure the type is set first\n\t\tif (Reflect.has(props, \"type\") && props.type) {\n\t\t\tthis.type = props.type;\n\t\t}\n\t\t// then set the rest\n\t\tsuper.set(props);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the oscillator to the frequency and detune signals\n\t */\n\tprivate _createNewOscillator(oscType: OmniOscSourceType): void {\n\t\tif (oscType !== this._sourceType) {\n\t\t\tthis._sourceType = oscType;\n\t\t\tconst OscConstructor = OmniOscillatorSourceMap[oscType];\n\t\t\t// short delay to avoid clicks on the change\n\t\t\tconst now = this.now();\n\t\t\tif (this._oscillator) {\n\t\t\t\tconst oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t// dispose the old one\n\t\t\t\tthis.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscConstructor({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tthis._oscillator.onstop = () => this.onstop(this);\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t}\n\n\t/**\n\t * The source type of the oscillator.\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * console.log(omniOsc.sourceType); // 'fm'\n\t */\n\tget sourceType(): OmniOscSourceType {\n\t\treturn this._sourceType;\n\t}\n\tset sourceType(sType) {\n\t\t// the basetype defaults to sine\n\t\tlet baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n\t\t\tbaseType = this._oscillator.type;\n\t\t}\n\n\t\t// set the type\n\t\tif (sType === \"fm\") {\n\t\t\tthis.type = \"fm\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"am\") {\n\t\t\tthis.type = \"am\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"fat\") {\n\t\t\tthis.type = \"fat\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"oscillator\") {\n\t\t\tthis.type = baseType as OmniOscillatorType;\n\t\t} else if (sType === \"pulse\") {\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === \"pwm\") {\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n\n\tprivate _getOscType<SourceType extends OmniOscSourceType>(\n\t\tosc: AnyOscillator,\n\t\tsourceType: SourceType,\n\t): osc is OmniOscillatorSource[SourceType] {\n\t\treturn osc instanceof OmniOscillatorSourceMap[sourceType];\n\t}\n\n\t/**\n\t * The base type of the oscillator. See [[Oscillator.baseType]]\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n\t */\n\tget baseType(): OscillatorType | \"pwm\" | \"pulse\" {\n\t\treturn this._oscillator.baseType;\n\t}\n\tset baseType(baseType) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") &&\n\t\t\t!this._getOscType(this._oscillator, \"pwm\") &&\n\t\t\tbaseType !== \"pulse\" && baseType !== \"pwm\") {\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n\n\t/**\n\t * The width of the oscillator when sourceType === \"pulse\".\n\t * See [[PWMOscillator.width]]\n\t */\n\tget width(): IsPulseOscillator<OscType, Signal<\"audioRange\">> {\n\t\tif (this._getOscType(this._oscillator, \"pulse\")) {\n\t\t\treturn this._oscillator.width as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget count(): IsFatOscillator<OscType, number> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.count as IsFatOscillator<OscType, number>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, number>;\n\t\t}\n\t}\n\tset count(count) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n\n\t/**\n\t * The detune spread between the oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget spread(): IsFatOscillator<OscType, Cents> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.spread as IsFatOscillator<OscType, Cents>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, Cents>;\n\t\t}\n\t}\n\tset spread(spread) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. \n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget modulationType(): IsAmOrFmOscillator<OscType, ToneOscillatorType> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.modulationType as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t}\n\t}\n\tset modulationType(mType) {\n\t\tif ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n\n\t/**\n\t * The modulation index when the sourceType === \"fm\"\n\t * See [[FMOscillator]].\n\t */\n\tget modulationIndex(): IsFMOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\")) {\n\t\t\treturn this._oscillator.modulationIndex as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget harmonicity(): IsAmOrFmOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.harmonicity as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n\t * see [[PWMOscillator]]\n\t * @min 0.1\n\t * @max 5\n\t */\n\tget modulationFrequency(): IsPWMOscillator<OscType, Signal<\"frequency\">> {\n\t\tif (this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\treturn this._oscillator.modulationFrequency as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t}\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._oscillator.dispose();\n\t\treturn this;\n\t}\n}\n","import { assertRange } from \"./Debug\";\nimport { Time } from \"../type/Units\";\n\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, number> = new WeakMap();\n\treturn function(target: any, propertyKey: string | symbol) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: number) {\n\t\t\t\t\tassertRange(newValue, min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, Time> = new WeakMap();\n\treturn function(target: any, propertyKey: string) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: Time) {\n\t\t\t\t\tassertRange(this.toSeconds(newValue), min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n","import { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n\nexport interface PlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tplaybackRate: Positive;\n\tloop: boolean;\n\tautostart: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n\treverse: boolean;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n}\n\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source<PlayerOptions> {\n\n\treadonly name: string = \"Player\";\n\n\t/**\n\t * If the file should play as soon\n\t * as the buffer is loaded.\n\t */\n\tautostart: boolean;\n\n\t/**\n\t * The buffer\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * if the buffer should loop once it's over\n\t */\n\tprivate _loop: boolean;\n\n\t/**\n\t * if 'loop' is true, the loop will start at this position\n\t */\n\tprivate _loopStart: Time;\n\n\t/**\n\t * if 'loop' is true, the loop will end at this position\n\t */\n\tprivate _loopEnd: Time;\n\n\t/**\n\t * the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * All of the active buffer source nodes\n\t */\n\tprivate _activeSources: Set<ToneBufferSource> = new Set();\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeOut: Time;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<PlayerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis._buffer = new ToneAudioBuffer({\n\t\t\tonload: this._onload.bind(this, options.onload),\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis.autostart = options.autostart;\n\t\tthis._loop = options.loop;\n\t\tthis._loopStart = options.loopStart;\n\t\tthis._loopEnd = options.loopEnd;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.fadeIn = options.fadeIn;\n\t\tthis.fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tautostart: false,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\treverse: false,\n\t\t});\n\t}\n\n\t/**\n\t * Load the audio file as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * Note: this does not need to be called if a url\n\t * was passed in to the constructor. Only use this\n\t * if you want to manually load a new url.\n\t * @param url The url of the buffer to load. Filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tawait this._buffer.load(url);\n\t\tthis._onload();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal callback when the buffer is loaded.\n\t */\n\tprivate _onload(callback: () => void = noOp): void {\n\t\tcallback();\n\t\tif (this.autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Internal callback when the buffer is done playing.\n\t */\n\tprivate _onSourceEnd(source: ToneBufferSource): void {\n\t\t// invoke the onstop function\n\t\tthis.onstop(this);\n\n\t\t// delete the source from the active sources\n\t\tthis._activeSources.delete(source);\n\t\tif (this._activeSources.size === 0 && !this._synced &&\n\t\t\tthis._state.getValueAtTime(this.now()) === \"started\") {\n\t\t\t// remove the 'implicitEnd' event and replace with an explicit end\n\t\t\tthis._state.cancel(this.now());\n\t\t\tthis._state.setStateAtTime(\"stopped\", this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Play the buffer at the given startTime. Optionally add an offset\n\t * and/or duration which will play the buffer from a position\n\t * within the buffer for the given duration.\n\t *\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tsuper.start(time, offset, duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(startTime?: Time, offset?: Time, duration?: Time): void {\n\t\t// if it's a loop the default offset is the loopStart point\n\t\tif (this._loop) {\n\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\n\t\t// compute the values in seconds\n\t\tconst computedOffset = this.toSeconds(offset);\n\n\t\t// compute the duration which is either the passed in duration of the buffer.duration - offset\n\t\tconst origDuration = duration;\n\t\tduration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n\t\tlet computedDuration = this.toSeconds(duration);\n\n\t\t// scale it by the playback rate\n\t\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t\t// get the start time\n\t\tstartTime = this.toSeconds(startTime);\n\n\t\t// make the source\n\t\tconst source = new ToneBufferSource({\n\t\t\turl: this._buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this.fadeIn,\n\t\t\tfadeOut: this.fadeOut,\n\t\t\tloop: this._loop,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\tloopStart: this._loopStart,\n\t\t\tonended: this._onSourceEnd.bind(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\n\t\t// set the looping properties\n\t\tif (!this._loop && !this._synced) {\n\t\t\t// cancel the previous stop\n\t\t\tthis._state.cancel(startTime + computedDuration);\n\t\t\t// if it's not looping, set the state change at the end of the sample\n\t\t\tthis._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n\t\t\t\timplicitEnd: true,\n\t\t\t});\n\t\t}\n\n\t\t// add it to the array of active sources\n\t\tthis._activeSources.add(source);\n\n\t\t// start it\n\t\tif (this._loop && isUndef(origDuration)) {\n\t\t\tsource.start(startTime, computedOffset);\n\t\t} else {\n\t\t\t// subtract the fade out time\n\t\t\tsource.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n\t\t}\n\t}\n\n\t/**\n\t * Stop playback.\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(source => source.stop(computedTime));\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, \n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\tthis._stop(time);\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Seek to a specific time in the player's buffer. If the\n\t * source is no longer playing at that time, it will stop.\n\t * @param offset The time to seek to.\n\t * @param when The time for the seek event to occur.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n\t * \tplayer.start();\n\t * \t// seek to the offset in 1 second from now\n\t * \tplayer.seek(0.4, \"+1\");\n\t * }).toDestination();\n\t */\n\tseek(offset: Time, when?: Time): this {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tconst computedOffset = this.toSeconds(offset);\n\t\t\t// if it's currently playing, stop it\n\t\t\tthis._stop(computedTime);\n\t\t\t// restart it at the given time\n\t\t\tthis._start(computedTime, computedOffset);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the loop start and end. Will only loop if loop is set to true.\n\t * @param loopStart The loop start time\n\t * @param loopEnd The loop end time\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n\t * // loop between the given points\n\t * player.setLoopPoints(0.2, 0.3);\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tsetLoopPoints(loopStart: Time, loopEnd: Time): this {\n\t\tthis.loopStart = loopStart;\n\t\tthis.loopEnd = loopEnd;\n\t\treturn this;\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = loopStart;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = loopEnd;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\t// if no change, do nothing\n\t\tif (this._loop === loop) {\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t// set the loop of all of the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop) {\n\t\t\t// remove the next stopEvent\n\t\t\tconst stopEvent = this._state.getNextState(\"stopped\", this.now());\n\t\t\tif (stopEvent) {\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Normal speed is 1. The pitch will change with the playback rate.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n\t * // play at 1/4 speed\n\t * player.playbackRate = 0.25;\n\t * // play as soon as the buffer is loaded\n\t * player.autostart = true;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tconst now = this.now();\n\n\t\t// cancel the stop event since it's at a different time now\n\t\tconst stopEvent = this._state.getNextState(\"stopped\", now);\n\t\tif (stopEvent && stopEvent.implicitEnd) {\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\tthis._activeSources.forEach(source => source.cancelStop());\n\t\t}\n\n\t\t// set all the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n\n\t/**\n\t * If the buffer should be reversed\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n\t * player.autostart = true;\n\t * player.reverse = true;\n\t */\n\tget reverse(): boolean {\n\t\treturn this._buffer.reverse;\n\t}\n\tset reverse(rev) {\n\t\tthis._buffer.reverse = rev;\n\t}\n\n\t/**\n\t * If the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t// disconnect all of the players\n\t\tthis._activeSources.forEach(source => source.dispose());\n\t\tthis._activeSources.clear();\n\t\tthis._buffer.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers, ToneAudioBuffersUrlMap } from \"../../core/context/ToneAudioBuffers\";\nimport { OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { Player } from \"./Player\";\n\nexport interface PlayersOptions extends SourceOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tvolume: Decibels;\n\tmute: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode<PlayersOptions> {\n\n\treadonly name: string = \"Players\";\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * The combined output of all of the players\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * Players has no input.\n\t */\n\treadonly input = undefined;\n\n\t/**\n\t * The container of all of the players\n\t */\n\tprivate _players: Map<string, Player> = new Map();\n\n\t/**\n\t * The container of all the buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * private holder of the fadeIn time\n\t */\n\tprivate _fadeIn: Time;\n\n\t/**\n\t * private holder of the fadeOut time\n\t */\n\tprivate _fadeOut: Time;\n\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param onload The function to invoke when all buffers are loaded.\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, onload?: () => void);\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param options The remaining options associated with the players\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, options?: Partial<Omit<PlayersOptions, \"urls\">>);\n\tconstructor(options?: Partial<PlayersOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n\n\t\t/**\n\t\t * The output volume node\n\t\t */\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: options.urls, \n\t\t\tonload: options.onload, \n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror\n\t\t});\n\t\t// mute initially\n\t\tthis.mute = options.mute;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayersOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tbaseUrl: \"\",\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tmute: false,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\turls: {},\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t/**\n\t * The fadeIn time of the envelope applied to the source.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(fadeIn) {\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n\n\t/**\n\t * The fadeOut time of the each of the sources.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(fadeOut) {\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n\n\t/**\n\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t */\n\tget state(): BasicPlaybackState {\n\t\tconst playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n\t\treturn playing ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param name  The key or index of the buffer.\n\t */\n\thas(name: string): boolean {\n\t\treturn this._buffers.has(name);\n\t}\n\n\t/**\n\t * Get a player by name.\n\t * @param  name  The players name as defined in the constructor object or `add` method.\n\t */\n\tplayer(name: string): Player {\n\t\tassert(this.has(name), `No Player with the name ${name} exists on this object`);\n\t\tif (!this._players.has(name)) {\n\t\t\tconst player = new Player({\n\t\t\t\tcontext: this.context,\n\t\t\t\tfadeIn: this._fadeIn,\n\t\t\t\tfadeOut: this._fadeOut,\n\t\t\t\turl: this._buffers.get(name),\n\t\t\t}).connect(this.output);\n\t\t\tthis._players.set(name, player);\n\t\t}\n\t\treturn this._players.get(name) as Player;\n\t}\n\n\t/**\n\t * If all the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Add a player by name and url to the Players\n\t * @param  name A unique name to give the player\n\t * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n\t * @param callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(name: string, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\t\tthis._buffers.add(name, url, callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop all of the players at the given time\n\t * @param time The time to stop all of the players.\n\t */\n\tstopAll(time?: Time): this {\n\t\tthis._players.forEach(player => player.stop(time));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._players.forEach(player => player.dispose());\n\t\tthis._buffers.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"GainToAudio\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => Math.abs(x) * 2 - 1,\n\t});\n\n\t/**\n\t * The NormalRange input [0, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The AudioRange output [-1, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n\ntype BasicEnvelopeCurve = \"linear\" | \"exponential\";\ntype InternalEnvelopeCurve = BasicEnvelopeCurve | number[];\nexport type EnvelopeCurve = EnvelopeCurveName | number[];\n\nexport interface EnvelopeOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tdecay: Time;\n\tsustain: NormalRange;\n\trelease: Time;\n\tattackCurve: EnvelopeCurve;\n\treleaseCurve: EnvelopeCurve;\n\tdecayCurve: BasicEnvelopeCurve;\n}\n\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode<EnvelopeOptions> {\n\n\treadonly name: string = \"Envelope\";\n\n\t/**\n\t * When triggerAttack is called, the attack time is the amount of\n\t * time it takes for the envelope to reach it's maximum value.\n\t * ```\n\t *           /\\\n\t *          /X \\\n\t *         /XX  \\\n\t *        /XXX   \\\n\t *       /XXXX    \\___________\n\t *      /XXXXX                \\\n\t *     /XXXXXX                 \\\n\t *    /XXXXXXX                  \\\n\t *   /XXXXXXXX                   \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * After the attack portion of the envelope, the value will fall\n\t * over the duration of the decay time to it's sustain value.\n\t * ```\n\t *           /\\\n\t *          / X\\\n\t *         /  XX\\\n\t *        /   XXX\\\n\t *       /    XXXX\\___________\n\t *      /     XXXXX           \\\n\t *     /      XXXXX            \\\n\t *    /       XXXXX             \\\n\t *   /        XXXXX              \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tdecay: Time;\n\n\t/**\n\t * The sustain value is the value\n\t * which the envelope rests at after triggerAttack is\n\t * called, but before triggerRelease is invoked.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /          XXXXXXXXXXX\\\n\t *     /           XXXXXXXXXXX \\\n\t *    /            XXXXXXXXXXX  \\\n\t *   /             XXXXXXXXXXX   \\\n\t * ```\n\t */\n\t@range(0, 1)\n\tsustain: NormalRange;\n\n\t/**\n\t * After triggerRelease is called, the envelope's\n\t * value will fall to it's miminum value over the\n\t * duration of the release time.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /                    X\\\n\t *     /                     XX\\\n\t *    /                      XXX\\\n\t *   /                       XXXX\\\n\t * ```\n\t * @min 0\n\t * @max 5\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The automation curve type for the attack\n\t */\n\tprivate _attackCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the decay\n\t */\n\tprivate _decayCurve!: BasicEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the release\n\t */\n\tprivate _releaseCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * the signal which is output.\n\t */\n\tprotected _sig: Signal<\"normalRange\"> = new Signal({\n\t\tcontext: this.context,\n\t\tvalue: 0,\n\t});\n\n\t/**\n\t * The output signal of the envelope\n\t */\n\toutput: OutputNode = this._sig;\n\n\t/**\n\t * Envelope has no input\n\t */\n\tinput: InputNode | undefined = undefined;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from\n\t *                        0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis.attack = options.attack;\n\t\tthis.decay = options.decay;\n\t\tthis.sustain = options.sustain;\n\t\tthis.release = options.release;\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t}\n\n\tstatic getDefaults(): EnvelopeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.01,\n\t\t\tattackCurve: \"linear\" as EnvelopeCurveName,\n\t\t\tdecay: 0.1,\n\t\t\tdecayCurve: \"exponential\" as BasicEnvelopeCurve,\n\t\t\trelease: 1,\n\t\t\treleaseCurve: \"exponential\" as EnvelopeCurveName,\n\t\t\tsustain: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * synchronizing visual output to the envelope.\n\t */\n\tget value(): NormalRange {\n\t\treturn this.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Get the curve\n\t * @param  curve\n\t * @param  direction  In/Out\n\t * @return The curve name\n\t */\n\tprivate _getCurve(curve: InternalEnvelopeCurve, direction: EnvelopeDirection): EnvelopeCurve {\n\t\tif (isString(curve)) {\n\t\t\treturn curve;\n\t\t} else {\n\t\t\t// look up the name in the curves array\n\t\t\tlet curveName: EnvelopeCurveName;\n\t\t\tfor (curveName in EnvelopeCurves) {\n\t\t\t\tif (EnvelopeCurves[curveName][direction] === curve) {\n\t\t\t\t\treturn curveName;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the custom curve\n\t\t\treturn curve;\n\t\t}\n\t}\n\n\t/**\n\t * Assign a the curve to the given name using the direction\n\t * @param  name\n\t * @param  direction In/Out\n\t * @param  curve\n\t */\n\tprivate _setCurve(\n\t\tname: \"_attackCurve\" | \"_decayCurve\" | \"_releaseCurve\",\n\t\tdirection: EnvelopeDirection,\n\t\tcurve: EnvelopeCurve,\n\t): void {\n\t\t// check if it's a valid type\n\t\tif (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n\t\t\tconst curveDef = EnvelopeCurves[curve];\n\t\t\tif (isObject(curveDef)) {\n\t\t\t\tif (name !== \"_decayCurve\") {\n\t\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (isArray(curve) && name !== \"_decayCurve\") {\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Envelope: invalid curve: \" + curve);\n\t\t}\n\t}\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * * \"linear\"\n\t * * \"exponential\"\n\t * * \"sine\"\n\t * * \"cosine\"\n\t * * \"bounce\"\n\t * * \"ripple\"\n\t * * \"step\"\n\t *\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope(0.4).toDestination();\n\t * \tenv.attackCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget attackCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t}\n\tset attackCurve(curve) {\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\trelease: 0.8\n\t * \t}).toDestination();\n\t * \tenv.triggerAttack();\n\t * \t// release curve could also be defined by an array\n\t * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n\t * \tenv.triggerRelease(0.2);\n\t * }, 1, 1);\n\t */\n\tget releaseCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t}\n\tset releaseCurve(curve) {\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\tsustain: 0.1,\n\t * \t\tdecay: 0.5\n\t * \t}).toDestination();\n\t * \tenv.decayCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget decayCurve(): BasicEnvelopeCurve {\n\t\treturn this._decayCurve;\n\t}\n\tset decayCurve(curve) {\n\t\tassert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n\t\tthis._decayCurve = curve;\n\t}\n\n\t/**\n\t * Trigger the attack/decay portion of the ADSR envelope.\n\t * @param  time When the attack should start.\n\t * @param velocity The velocity of the envelope scales the vales.\n\t *                             number between 0-1\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t * env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tconst originalAttack = this.toSeconds(this.attack);\n\t\tlet attack = originalAttack;\n\t\tconst decay = this.toSeconds(this.decay);\n\t\t// check if it's not a complete attack\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\t// subtract the current value from the attack time\n\t\t\tconst attackRate = 1 / attack;\n\t\t\tconst remainingDistance = 1 - currentValue;\n\t\t\t// the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t// attack\n\t\tif (attack < this.sampleTime) {\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\t// case where the attack time is 0 should set instantly\n\t\t\tthis._sig.setValueAtTime(velocity, time);\n\t\t} else if (this._attackCurve === \"linear\") {\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\") {\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else {\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tlet curve = this._attackCurve;\n\t\t\t// find the starting position in the curve\n\t\t\tfor (let i = 1; i < curve.length; i++) {\n\t\t\t\t// the starting index is between the two values\n\t\t\t\tif (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t// the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t// decay\n\t\tif (decay && this.sustain < 1) {\n\t\t\tconst decayValue = velocity * this.sustain;\n\t\t\tconst decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n\t\t\t} else {\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Triggers the release of the envelope.\n\t * @param  time When the release portion of the envelope should start.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator({\n\t * \ttype: \"sawtooth\"\n\t * }).connect(env).start();\n\t * env.triggerAttack();\n\t * // trigger the release half a second after the attack\n\t * env.triggerRelease(\"+0.5\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\tconst release = this.toSeconds(this.release);\n\t\t\tif (release < this.sampleTime) {\n\t\t\t\tthis._sig.setValueAtTime(0, time);\n\t\t\t} else if (this._releaseCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\") {\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tassert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the scheduled value at the given time. This will\n\t * return the unconverted (raw) value.\n\t * @example\n\t * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n\t * env.triggerAttackRelease(2);\n\t * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n\t */\n\tgetValueAtTime(time: Time): NormalRange {\n\t\treturn this._sig.getValueAtTime(time);\n\t}\n\n\t/**\n\t * triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t * some duration, then triggerRelease.\n\t * @param duration The duration of the sustain.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity of the envelope.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the release 0.5 seconds after the attack\n\t * env.triggerAttackRelease(0.5);\n\t */\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancels all scheduled envelope changes after the given time.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._sig.cancelScheduledValues(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the envelope to a destination node.\n\t */\n\tconnect(destination: InputNode, outputNumber = 0, inputNumber = 0): this {\n\t\tconnectSignal(this, destination, outputNumber, inputNumber);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Render the envelope curve to an array of the given length. \n\t * Good for visualizing the envelope curve. Rescales the duration of the\n\t * envelope to fit the length.\n\t */\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\tconst duration = length / this.context.sampleRate;\n\t\tconst context = new OfflineContext(1, duration, this.context.sampleRate);\n\t\t// normalize the ADSR for the given duration with 20% sustain time\n\t\tconst attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n\t\tconst envelopeDuration = attackPortion + this.toSeconds(this.release);\n\t\tconst sustainTime = envelopeDuration * 0.1;\n\t\tconst totalDuration = envelopeDuration + sustainTime;\n\t\t// @ts-ignore\n\t\tconst clone = new this.constructor(Object.assign(this.get(), {\n\t\t\tattack: duration * this.toSeconds(this.attack) / totalDuration,\n\t\t\tdecay: duration * this.toSeconds(this.decay) / totalDuration,\n\t\t\trelease: duration * this.toSeconds(this.release) / totalDuration,\n\t\t\tcontext\n\t\t})) as Envelope;\n\t\tclone._sig.toDestination();\n\t\tclone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n\t\tconst buffer = await context.render();\n\t\treturn buffer.getChannelData(0);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sig.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface EnvelopeCurveObject {\n\tIn: number[];\n\tOut: number[];\n}\n\ntype EnvelopeDirection = keyof EnvelopeCurveObject;\n\ninterface EnvelopeCurveMap {\n\tlinear: \"linear\";\n\texponential: \"exponential\";\n\tbounce: EnvelopeCurveObject;\n\tcosine: EnvelopeCurveObject;\n\tsine: EnvelopeCurveObject;\n\tripple: EnvelopeCurveObject;\n\tstep: EnvelopeCurveObject;\n}\n\ntype EnvelopeCurveName = keyof EnvelopeCurveMap;\n\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves: EnvelopeCurveMap = (() => {\n\n\tconst curveLen = 128;\n\n\tlet i: number;\n\tlet k: number;\n\n\t// cosine curve\n\tconst cosineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t// ripple curve\n\tconst rippleCurve: number[] = [];\n\tconst rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++) {\n\t\tk = (i / (curveLen - 1));\n\t\tconst sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave / 10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t// stairs curve\n\tconst stairsCurve: number[] = [];\n\tconst steps = 5;\n\tfor (i = 0; i < curveLen; i++) {\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t// in-out easing curve\n\tconst sineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t// a bounce curve\n\tconst bounceCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tconst freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tconst val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t * Invert a value curve to make it work for the release\n\t */\n\tfunction invertCurve(curve: number[]): number[] {\n\t\tconst out = new Array(curve.length);\n\t\tfor (let j = 0; j < curve.length; j++) {\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * reverse the curve\n\t */\n\tfunction reverseCurve(curve: number[]): number[] {\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t * attack and release curve arrays\n\t */\n\treturn {\n\t\tbounce: {\n\t\t\tIn: invertCurve(bounceCurve),\n\t\t\tOut: bounceCurve,\n\t\t},\n\t\tcosine: {\n\t\t\tIn: cosineCurve,\n\t\t\tOut: reverseCurve(cosineCurve),\n\t\t},\n\t\texponential: \"exponential\" as \"exponential\",\n\t\tlinear: \"linear\" as \"linear\",\n\t\tripple: {\n\t\t\tIn: rippleCurve,\n\t\t\tOut: invertCurve(rippleCurve),\n\t\t},\n\t\tsine: {\n\t\t\tIn: sineCurve,\n\t\t\tOut: invertCurve(sineCurve),\n\t\t},\n\t\tstep: {\n\t\t\tIn: stairsCurve,\n\t\t\tOut: invertCurve(stairsCurve),\n\t\t},\n\t};\n})();\n","import { Volume } from \"../component/channel/Volume\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface InstrumentOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n}\n\n/**\n * Base-class for all instruments\n */\nexport abstract class Instrument<Options extends InstrumentOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output and volume triming node\n\t */\n\tprivate _volume: Volume;\n\toutput: OutputNode;\n\n\t/**\n\t * The instrument only has an output\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * amSynth.volume.value = -6;\n\t * amSynth.triggerAttackRelease(\"G#3\", 0.2);\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t */\n\tprivate _scheduledEvents: number[] = [];\n\n\t/**\n\t * If the instrument is currently synced\n\t */\n\tprivate _synced = false;\n\n\tconstructor(options?: Partial<InstrumentOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Instrument.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Instrument.getDefaults(), arguments);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t}\n\n\tstatic getDefaults(): InstrumentOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n\t * @example\n\t * const fmSynth = new Tone.FMSynth().toDestination();\n\t * fmSynth.volume.value = -6;\n\t * fmSynth.sync();\n\t * // schedule 3 notes when the transport first starts\n\t * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n\t * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n\t * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n\t * // start the transport to hear the notes\n\t * Tone.Transport.start();\n\t */\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * set _sync\n\t */\n\tprotected _syncState(): boolean {\n\t\tlet changed = false;\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param method Which method to wrap and sync\n\t * @param  timePosition What position the time argument appears in\n\t */\n\tprotected _syncMethod(method: string, timePosition: number): void {\n\t\tconst originalMethod = this[\"_original_\" + method] = this[method];\n\t\tthis[method] = (...args: any[]) => {\n\t\t\tconst time = args[timePosition];\n\t\t\tconst id = this.context.transport.schedule((t) => {\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}, time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t};\n\t}\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t */\n\tunsync(): this {\n\t\tthis._scheduledEvents.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduledEvents = [];\n\t\tif (this._synced) {\n\t\t\tthis._synced = false;\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and then the release after the duration.\n\t * @param  note     The note to trigger.\n\t * @param  duration How long the note should be held for before\n\t *                         triggering the release. This value must be greater than 0.\n\t * @param time  When the note should be triggered.\n\t * @param  velocity The velocity the note should be triggered at.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\ttriggerAttackRelease(note: Frequency, duration: Time, time?: Time, velocity?: NormalRange): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, computedTime, velocity);\n\t\tthis.triggerRelease(computedTime + computedDuration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the instrument's note.\n\t * @param note the note to trigger\n\t * @param time the time to trigger the ntoe\n\t * @param velocity the velocity to trigger the note (betwee 0-1)\n\t */\n\tabstract triggerAttack(note: Frequency, time?: Time, velocity?: NormalRange): this;\n\tprivate _original_triggerAttack = this.triggerAttack;\n\n\t/**\n\t * Trigger the release phase of the current note.\n\t * @param time when to trigger the release\n\t */\n\tabstract triggerRelease(...args: any[]): this;\n\tprivate _original_triggerRelease = this.triggerRelease;\n\n\t/**\n\t * clean up\n\t * @returns {Instrument} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = [];\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Cents, Frequency, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { Signal } from \"../signal/Signal\";\nimport { timeRange } from \"../core/util/Decorator\";\n\ntype onSilenceCallback = (instrument: Monophonic<any>) => void;\n\nexport interface MonophonicOptions extends InstrumentOptions {\n\tportamento: Seconds;\n\tonsilence: onSilenceCallback;\n\tdetune: Cents;\n}\n\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport abstract class Monophonic<Options extends MonophonicOptions> extends Instrument<Options> {\n\n\t/**\n\t * The glide time between notes.\n\t */\n\t@timeRange(0)\n\tportamento: Seconds;\n\n\t/**\n\t * Invoked when the release has finished and the output is silent.\n\t */\n\tonsilence: onSilenceCallback;\n\n\t/**\n\t * The instrument's frequency signal.\n\t */\n\tabstract readonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The instrument's detune control signal.\n\t */\n\tabstract readonly detune: Signal<\"cents\">;\n\n\tconstructor(options?: Partial<MonophonicOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Monophonic.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n\n\t\tthis.portamento = options.portamento;\n\t\tthis.onsilence = options.onsilence;\n\t}\n\n\tstatic getDefaults(): MonophonicOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tonsilence: noOp,\n\t\t\tportamento: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack of the note optionally with a given velocity.\n\t * @param  note The note to trigger.\n\t * @param  time When the note should start.\n\t * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\ttriggerAttack(note: Frequency | FrequencyClass, time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(seconds, velocity);\n\t\tthis.setNote(note, seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release portion of the envelope\n\t * @param  time If no time is given, the release happens immediatly\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // trigger the release a second from now\n\t * synth.triggerRelease(\"+1\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal method which starts the envelope attack\n\t */\n\tprotected abstract _triggerEnvelopeAttack(time: Seconds, velocity: NormalRange): void;\n\n\t/**\n\t * Internal method which starts the envelope release\n\t */\n\tprotected abstract _triggerEnvelopeRelease(time: Seconds): void;\n\n\t/**\n\t * Get the level of the output at the given time. Measures\n\t * the envelope(s) value at the time.\n\t * @param time The time to query the envelope value\n\t * @return The output level between 0-1\n\t */\n\tabstract getLevelAtTime(time: Time): NormalRange;\n\n\t/**\n\t * Set the note at the given time. If no time is given, the note\n\t * will set immediately.\n\t * @param note The note to change to.\n\t * @param  time The time when the note should be set.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t */\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\t\tif (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n\t\t\tconst portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(computedFrequency, computedTime);\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\n\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n\n\treadonly name: string = \"AmplitudeEnvelope\";\n\n\tprivate _gainNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\toutput: Gain = this._gainNode;\n\tinput: Gain = this._gainNode;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from 0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tthis._sig.connect(this._gainNode.gain);\n\t\tthis.output = this._gainNode;\n\t\tthis.input = this._gainNode;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorOptions, OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface SynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth<Options extends SynthOptions = SynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"Synth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency signal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune signal\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * @param options the options available for the synth.\n\t */\n\tconstructor(options?: RecursivePartial<SynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Synth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Synth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}, options.oscillator));\n\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): SynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.3,\n\t\t\t\t},\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"triangle\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t// if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Positive, Time } from \"../core/type/Units\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n\nexport interface MembraneSynthOptions extends SynthOptions {\n\tpitchDecay: Time;\n\toctaves: Positive;\n}\n\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth<MembraneSynthOptions> {\n\n\treadonly name: string = \"MembraneSynth\";\n\n\t/**\n\t * The number of octaves the pitch envelope ramps.\n\t * @min 0.5\n\t * @max 8\n\t */\n\t@range(0)\n\toctaves: Positive;\n\n\t/**\n\t * The amount of time the frequency envelope takes.\n\t * @min 0\n\t * @max 0.5\n\t */\n\t@timeRange(0)\n\tpitchDecay: Time;\n\n\t/**\n\t * Portamento is ignored in this synth. use pitch decay instead.\n\t */\n\treadonly portamento = 0;\n\n\t/**\n\t * @param options the options available for the synth see defaults\n\t */\n\tconstructor(options?: RecursivePartial<MembraneSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n\n\t\tthis.pitchDecay = options.pitchDecay;\n\t\tthis.octaves = options.octaves;\n\t\treadOnly(this, [\"oscillator\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MembraneSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n\t\t\tenvelope: {\n\t\t\t\tattack: 0.001,\n\t\t\t\tattackCurve: \"exponential\",\n\t\t\t\tdecay: 0.4,\n\t\t\t\trelease: 1.4,\n\t\t\t\tsustain: 0.01,\n\t\t\t},\n\t\t\toctaves: 10,\n\t\t\toscillator: {\n\t\t\t\ttype: \"sine\",\n\t\t\t},\n\t\t\tpitchDecay: 0.05,\n\t\t});\n\t}\n\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst seconds = this.toSeconds(time);\n\t\tconst hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n\t\tconst maxNote = hertz * this.octaves;\n\t\tthis.oscillator.frequency.setValueAtTime(maxNote, seconds);\n\t\tthis.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise, NoiseOptions } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n\nexport interface NoiseSynthOptions extends InstrumentOptions {\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tnoise: Omit<NoiseOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]]. \n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument<NoiseSynthOptions> {\n\n\treadonly name = \"NoiseSynth\";\n\n\t/**\n\t * The noise source.\n\t */\n\treadonly noise: Noise;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<NoiseSynthOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n\t\tthis.noise = new Noise(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.noise));\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the noise to the output\n\t\tthis.noise.chain(this.envelope, this.output);\n\t}\n\n\tstatic getDefaults(): NoiseSynthOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\tsustain: 0.0,\n\t\t\t\t},\n\t\t\t),\n\t\t\tnoise: Object.assign(\n\t\t\t\tomitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\ttype: \"white\",\n\t\t\t\t},\n\t\t\t),\n\t\t});\n\t}\n\n\t/**\n\t * Start the attack portion of the envelopes. Unlike other\n\t * instruments, Tone.NoiseSynth doesn't have a note.\n\t * @example\n\t * const noiseSynth = new Tone.NoiseSynth().toDestination();\n\t * noiseSynth.triggerAttack();\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t// start the noise\n\t\tthis.noise.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the release portion of the envelopes.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.noise.stop(time + this.toSeconds(this.envelope.release));\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 0);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.noise.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext: Set<string> = new Set();\n\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction: string) {\n\tworkletContext.add(classOrFunction);\n}\n\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name: string, classDesc: string) {\n\tconst processor = /* javascript */`registerProcessor(\"${name}\", ${classDesc})`;\n\tworkletContext.add(processor);\n}\n\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope(): string {\n\treturn Array.from(workletContext).join(\"\\n\");\n}\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\n\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\n\naddToWorklet(singleIOProcess);\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\n\naddToWorklet(delayLine);\n","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"feedback-comb-filter\";\n\nconst feedbackCombFilter = /* javascript */`\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, feedbackCombFilter);\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n\nexport interface FeedbackCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n}\n\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n * \n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the \n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the \n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode. \n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet<FeedbackCombFilterOptions> {\n\n\treadonly name = \"FeedbackCombFilter\";\n\n\t/**\n\t * The amount of delay of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param delayTime The delay time of the filter.\n\t * @param resonance The amount of feedback the filter has.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange);\n\tconstructor(options?: RecursivePartial<FeedbackCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n\t\tconst options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.delayTime = new Param<\"time\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tminValue: 0,\n\t\t\tmaxValue: 1,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\tthis.resonance = new Param<\"normalRange\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.resonance,\n\t\t\tunits: \"normalRange\",\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\treadOnly(this, [\"resonance\", \"delayTime\"]);\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\t/**\n\t * The default parameters\n\t */\n\tstatic getDefaults(): FeedbackCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst delayTime = node.parameters.get(\"delayTime\") as AudioParam;;\n\t\tthis.delayTime.setParam(delayTime);\n\t\tconst feedback = node.parameters.get(\"feedback\") as AudioParam;;\n\t\tthis.resonance.setParam(feedback);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.delayTime.dispose();\n\t\tthis.resonance.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Interval, MidiNote, NormalRange, Note, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { ToneBufferSource, ToneBufferSourceCurve } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n\ninterface SamplesMap {\n\t[note: string]: ToneAudioBuffer | AudioBuffer | string;\n\t[midi: number]: ToneAudioBuffer | AudioBuffer | string;\n}\n\nexport interface SamplerOptions extends InstrumentOptions {\n\tattack: Time;\n\trelease: Time;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tcurve: ToneBufferSourceCurve;\n\turls: SamplesMap;\n}\n\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument<SamplerOptions> {\n\n\treadonly name: string = \"Sampler\";\n\n\t/**\n\t * The stored and loaded buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t */\n\tprivate _activeSources: Map<MidiNote, ToneBufferSource[]> = new Map();\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The shape of the attack/release curve.\n\t * Either \"linear\" or \"exponential\"\n\t */\n\tcurve: ToneBufferSourceCurve;\n\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param onload The callback to invoke when all of the samples are loaded.\n\t * @param baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n\t */\n\tconstructor(samples?: SamplesMap, onload?: () => void, baseUrl?: string);\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param options The remaining options associated with the sampler\n\t */\n\tconstructor(samples?: SamplesMap, options?: Partial<Omit<SamplerOptions, \"urls\">>);\n\tconstructor(options?: Partial<SamplerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n\n\t\tconst urlMap = {};\n\t\tObject.keys(options.urls).forEach((note) => {\n\t\t\tconst noteNumber = parseInt(note, 10);\n\t\t\tassert(isNote(note)\n\t\t\t\t|| (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n\t\t\tif (isNote(note)) {\n\t\t\t\t// convert the note name to MIDI\n\t\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\t\turlMap[mid] = options.urls[note];\n\t\t\t} else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n\t\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\t\turlMap[noteNumber] = options.urls[noteNumber];\n\t\t\t}\n\t\t});\n\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: urlMap,\n\t\t\tonload: options.onload,\n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror,\n\t\t});\n\t\tthis.attack = options.attack;\n\t\tthis.release = options.release;\n\t\tthis.curve = options.curve;\n\n\t\t// invoke the callback if it's already loaded\n\t\tif (this._buffers.loaded) {\n\t\t\t// invoke onload deferred\n\t\t\tPromise.resolve().then(options.onload);\n\t\t}\n\t}\n\n\tstatic getDefaults(): SamplerOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tattack: 0,\n\t\t\tbaseUrl: \"\",\n\t\t\tcurve: \"exponential\" as \"exponential\",\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\trelease: 0.1,\n\t\t\turls: {},\n\t\t});\n\t}\n\n\t/**\n\t * Returns the difference in steps between the given midi note at the closets sample.\n\t */\n\tprivate _findClosest(midi: MidiNote): Interval {\n\t\t// searches within 8 octaves of the given midi note\n\t\tconst MAX_INTERVAL = 96;\n\t\tlet interval = 0;\n\t\twhile (interval < MAX_INTERVAL) {\n\t\t\t// check above and below\n\t\t\tif (this._buffers.has(midi + interval)) {\n\t\t\t\treturn -interval;\n\t\t\t} else if (this._buffers.has(midi - interval)) {\n\t\t\t\treturn interval;\n\t\t\t}\n\t\t\tinterval++;\n\t\t}\n\t\tthrow new Error(`No available buffers for note: ${midi}`);\n\t}\n\n\t/**\n\t * @param  notes\tThe note to play, or an array of notes.\n\t * @param  time     When to play the note\n\t * @param  velocity The velocity to play the sample back.\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", notes, time, velocity);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n\t\t\tconst midi = Math.round(midiFloat) as MidiNote;\n\t\t\tconst remainder = midiFloat - midi;\n\t\t\t// find the closest note pitch\n\t\t\tconst difference = this._findClosest(midi);\n\t\t\tconst closestNote = midi - difference;\n\t\t\tconst buffer = this._buffers.get(closestNote);\n\t\t\tconst playbackRate = intervalToFrequencyRatio(difference + remainder);\n\t\t\t// play that note\n\t\t\tconst source = new ToneBufferSource({\n\t\t\t\turl: buffer,\n\t\t\t\tcontext: this.context,\n\t\t\t\tcurve: this.curve,\n\t\t\t\tfadeIn: this.attack,\n\t\t\t\tfadeOut: this.release,\n\t\t\t\tplaybackRate,\n\t\t\t}).connect(this.output);\n\t\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t\t// add it to the active sources\n\t\t\tif (!isArray(this._activeSources.get(midi))) {\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t\t(this._activeSources.get(midi) as ToneBufferSource[]).push(source);\n\n\t\t\t// remove it when it's done\n\t\t\tsource.onended = () => {\n\t\t\t\tif (this._activeSources && this._activeSources.has(midi)) {\n\t\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\t\tconst index = sources.indexOf(source);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tsources.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param  notes\tThe note to release, or an array of notes.\n\t * @param  time     \tWhen to release the note.\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tthis.log(\"triggerRelease\", notes, time);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midi = new FrequencyClass(this.context, note).toMidi();\n\t\t\t// find the note\n\t\t\tif (this._activeSources.has(midi) && (this._activeSources.get(midi) as ToneBufferSource[]).length) {\n\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\ttime = this.toSeconds(time);\n\t\t\t\tsources.forEach(source => {\n\t\t\t\t\tsource.stop(time);\n\t\t\t\t});\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Release all currently active notes.\n\t * @param  time     \tWhen to release the notes.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(sources => {\n\t\t\twhile (sources.length) {\n\t\t\t\tconst source = sources.shift() as ToneBufferSource;\n\t\t\t\tsource.stop(computedTime);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the attack phase, then after the duration, invoke the release.\n\t * @param  notes\tThe note to play and release, or an array of notes.\n\t * @param  duration The time the note should be held\n\t * @param  time     When to start the attack\n\t * @param  velocity The velocity of the attack\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency[] | Frequency,\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity: NormalRange = 1,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"notes must be an array when duration is array\");\n\t\t\t(notes as Frequency[]).forEach((note, index) => {\n\t\t\t\tconst d = duration[Math.min(index, duration.length - 1)];\n\t\t\t\tthis.triggerRelease(note, computedTime + this.toSeconds(d));\n\t\t\t});\n\t\t} else {\n\t\t\tthis.triggerRelease(notes, computedTime + this.toSeconds(duration));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a note to the sampler.\n\t * @param  note      The buffer's pitch.\n\t * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(note: Note | MidiNote, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n\t\tif (isNote(note)) {\n\t\t\t// convert the note name to MIDI\n\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\tthis._buffers.add(mid, url, callback);\n\t\t} else {\n\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\tthis._buffers.add(note, url, callback);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.dispose();\n\t\tthis._activeSources.forEach(sources => {\n\t\t\tsources.forEach(source => source.dispose());\n\t\t});\n\t\tthis._activeSources.clear();\n\t\treturn this;\n\t}\n}\n","import { Loop, LoopOptions } from \"./Loop\";\nimport { PatternGenerator, PatternName } from \"./PatternGenerator\";\nimport { ToneEventCallback } from \"./ToneEvent\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Seconds } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\n\nexport interface PatternOptions<ValueType> extends LoopOptions {\n\tpattern: PatternName;\n\tvalues: ValueType[];\n\tcallback: (time: Seconds, value?: ValueType) => void;\n}\n\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns. \n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern<ValueType> extends Loop<PatternOptions<ValueType>> {\n\n\treadonly name: string = \"Pattern\";\n\n\t/**\n\t * The pattern generator function\n\t */\n\tprivate _pattern: Iterator<ValueType>;\n\n\t/**\n\t * The current value\n\t */\n\tprivate _value?: ValueType;\n\n\t/**\n\t * Hold the pattern type\n\t */\n\tprivate _type: PatternName;\n\n\t/**\n\t * Hold the values\n\t */\n\tprivate _values: ValueType[];\n\n\t/**\n\t * The callback to be invoked at a regular interval\n\t */\n\tcallback: (time: Seconds, value?: ValueType) => void;\n\n\t/**\n\t * @param  callback The callback to invoke with the event.\n\t * @param  values The values to arpeggiate over.\n\t * @param  pattern  The name of the pattern\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tvalues?: ValueType[],\n\t\tpattern?: PatternName,\n\t);\n\tconstructor(options?: Partial<PatternOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n\t\tconst options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._values = options.values;\n\t\tthis._pattern = PatternGenerator(options.values, options.pattern);\n\t\tthis._type = options.pattern;\n\t}\n\n\tstatic getDefaults(): PatternOptions<any> {\n\t\treturn Object.assign(Loop.getDefaults(), {\n\t\t\tpattern: \"up\" as \"up\",\n\t\t\tvalues: [],\n\t\t\tcallback: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst value = this._pattern.next() as IteratorResult<ValueType>;\n\t\tthis._value = value.value;\n\t\tthis.callback(time, this._value);\n\t}\n\n\t/**\n\t * The array of events.\n\t */\n\tget values(): ValueType[] {\n\t\treturn this._values;\n\t}\n\tset values(val) {\n\t\tthis._values = val;\n\t\t// reset the pattern\n\t\tthis.pattern = this._type;\n\t}\n\n\t/**\n\t * The current value of the pattern.\n\t */\n\tget value(): ValueType | undefined {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t */\n\tget pattern(): PatternName {\n\t\treturn this._type;\n\t}\n\tset pattern(pattern) {\n\t\tthis._type = pattern;\n\t\tthis._pattern = PatternGenerator(this._values, this._type);\n\t}\n}\n\n","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n\ninterface CrossFadeOptions extends ToneAudioNodeOptions {\n\tfade: NormalRange;\n}\n\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode<CrossFadeOptions> {\n\n\treadonly name: string = \"CrossFade\";\n\n\t/**\n\t * The crossfading is done by a StereoPannerNode\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\n\t/**\n\t * Split the output of the panner node into two values used to control the gains.\n\t */\n\tprivate _split: ChannelSplitterNode = this.context.createChannelSplitter(2);\n\n\t/**\n\t * Convert the fade value into an audio range value so it can be connected\n\t * to the panner.pan AudioParam\n\t */\n\tprivate _g2a: GainToAudio = new GainToAudio({ context: this.context });\n\n\t/**\n\t * The input which is at full level when fade = 0\n\t */\n\treadonly a: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The input which is at full level when fade = 1\n\t */\n\treadonly b: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output is a mix between `a` and `b` at the ratio of `fade`\n\t */\n\treadonly output: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * CrossFade has no input, you must choose either `a` or `b`\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The mix between the two inputs. A fade value of 0\n\t * will output 100% crossFade.a and\n\t * a value of 1 will output 100% crossFade.b.\n\t */\n\treadonly fade: Signal<\"normalRange\">;\n\n\tprotected _internalChannels = [this.a, this.b];\n\n\t/**\n\t * @param fade The initial fade value [0, 1].\n\t */\n\tconstructor(fade?: NormalRange);\n\tconstructor(options?: Partial<CrossFadeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n\t\tconst options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n\n\t\tthis.fade = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tvalue: options.fade,\n\t\t});\n\t\treadOnly(this, \"fade\");\n\n\t\tthis.context.getConstant(1).connect(this._panner);\n\t\tthis._panner.connect(this._split);\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = 1;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\t\tconnect(this._split, this.a.gain, 0);\n\t\tconnect(this._split, this.b.gain, 1);\n\n\t\tthis.fade.chain(this._g2a, this._panner.pan);\n\n\t\tthis.a.connect(this.output);\n\t\tthis.b.connect(this.output);\n\t}\n\n\tstatic getDefaults(): CrossFadeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfade: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t\tthis.output.dispose();\n\t\tthis.fade.dispose();\n\t\tthis._g2a.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis._split.disconnect();\n\t\treturn this;\n\t}\n}\n","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\n\nexport interface EffectOptions extends ToneAudioNodeOptions {\n\twet: NormalRange;\n}\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport abstract class Effect<Options extends EffectOptions>\n\textends ToneAudioNode<Options> {\n\n\treadonly name: string = \"Effect\";\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade = new CrossFade({ context: this.context });\n\n\t/**\n\t * The wet control is how much of the effected\n\t * will pass through to the output. 1 = 100% effected\n\t * signal, 0 = 100% dry signal.\n\t */\n\twet: Signal<\"normalRange\"> = this._dryWet.fade;\n\n\t/**\n\t * connect the effectSend to the input of hte effect\n\t */\n\tprotected effectSend: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * connect the output of the effect to the effectReturn\n\t */\n\tprotected effectReturn: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect input node\n\t */\n\tinput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect output\n\t */\n\toutput = this._dryWet;\n\n\tconstructor(options: EffectOptions) {\n\t\tsuper(options);\n\n\t\t// connections\n\t\tthis.input.fan(this._dryWet.a, this.effectSend);\n\t\tthis.effectReturn.connect(this._dryWet.b);\n\t\tthis.wet.setValueAtTime(options.wet, 0);\n\t\tthis._internalChannels = [this.effectReturn, this.effectSend];\n\t\treadOnly(this, \"wet\");\n\t}\n\n\tstatic getDefaults(): EffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\t/**\n\t * chains the effect in between the effectSend and effectReturn\n\t */\n\tprotected connectEffect(effect: ToneAudioNode | AudioNode): this {\n\t\t// add it to the internal channels\n\t\tthis._internalChannels.push(effect);\n\t\tthis.effectSend.chain(effect, this.effectReturn);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis.effectSend.dispose();\n\t\tthis.effectReturn.dispose();\n\t\tthis.wet.dispose();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface TonePannerOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tchannelCount: number;\n}\n\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode<TonePannerOptions> {\n\n\treadonly name: string = \"Panner\";\n\n\t/**\n\t * the panner node\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\treadonly input: StereoPannerNode = this._panner;\n\treadonly output: StereoPannerNode = this._panner;\n\n\t/**\n\t * The pan control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// pan hard right\n\t * \tconst panner = new Tone.Panner(1).toDestination();\n\t * \t// pan hard left\n\t * \tpanner.pan.setValueAtTime(-1, 0.25);\n\t * \tconst osc = new Tone.Oscillator(50, \"triangle\").connect(panner).start();\n\t * }, 0.5, 2);\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\tconstructor(options?: Partial<TonePannerOptions>);\n\t/**\n\t * @param pan The initial panner value (Defaults to 0 = \"center\").\n\t */\n\tconstructor(pan?: AudioRange);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n\t\tconst options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n\n\t\tthis.pan = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.pan,\n\t\t\tvalue: options.pan,\n\t\t\tminValue: -1,\n\t\t\tmaxValue: 1,\n\t\t});\n\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = options.channelCount;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\n\t\t// initial value\n\t\treadOnly(this, \"pan\");\n\t}\n\n\tstatic getDefaults(): TonePannerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.pan.dispose();\n\t\treturn this;\n\t}\n}\n","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"bit-crusher\";\n\nexport const bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, bitCrusherWorklet);\n","import { ToneAudioWorklet, ToneAudioWorkletOptions } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n\nexport interface BitCrusherOptions extends EffectOptions {\n\tbits: Positive;\n}\n\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n * \n * @category Effect\n */\nexport class BitCrusher extends Effect<BitCrusherOptions> {\n\n\treadonly name: string = \"BitCrusher\";\n\n\t/**\n\t * The bit depth of the effect\n\t * @min 1\n\t * @max 16\n\t */\n\treadonly bits: Param<\"positive\">;\n\n\t/**\n\t * The node which does the bit crushing effect. Runs in an AudioWorklet when possible.\n\t */\n\tprivate _bitCrusherWorklet: BitCrusherWorklet;\n\n\tconstructor(bits?: Positive);\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n\t\tconst options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n\n\t\tthis._bitCrusherWorklet = new BitCrusherWorklet({\n\t\t\tcontext: this.context,\n\t\t\tbits: options.bits,\n\t\t});\n\t\t// connect it up\n\t\tthis.connectEffect(this._bitCrusherWorklet);\n\n\t\tthis.bits = this._bitCrusherWorklet.bits;\n\t}\n\n\tstatic getDefaults(): BitCrusherOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbits: 4,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._bitCrusherWorklet.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface BitCrusherWorkletOptions extends ToneAudioWorkletOptions {\n\tbits: number;\n}\n\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet<BitCrusherWorkletOptions> {\n\n\treadonly name: string = \"BitCrusherWorklet\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\treadonly bits: Param<\"positive\">;\n\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.bits = new Param<\"positive\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.bits,\n\t\t\tunits: \"positive\",\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 16,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\t}\n\n\tstatic getDefaults(): BitCrusherWorkletOptions {\n\t\treturn Object.assign(ToneAudioWorklet.getDefaults(), {\n\t\t\tbits: 12,\n\t\t});\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst bits = node.parameters.get(\"bits\") as AudioParam;\n\t\tthis.bits.setParam(bits);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.bits.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface FeedbackEffectOptions extends EffectOptions {\n\t/**\n\t * The feedback from the output back to the input\n\t * ```\n\t * +---<--------<---+\n\t * |                |\n\t * |  +----------+  |\n\t * +--> feedback +>-+\n\t *    +----------+\n\t * ```\n\t */\n\tfeedback: NormalRange;\n}\n\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport abstract class FeedbackEffect<Options extends FeedbackEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"FeedbackEffect\";\n\n\t/**\n\t * the gain which controls the feedback\n\t */\n\tprivate _feedbackGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amount of signal which is fed back into the effect input.\n\t */\n\tfeedback: Param<\"normalRange\">;\n\n\tconstructor(options: FeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._feedbackGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.feedback,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\tthis.feedback = this._feedbackGain.gain;\n\t\treadOnly(this, \"feedback\");\n\n\t\t// the feedback loop\n\t\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t}\n\n\tstatic getDefaults(): FeedbackEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfeedback: 0.125,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._feedbackGain.dispose();\n\t\tthis.feedback.dispose();\n\t\treturn this;\n\t}\n}\n","import { Delay } from \"../core/context/Delay\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\n\ninterface FeedbackDelayOptions extends FeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect<FeedbackDelayOptions> {\n\n\treadonly name: string = \"FeedbackDelay\";\n\n\t/**\n\t * the delay node\n\t */\n\tprivate _delayNode: Delay;\n\n\t/**\n\t * The delayTime of the FeedbackDelay.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<FeedbackDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis.delayTime = this._delayNode.delayTime;\n\n\t\t// connect it up\n\t\tthis.connectEffect(this._delayNode);\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): FeedbackDelayOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../../core/context/BaseContext\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport interface SoloOptions extends ToneAudioNodeOptions {\n\tsolo: boolean;\n}\n\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode<SoloOptions> {\n\n\treadonly name: string = \"Solo\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param solo If the connection should be initially solo'ed.\n\t */\n\tconstructor(solo?: boolean);\n\tconstructor(options?: Partial<SoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n\t\tconst options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tif (!Solo._allSolos.has(this.context)) {\n\t\t\tSolo._allSolos.set(this.context, new Set());\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).add(this);\n\n\t\t// set initially\n\t\tthis.solo = options.solo;\n\t}\n\n\tstatic getDefaults(): SoloOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsolo: false,\n\t\t});\n\t}\n\n\t/**\n\t * Hold all of the solo'ed tracks belonging to a specific context\n\t */\n\tprivate static _allSolos: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Hold the currently solo'ed instance(s)\n\t */\n\tprivate static _soloed: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Isolates this instance and mutes all other instances of Solo.\n\t * Only one instance can be soloed at a time. A soloed\n\t * instance will report `solo=false` when another instance is soloed.\n\t */\n\tget solo(): boolean {\n\t\treturn this._isSoloed();\n\t}\n\tset solo(solo) {\n\t\tif (solo) {\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).forEach(instance => instance._updateSolo());\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed\n\t */\n\tget muted(): boolean {\n\t\treturn this.input.gain.value === 0;\n\t}\n\n\t/**\n\t * Add this to the soloed array\n\t */\n\tprivate _addSolo(): void {\n\t\tif (!Solo._soloed.has(this.context)) {\n\t\t\tSolo._soloed.set(this.context, new Set());\n\t\t}\n\t\t(Solo._soloed.get(this.context) as Set<Solo>).add(this);\n\t}\n\n\t/**\n\t * Remove this from the soloed array\n\t */\n\tprivate _removeSolo(): void {\n\t\tif (Solo._soloed.has(this.context)) {\n\t\t\t(Solo._soloed.get(this.context) as Set<Solo>).delete(this);\n\t\t}\n\t}\n\n\t/**\n\t * Is this on the soloed array\n\t */\n\tprivate _isSoloed(): boolean {\n\t\treturn Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).has(this);\n\t}\n\n\t/**\n\t * Returns true if no one is soloed\n\t */\n\tprivate _noSolos(): boolean {\n\t\t// either does not have any soloed added\n\t\treturn !Solo._soloed.has(this.context) ||\n\t\t\t// or has a solo set but doesn't include any items\n\t\t\t(Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).size === 0);\n\t}\n\n\t/**\n\t * Solo the current instance and unsolo all other instances.\n\t */\n\tprivate _updateSolo(): void {\n\t\tif (this._isSoloed()) {\n\t\t\tthis.input.gain.value = 1;\n\t\t} else if (this._noSolos()) {\n\t\t\t// no one is soloed\n\t\t\tthis.input.gain.value = 1;\n\t\t} else {\n\t\t\tthis.input.gain.value = 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).delete(this);\n\t\tthis._removeSolo();\n\t\treturn this;\n\t}\n}\n","import { readOnly } from \"../../core/util/Interface\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n\nexport interface PanVolOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode<PanVolOptions> {\n\n\treadonly name: string = \"PanVol\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The panning node\n\t */\n\tprivate _panner: Panner;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param pan the initial pan\n\t * @param volume The output volume.\n\t */\n\tconstructor(pan?: AudioRange, volume?: Decibels);\n\tconstructor(options?: Partial<PanVolOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n\t\tconst options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n\n\t\tthis._panner = this.input = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\tthis.pan = this._panner.pan;\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\n\t\t// connections\n\t\tthis._panner.connect(this._volume);\n\t\tthis.mute = options.mute;\n\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): PanVolOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\tthis.pan.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface ChannelOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tsolo: boolean;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls. \n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode<ChannelOptions> {\n\n\treadonly name: string = \"Channel\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The soloing interface\n\t */\n\tprivate _solo: Solo;\n\n\t/**\n\t * The panning and volume node\n\t */\n\tprivate _panVol: PanVol;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The output volume.\n\t * @param pan the initial pan\n\t */\n\tconstructor(volume?: Decibels, pan?: AudioRange);\n\tconstructor(options?: Partial<ChannelOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n\t\tconst options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n\n\t\tthis._solo = this.input = new Solo({\n\t\t\tsolo: options.solo,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis._panVol = this.output = new PanVol({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tvolume: options.volume,\n\t\t\tmute: options.mute,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\tthis.pan = this._panVol.pan;\n\t\tthis.volume = this._panVol.volume;\n\n\t\tthis._solo.connect(this._panVol);\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): ChannelOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tmute: false,\n\t\t\tsolo: false,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n\t */\n\tget solo(): boolean {\n\t\treturn this._solo.solo;\n\t}\n\tset solo(solo) {\n\t\tthis._solo.solo = solo;\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed,\n\t * or the channel is muted\n\t */\n\tget muted(): boolean {\n\t\treturn this._solo.muted || this.mute;\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._panVol.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._panVol.mute = mute;\n\t}\n\n\t/**\n\t * Store the send/receive channels by name. \n\t */\n\tprivate static buses: Map<string, Gain> = new Map();\n\n\t/**\n\t * Get the gain node belonging to the bus name. Create it if\n\t * it doesn't exist\n\t * @param name The bus name\n\t */\n\tprivate _getBus(name: string): Gain {\n\t\tif (!Channel.buses.has(name)) {\n\t\t\tChannel.buses.set(name, new Gain({ context: this.context }));\n\t\t}\n\t\treturn Channel.buses.get(name) as Gain;\n\t}\n\n\t/**\n\t * Send audio to another channel using a string. `send` is a lot like\n\t * [[connect]], except it uses a string instead of an object. This can \n\t * be useful in large applications to decouple sections since [[send]]\n\t * and [[receive]] can be invoked separately in order to connect an object\n\t * @param name The channel name to send the audio\n\t * @param volume The amount of the signal to send. \n\t * \tDefaults to 0db, i.e. send the entire signal\n\t * @returns Returns the gain node of this connection.\n\t */\n\tsend(name: string, volume: Decibels = 0): Gain<\"decibels\"> {\n\t\tconst bus = this._getBus(name);\n\t\tconst sendKnob = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tgain: volume,\n\t\t});\n\t\tthis.connect(sendKnob);\n\t\tsendKnob.connect(bus);\n\t\treturn sendKnob;\n\t}\n\n\t/**\n\t * Receive audio from a channel which was connected with [[send]]. \n\t * @param name The channel name to receive audio from.\n\t */\n\treceive(name: string): this {\n\t\tconst bus = this._getBus(name);\n\t\tbus.connect(this);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panVol.dispose();\n\t\tthis.pan.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._solo.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Merge } from \"./Merge\";\n\nexport type MonoOptions = ToneAudioNodeOptions;\n\n/**\n * Mono coerces the incoming mono or stereo signal into a mono signal\n * where both left and right channels have the same value. This can be useful\n * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n * @category Component\n */\nexport class Mono extends ToneAudioNode<MonoOptions> {\n\n\treadonly name: string = \"Mono\";\n\n\t/**\n\t * merge the signal\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The summed output of the multiple inputs\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * The stereo signal to sum to mono\n\t */\n\treadonly input: Gain;\n\n\tconstructor(options?: Partial<MonoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Mono.getDefaults(), arguments));\n\n\t\tthis.input = new Gain({ context: this.context });\n\n\t\tthis._merge = this.output = new Merge({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tthis.input.connect(this._merge, 0, 0);\n\t\tthis.input.connect(this._merge, 0, 1);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merge.dispose();\n\t\tthis.input.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n\nexport interface ListenerOptions extends ToneAudioNodeOptions{\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\tforwardX: number;\n\tforwardY: number;\n\tforwardZ: number;\n\tupX: number;\n\tupY: number;\n\tupZ: number;\n}\n\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you \n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context. \n */\nexport class Listener extends ToneAudioNode<ListenerOptions> {\n\n\treadonly name: string = \"Listener\";\n\n\t/**\n\t * The listener has no inputs or outputs. \n\t */\n\toutput: undefined; \n\tinput: undefined; \n\n\treadonly positionX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionX,\n\t})\n\n\treadonly positionY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionY,\n\t})\n\n\treadonly positionZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionZ,\n\t})\n\n\treadonly forwardX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardX,\n\t})\n\n\treadonly forwardY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardY,\n\t})\n\n\treadonly forwardZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardZ,\n\t})\n\n\treadonly upX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upX,\n\t})\n\n\treadonly upY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upY,\n\t})\n\n\treadonly upZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upZ,\n\t})\n\n\tstatic getDefaults(): ListenerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\tforwardX: 0,\n\t\t\tforwardY: 0,\n\t\t\tforwardZ: -1,\n\t\t\tupX: 0,\n\t\t\tupY: 1,\n\t\t\tupZ: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\tthis.forwardX.dispose();\n\t\tthis.forwardY.dispose();\n\t\tthis.forwardZ.dispose();\n\t\tthis.upX.dispose();\n\t\tthis.upY.dispose();\n\t\tthis.upZ.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.listener = new Listener({ context });\n});\n\nonContextClose(context => {\n\tcontext.listener.dispose();\n});\n","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nimport { Seconds } from \"./core/type/Units\";\nexport { supported } from \"./core/context/AudioContext\";\n\n/**\n * The current audio context time of the global [[Context]]. \n * See [[Context.now]]\n * @category Core\n */\nexport function now(): Seconds {\n\treturn getContext().now();\n}\n\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate(): Seconds {\n\treturn getContext().immediate();\n}\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport(): import(\"./core/clock/Transport\").Transport {\n\treturn getContext().transport;\n}\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination(): import(\"./core/context/Destination\").Destination {\n\treturn getContext().destination;\n}\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener(): import(\"./core/context/Listener\").Listener {\n\treturn getContext().listener;\n}\n\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n\n/**\n * Get the singleton attached to the global context. \n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport function getDraw(): import(\"./core/util/Draw\").Draw {\n\treturn getContext().draw;\n}\n\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n\n/**\n * Promise which resolves when all of the loading promises are resolved. \n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n\treturn ToneAudioBuffer.loaded();\n}\n\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer: typeof ToneAudioBuffer = ToneAudioBuffer;\nexport const Buffers: typeof ToneAudioBuffers = ToneAudioBuffers;\nexport const BufferSource: typeof ToneBufferSource = ToneBufferSource;\n","import React, {useState} from 'react';\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone'\n\n\n// testing audio///////\nlet actx = new AudioContext();\nlet out = actx.destination;\n\nlet osc1 = actx.createOscillator();\nlet gain1 = actx.createGain();\nlet gain2 = actx.createGain();\n\nosc1.connect(gain1);\ngain1.connect(out);\ngain2.connect(out);\n////////////////////////\n\n\nconst Test2 = () => {\n    const [notes, setNotes] = React.useState(null);\n    const [osc1Freq, setOsc1Freq] = React.useState(osc1.frequency.value)\n\n    const changeOsc1Freq = (e) => {\n        let {value} = e.target; // this is destructing the e.target.value\n        setOsc1Freq(value);        // this is so every time we use slider, it changes the state\n        osc1.frequency.value = value; // pulled value off to assign a value to freq\n    }\n\n\n\n\n    const playSynth = () => {\n        let synth = new Tone.MembraneSynth.toDestination();\n        synth.triggerAttackRelease(\"C2\", \"8n\")\n    }\n\n    let loopBeat;\n\n    const setupLoop = (e) => {\n        let bassSynth = new Tone.MembraneSynth().toDestination()\n\n        loopBeat = new Tone.Loop(song, '4n');\n        Tone.Transport.start();\n        loopBeat.start(0);\n    }\n\n    const song = (time) => {\n        console.log(song);\n    }\n\n    // for the value of the freq range slider, its not responding like a state would.\n\n    return (\n        <>\n        <button onClick={playSynth}>Play</button>\n        <button onClick={() => osc1.stop()}>Stop</button>\n        <input type=\"range\" id=\"frequency\" onChange={changeOsc1Freq}\n        value={osc1Freq} max=\"5000\"\n        />\n        <button\n            onMouseDown={() => setNotes([{ name: 'C3' }])}\n            onMouseUp={() => setNotes(null)}\n        >\n            Kick\n        </button>\n        {/* ...other pads */}\n\n        {/* Reactronica Components */}\n        <Song>\n          <Track>\n            <Instrument\n              type=\"sampler\"\n              notes={notes}\n              samples={{\n                C3: '/drums/kick.wav',\n                D3: '/drums/snare.wav',\n                E3: '/drums/hat.wav',\n              }}\n              onLoad={(buffers) => {\n                // Runs when all samples are loaded\n              }}\n            />\n          </Track>\n        </Song>\n      </>\n    );\n  };\n\nexport default Test2\n","import {useState} from 'react';\nimport * as Tone from 'tone'\n\nconst SynthPad = () => {\n  const [note, setNote] = useState('C3')\n  const [delay, setDelay] = useState(8)\n  const [delayFeedback, setDelayFeedback] = useState(.5)\n\n  const delayEffect = new Tone.FeedbackDelay(delay +'n', delayFeedback).toDestination();\n\n\n  let synth = new Tone.Synth({ oscillator: { type: \"square8\" } }).connect(delayEffect)\n\n const playNote = (note) => {\n   console.log(note)\n   synth.triggerAttackRelease(note, \"16n\")\n }\n const handleNoteChange = (event) => {\n   setNote(event.target.value)\n }\n const handleDelayFeedback = (event) => {\n   setDelayFeedback(event.target.value)\n }\n const handleDelayTime = (event) => {\n   setDelay(event.target.value)\n }\n  return (\n    <>\n    <div onClick={() => {playNote(note)}} className='step dark'>\n    <br/>\n    <select onChange={handleNoteChange}>\n      <option value='C3'>C3</option>\n      <option value='E3'>E3</option>\n      <option value='G3'>G3</option>\n      <option value='A3'>A3</option>\n    </select>\n    </div>\n    <label>Feedback {delayFeedback}</label><br/>\n    <input onChange={handleDelayFeedback} type='range' step='.1' min='0' max='.9' ></input>\n    <label>Delay: {delay}n</label><br/>\n    <input onChange={handleDelayTime} type='range' step='1' min='1' max='64' ></input>\n    </>\n  )\n}\nexport default SynthPad;\n","import {useState} from 'react';\nimport * as Tone from 'tone'\nimport SynthPad from './SynthPad'\n\nconst Synth = () => {\n\n\n  return (\n    <>\n      <div className='sequencerContainer'>\n        <SynthPad />\n        <SynthPad />\n\n      </div>\n    </>\n  )\n}\nexport default Synth;\n","import {useState} from 'react';\nimport { Song, Track, Instrument, Effect } from 'reactronica';\n\nconst MonoSynthStep = (props) => {\n\n  return (\n    <>\n    {props.playHead === props.index ?\n      <div className='synthStep playHead'>\n        <p>{props.step.name}</p>\n      </div>\n      :\n      <div className='synthStep'>\n        <p>{props.step.name}</p>\n      </div> }\n\n    </>\n  )\n}\nexport default MonoSynthStep;\n","import {useState} from 'react';\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport MonoSynthStep from './MonoSynthStep'\n\n\nconst MonoSynth = () => {\n  // const [monoGrid, setMonoGrid] = useState({\n  //   steps: ['C3', 'E3', null, 'E3','C3', 'E3', 'B2', 'E3'],\n  //   delay: [  0 ,   0 ,    0,    0,   0,    0,    0,   0 ]\n  // })\n  const [steps, setSteps] = useState([\n    {name: 'C#3'}, {name: 'Eb3'}, {name: null}, {name: 'Eb3'}, {name: 'C#3'}, {name: 'Eb3'}, {name: 'Bb2'}, {name: 'Eb3'}\n  ])\n  const [playHead, setPlayHead] = useState(0)\n  const [delayWet, setDelayWet] = useState(0)\n  const [filterWet, setFilterWet] = useState(0)\n  const [monoVolume, setMonoVolume] = useState(-10)\n\n\n\n\n\n  const handleDelayFeedback = (e) => {\n    setDelayWet(e.target.value)\n  }\n  const handleMonoVolume = (e) => {\n    setMonoVolume(e.target.value)\n  }\n  const handleFilter = (e) => {\n    setFilterWet(e.target.value)\n  }\n\n\n  return (\n    <>\n\n\n      <Track steps={steps} volume={monoVolume} onStepPlay={(step, index) => {\n          setPlayHead(index)\n          console.log(step, index);\n        }}>\n        <Instrument type='duoSynth' />\n        <Effect type='feedbackDelay' wet={delayWet} />\n        <Effect type='autoWah' wet={filterWet} />\n      </Track>\n\n      <hr/>\n      <label>Mono Delay: </label>\n      <input onChange={handleDelayFeedback} type='range' step='.1' min='0' max='.9' ></input>\n      <label>Mono Filter: </label>\n      <input onChange={handleFilter} type='range' step='.1' min='0' max='1' ></input>\n      <label>Mono Volume: </label>\n      <input onChange={handleMonoVolume} type='range' step='1' min='-100' max='0' ></input>\n      <div className='synthGrid'>\n        {steps.map((step, index) => {\n          return (\n            <MonoSynthStep index={index} step={step} playHead={playHead}/>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default MonoSynth;\n","import {useState} from 'react';\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport MonoSynthStep from './MonoSynthStep'\n\n\nconst MonoSynth2 = () => {\n  // const [monoGrid, setMonoGrid] = useState({\n  //   steps: ['C3', 'E3', null, 'E3','C3', 'E3', 'B2', 'E3'],\n  //   delay: [  0 ,   0 ,    0,    0,   0,    0,    0,   0 ]\n  // })\n  const [steps, setSteps] = useState([\n    {name: 'Eb5'}, {name: 'C#5'}, {name: null}, {name: 'D#5'}, {name: 'G#5'}, {name: 'Gb5'}\n  ])\n  const [playHead, setPlayHead] = useState(0)\n  const [delayWet, setDelayWet] = useState(0)\n  const [monoVolume, setMonoVolume] = useState(-10)\n\n\n\n  const handleDelayFeedback = (e) => {\n    setDelayWet(e.target.value)\n  }\n  const handleMonoVolume = (e) => {\n    setMonoVolume(e.target.value)\n  }\n\n\n  return (\n    <>\n\n\n      <Track steps={steps} volume={monoVolume} onStepPlay={(step, index) => {\n          setPlayHead(index)\n          console.log(step, index);\n        }}>\n        <Instrument type='duoSynth' />\n        <Effect type='feedbackDelay' wet={delayWet} />\n      </Track>\n\n\n      <hr/>\n      <label>Mono2 Delay: </label>\n      <input onChange={handleDelayFeedback} type='range' step='.1' min='0' max='.9' ></input>\n      <label>Mono2 Volume: </label>\n      <input onChange={handleMonoVolume} type='range' step='1' min='-100' max='0' ></input>\n      <div className='synthGrid'>\n      {steps.map((step, index) => {\n        return (\n          <MonoSynthStep index={index} step={step} playHead={playHead}/>\n        )\n      })}\n      </div>\n    </>\n  )\n}\nexport default MonoSynth2;\n","import {useState} from 'react';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport axios from 'axios'\nimport { Song, Track, Instrument, Effect } from 'reactronica';\nimport * as Tone from 'tone'\nimport Test2 from './components/Test2'\nimport Synth from './components/Synth'\nimport MonoSynth from './components/MonoSynth'\nimport MonoSynth2 from './components/MonoSynth2'\n\nfunction App() {\n  const [sequences, setSequences] = useState([])\n  const [isPlaying, setIsPLaying] = useState(false)\n  const [tempo, setTempo] = useState(100)\n  const [volume, setVolume] = useState()\n\n  //---------------------------------------------\n  //  GET SEQUENCE ROUTE\n  //---------------------------------------------\n  const getSequences = () => {\n    axios\n    .get('https://breeze-back.herokuapp.com/api/sequences')\n    .then(\n      (response) => setSequences(response.data),\n      (err) => console.error(err)\n    )\n   .catch((error) => console.error(error))\n  }\n\n\n  const handleVolume = (e) => {\n    setVolume(e.target.value)\n  }\n  const handleTempo = (e) => {\n    setTempo(e.target.value)\n  }\n\n  const play = () => {\n    setIsPLaying(!isPlaying)\n  }\n  return (\n    <>\n      <h1>Breeze</h1>\n      <h4></h4>\n    {/*  <Test2 /> */}\n    <Song isPlaying={isPlaying} volume={volume} bpm={tempo}>\n      <Synth />\n      <MonoSynth />\n      <MonoSynth2 />\n    </Song><br/>\n    <hr/>\n      {isPlaying ? <button onClick={() => play()}>Stop</button> : <button onClick={() => play()}>Play</button> }\n      <label>Main volume</label>\n      <input onChange={handleVolume} type='range' step='1' min='-100' max='0' ></input>\n      <label>Tempo: {tempo}bpm</label>\n      <input onChange={handleTempo} type='range' step='1' min='10' max='700' ></input>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["exports","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","undefined","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","this","_automationEvents","_currenTime","_defaultValue","key","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","Object","defineProperty","factory","require","module","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","forEach","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","promise","token","then","_listeners","i","l","onfulfilled","_resolve","message","reason","throwIfRequested","listener","source","c","call","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","defineProperties","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","isPlainObject","isArray","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","filter","merged","getOwnPropertyNames","searchString","position","String","lastIndex","equal","flags","valueOf","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertySymbols","getOwnPropertyDescriptor","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","for","d","f","g","k","m","n","p","q","r","t","w","x","y","z","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","aa","ca","da","Set","ea","fa","ha","add","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","prepareStackTrace","set","Reflect","construct","includes","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","get","configurable","enumerable","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","text","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","random","sf","capture","passive","J","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","lane","dh","K","eh","fh","gh","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","modules","__webpack_require__","getter","property","Tone","sameConstructor","tmpObj","paramLoop","parent","attrSplit","attr","subRet","j","ret","given","currentUnit","inputNumber","dstNode","srcNode","bDone","arg","writable","Started","Stopped","Paused","piFactor","currentTime","TempConstructor","resume","_audioContext","ctx","sampleRate","hasPromises","resCallback","__webpack_exports__","testSrcNode","testDstNode","AudioNode","nativeConnect","inputs","outputs","channelCount","channelCountMode","channelInterpretation","outputNum","gainNode","ConstantSourceNode","AudioContext","units","convert","_core_Tone__WEBPACK_IMPORTED_MODULE_0__","gain","Default","Time","Frequency","TransportTime","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Gain","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","toSeconds","freq","toFrequency","toTicks","mute","volume","seconds","sched","stateEvent","_curve","array","WaveShaperNode","isFinite","mapping","len","curve","oversample","oversampling","wet","frequency","rolloff","_type","_rolloff","cascadingCount","connectionChain","freqValues","phaseValues","filterClone","magValues","totalResponse","channels","dispose","AudioBuffer","channel","dest","reverse","onload","_buffer","load","isMultidimensional","numChannels","outputArray","endSamples","replacement","fromArray","_reversed","_reverse","extension","totalProgress","onProgress","success","fail","removeEvents","phase","max","amplitude","_stoppedValue","_units","currentMax","_sum","minValue","maxValue","Linear","Exponential","Target","SetValue","before","previousVal","previous","after","currentVal","constant","scaling","rampTime","v0","t0","bpm","swing","swingSubdivision","timeSignature","loopStart","loopEnd","PPQ","ticks","amount","tickTime","_timeline","interval","_repeatedEvents","once","item","timeline","_timeSignature","timeSig","startPosition","endPosition","_swingAmount","toNotation","subdivision","toBarsBeatsSixteenths","_ppq","remainingTicks","ratio","initial","syncedSignal","TransportConstructor","detune","partials","partialCount","Sine","Triangle","Sawtooth","Square","Custom","periodicWave","baseType","_partialCount","partial","periodicWaveSize","real","imag","sum","twoPi","_partials","PI","maxDelay","delayTime","_maxDelay","output","AudioContextProperties","AudioContextMethods","clockSource","latencyHint","lookAhead","updateInterval","destination","closePromise","_timeoutIds","_latencyHint","_createClock","Ticker","Worker","Timeout","Offline","blobUrl","worker","_callback","_updateInterval","_createTimeout","prefix","_scheduledEvents","originalMethod","memory","comparator","nextEvent","midPoint","beginning","lowerBound","upperBound","portamento","_setRange","_outputMin","_outputMax","_unmutedVolume","_gain","onended","loop","fadeIn","fadeOut","playbackRate","fadeInTime","computedDur","fadeOutTime","disconnect","cancelStop","feedback","_initial","_events","boundCallback","ev","eventList","object","emitterFunc","Emitter","AnalyserNode","smoothing","Waveform","FFT","frequencyBinCount","smoothingTimeConstant","oldOsc","PulseOscillator","PWMOscillator","Oscillator","FMOscillator","AMOscillator","FatOscillator","_sourceType","sType","modulationType","mType","modulationIndex","harmonicity","modulationFrequency","oscillator","envelope","attack","decay","sustain","release","_playbackRate","rate","_noiseBuffers","_noiseCache","channelNum","b0","b1","b2","b3","b4","b5","b6","white","pink","lastOut","brown","MasterConstructor","exponent","baseFrequency","octaves","_octaves","_scale","threshold","knee","offlineContext","audioData","decodeAudioDataPromise","_expressions","midi","regexp","note","noteNumber","noteToScaleIndex","tr","total","s","octave","scaleIndexToNote","quarters","beats","cbb","c#","cx","dbb","d#","dx","ebb","e#","ex","fbb","f#","fx","gbb","g#","gx","abb","a#","ax","bbb","b#","bx","A4","decayCurve","attackCurve","releaseCurve","curveDef","_decayCurve","velocity","currentValue","decayStart","cosineCurve","rippleCurve","stairsCurve","sineCurve","bounceCurve","out","linear","exponential","bounce","In","Out","cosine","step","ripple","sine","leftWaveShaper","leftGain","rightGain","fan","rightWaveShaper","StereoPannerNode","pan","probability","humanize","startTick","_startOffset","_probability","prob","_humanize","variation","reschedulTime","_loop","_rescheduleEvents","lastEvent","loopDuration","side","resonance","dampening","_getPPQ","_getBpm","tmpEvent","elapsedTicks","offsetEvent","periodStartTime","lastState","elapsedSeconds","absoluteTicks","lastStateEvent","startTicks","nextTickTime","_smoothing","lowFrequency","highFrequency","_exp","parseFloat","_defaultUnits","scalar","_getTimeSignature","hz","samples","_now","matching","expr","_val","quantize","percent","testNotations","power","closestSeconds","closest","notationSeconds","sixteenths","measures","OscillatorNode","autostart","computedDuration","connect","_loopStart","_loopEnd","stopEvent","rev","loaded","filterEnvelope","osc","_spread","_phase","events","iterations","progress","iters","effectReturn","_convolver","normalize","norm","modulus","mod","_currentTime","startRendering","originalContext","urls","baseUrl","isLoaded","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","copy","_restart","_nextTick","_length","temp","right","isLeftChild","pivotNode","balance","results","allNodes","IntervalNode","point","_left","updateMax","_right","previousEvent","ticksUntilTime","segments","rampVal","segmentDur","val1","delta","val0","sol1","tick","_initialValue","when","endTicks","_boundLoop","_thresh","_gtz","solo","_isSoloed","OfflineAudioContext","renderedBuffer","_native_startRendering","toMidi","device","labelOrId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","constraints","stop","kind","getUserMedia","_fadeIn","player","_fadeOut","playing","overlap","grainSize","_grainSize","_overlap","_inputMin","_inputMax","urlMap","notes","difference","closestNote","sources","polyphony","voice","bLevel","aLevel","attackNoise","noise","inharmRatios","vel","octs","pitchDecay","maxNote","modulation","modulationEnvelope","vibratoAmount","vibratoRate","voice0","voice1","vals","depth","sideReturn","preDelay","noiseR","noiseL","_windowSize","pitch","windowSize","_pitch","factor","maxDelayTime","stages","connectToFreq","filters","_baseFrequency","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","allpass","fbcf","roomSize","apf","combFilterTunings","allpassFilterFrequencies","allpassL","allpassR","ar","distortion","_distortion","deg","_depth","deviation","_delayTime","degree","_order","bits","_bits","invStepSize","sensitivity","follower","_setSweepRange","sensitivy","oct","positionX","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","_rampTimeConstant","_position","_orientation","ListenerConstructor","requestAnimationFrame","_boundDrawLoop","Buses","sendKnob","integer","rand","dist","needsNormalizing","distribution","lower","upper","retArray","retObj","orientationX","orientationY","orientationZ","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","low","mid","high","totalSquared","_rms","thresh","smoothingTime","sortIndex","performance","setImmediate","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","define","TapListener","_dragged","_element","_bindedMove","_moved","_bindedEnd","_ended","startContext","createBuffer","createBufferSource","isStarted","onStarted","checkLoop","bindTapListener","tapListeners","NodeList","jquery","tap","StartAudioContext","elements","inst","useSyncExternalStoreWithSelector","hasValue","arr2","__esModule","Constructor","_defineProperties","protoProps","staticProps","_i","_s","_e","_arr","_n","_d","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","definition","chunkId","reduce","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","head","toStringTag","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","batch","getBatch","ReactReduxContext","React","nullListeners","notify","createSubscription","store","parentSub","handleChangeWrapper","subscription","onStateChange","trySubscribe","addNestedSub","first","clear","isSubscribed","createListenerCollection","notifyNestedSubs","Boolean","tryUnsubscribe","getListeners","useIsomorphicLayoutEffect","serverState","contextValue","getServerState","previousState","getState","Context","newBatch","die","msg","isDraft","DRAFT_STATE","isDraftable","proto","Ctor","Function","objectCtorString","DRAFTABLE","isMap","isSet","each","iter","enumerableOnly","getArchtype","ownKeys","entry","type_","propOrOldValue","hasMap","hasSet","latest","copy_","base_","shallowCopy","getOwnPropertyDescriptors","freeze","deep","isFrozen","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","autoFreeze_","peek","getDescriptorFromProto","markChanged","prepareCopy","createProxy","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createProxyProxy","createES5Proxy_","currentImpl","archType","hasChanges_","copyHelper","enableES5","proxyProperty","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","createES5Draft","markChangesRecursively","initializeUseSelector","initializeConnect","hasSymbol","hasProxies","_desc$get","readPropFromProto","currentState","deleteProperty","owner","setPrototypeOf","Immer","recipe","defaultBase","_this","produce","_this2","hasError","ip","arg1","arg2","produceWithPatches","patches","inversePatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_","_defineProperty","symbols","sym","_objectSpread2","formatProdErrorMessage","$$observable","observable","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","replaceReducer","nextReducer","outerSubscribe","observer","observeState","combineReducers","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_key","previousStateForKey","nextStateForKey","compose","_len","funcs","applyMiddleware","middlewares","_dispatch","middlewareAPI","middleware","_objectSpread","createThunkMiddleware","extraArgument","thunk","withExtraArgument","composeWithDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__REDUX_DEVTOOLS_EXTENSION__","baseProto","MiddlewareArray","__extends","species","_super","freezeDraftable","createNextState","curryGetDefaultMiddleware","_c","middlewareArray","isBoolean","thunkMiddleware","getDefaultMiddleware","createAction","prepareAction","actionCreator","prepared","__spreadValues","executeReducerBuilderCallback","builderCallback","defaultCaseReducer","actionsMap","actionMatchers","builder","addCase","typeOrActionCreator","addMatcher","matcher","addDefaultCase","nanoid","commonProperties","miniSerializeError","simpleError","unwrapResult","rejectedWithValue","alm","_typeof","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","fetchCount","incrementAsync","typePrefix","payloadCreator","requestId","__spreadProps","requestStatus","serializeError","condition","AC","AbortController","throwIfAborted","class_1","extra","abortReason","idGenerator","abortController","abortedPromise","_","started","conditionResult","getPendingMeta","race","rejectWithValue","RejectWithValue","fulfillWithValue","FulfillWithMeta","finalAction","err_1","dispatchConditionRejection","unwrap","createAsyncThunk","counterSlice","_reducer","initialState","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","buildReducer","extraReducers","_f","finalCaseReducers","mapOrBuilderCallback","getInitialState","finalActionMatchers","finalDefaultCaseReducer","isStateFunction","frozenInitialState_1","caseReducers","reducer2","cr","caseReducer","isDraft2","isDraftable2","createNextState2","createReducer","reducerName","prepareCallback","maybeReducerWithPrepare","prepare","actions","createSlice","increment","decrement","incrementByAmount","rootReducer","curriedGetDefaultMiddleware","devTools","_g","_h","enhancers","finalMiddleware","middlewareEnhancer","finalCompose","compose2","trace","storeEnhancers","configureStore","counter","_arrayLikeToArray","_unsupportedIterableToArray","SongContext","isPlaying","Song","_ref$isPlaying","_ref$bpm","_ref$swing","_ref$swingSubdivision","_ref$volume","isMuted","_ref$isMuted","buildSequencerStep","usePrevious","TrackContext","effectsChain","onInstrumentsUpdate","onAddToEffectsChain","onRemoveFromEffectsChain","TrackConsumer","steps","_ref$steps","_ref$pan","_ref$subdivision","_ref$effects","onStepPlay","setEffectsChain","instruments","setInstruments","sequencer","instrumentsRef","sequencerSteps","prevSequencerSteps","instrument","triggerAttackRelease","removeAll","newInstruments","effect","prevEffectsChain","Track","InstrumentConsumer","_ref$type","_ref$polyphony","_ref$notes","onLoad","instrumentRef","trackChannelBase","prevNotes","prevType","buildSynthOptions","synth","prevNote","triggerAttack","triggerRelease","prevSamples","isFirstSamplerInit","prevSampleKeys","addSampleKeys","loadSamplePromises","sample","Instrument","EffectConsumer","_ref$delayTime","_ref$feedback","_ref$wet","Effect","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","handler","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","URL","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","constructible","isConstructible","getValueForKey","pickElementFromSet","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","_setPrototypeOf","subClass","superClass","ReferenceError","_possibleConstructorReturn","Derived","hasNativeReflectConstruct","sham","Super","NewTarget","DEFAULT_OPTIONS","fftSize","maxDecibels","minDecibels","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","DOMException","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","_createForOfIteratorHelper","allowArrayLike","it","normalCompletion","didErr","_e2","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","isAudioBufferSourceNode","parameters","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","ignoreDuplicates","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","channelData","onaudioprocess","chnnlDt","inputBuffer","visitEachAudioNodeOnce","cycles","visitor","counts","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addConnectionToAudioParamOfAudioContext","isOffline","eventListeners","isActive","nativeAudioParam","partialConnection","deleteActiveInputConnectionToAudioParam","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","entries","numberOfInputs","numberOfOutputs","parameterData","processorOptions","copyFromChannel","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","arrays","getAudioWorkletProcessor","nativeOfflineAudioContext","nodeToProcessorMap","nativeAudioWorkletNode","processBuffer","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","processedBuffer","audioNodeConnections","audioWorkletProcessor","prmtrs","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","ErrorEvent","colno","filename","lineno","disableNormalization","detachArrayBuffer","arrayBuffer","closeAndResolve","close","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","createInvalidStateError","createInvalidAccessError","filterBuffer","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","Float64Array","convertedFeedforward","filteredBuffer","fill","testPromiseSupport","uint32Array","Uint32Array","decodeAudioData","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","round","log2","cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","onmessageerror","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","interceptConnections","original","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","denominator","multiply","evaluatePolynomial","coefficient","ongoingTests","testResults","contextStore","audioNodeConnectionsStore","unit32Array","audioParamConnectionsStore","createNativeScriptProcessorNode","bufferSize","createNotSupportedError","createUnknownError","getFirstSample","isDCCurve","overwriteAccessors","createGetter","createSetter","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","setValueAtTime","wrapEventListener","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","_a","createGetAudioNodeTailTime","cacheTestResult","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","audioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","createAnalyserNode","renderedNativeAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","nativeOfflineAudioContextConstructor","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","wrappedEventListener","createEventTargetConstructor","nativeAudioContextConstructor","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","_nativeAudioNode","isPassive","isNewConnectionToAudioNode","isNewConnectionToAudioParam","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","nextLink","isDelayNode","mergedCycles","nestedCycles","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","analyserNodeRenderer","_nativeAnalyserNode","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","createNativeAudioBufferSourceNodeFactory","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","automationEventList","audioParamRenderer","cancelAndHoldAtTime","flush","previousLastEvent","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","Number","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","wrappedListener","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","isNodeOfNativeOfflineAudioContext","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","biquadFilterNodeRenderer","_Q","_detune","_frequency","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","createChannelMergerNodeRenderer","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelMergerNodeConstructor","channelMergerNodeRenderer","createChannelMergerNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","channelSplitterNodeRenderer","createChannelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConstantSourceNodeRendererFactory","constantSourceNodeConstructor","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","createNativeConvolverNode","nativeConvolverNode","createConvolver","createNativeConvolverNodeFactory","createConvolverNodeRenderer","renderedNativeConvolverNodes","createConvolverNode","renderedNativeConvolverNode","createConvolverNodeRendererFactory","convolverNodeConstructor","convolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","createDelayNodeRenderer","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDelayNodeRendererFactory","delayNodeConstructor","delayNodeRenderer","createDelayNodeConstructor","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","dynamicsCompressorNodeConstructor","dynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","createGainNodeRenderer","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGainNodeRendererFactory","gainNodeConstructor","gainNodeRenderer","createGainNodeConstructor","createNativeIIRFilterNodeFaker","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","nativeIIRFilterNodeFaker","omega","cos","sin","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","createIIRFilterNodeRendererFactory","createNativeIIRFilterNode","createNativeIIRFilterNodeFactory","iIRFilterNodeConstructor","iirFilterNodeRenderer","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createAudioListener","nativeListener","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","constantSourceNode","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","createNativePeriodicWave","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","periodicWaveConstructor","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createPeriodicWaveConstructor","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","createNativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","stereoPannerNodeRenderer","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","createWaveShaperNode","renderedNativeWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","waveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","currentFrame","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","addAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","patchedAudioWorkletProcessor","memberDefinition","bufferRegistration","blob","createObjectURL","addModule","nativeContextOrBackupOfflineAudioContext","finally","revokeObjectURL","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","createAddAudioWorkletModule","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","createEvaluateSource","createAbortError","fetch","createFetchSource","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","audioWorkletNode","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","mediaElement","createMediaElementAudioSourceNodeConstructor","createMediaElementSource","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","createNativeMediaStreamTrackAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","nativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","audioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","suspend","createAudioContextConstructor","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","renderedNativeAudioWorkletNodeOrGainNode","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","audioWorkletNodeConstructor","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","audioWorkletNodeRenderer","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","createNativeOfflineAudioContext","createMinimalAudioContextConstructor","createCreateNativeOfflineAudioContext","createStartRendering","offlineAudioContextConstructor","createMinimalOfflineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_nativeOfflineAudioContext","createOfflineAudioContextConstructor","isAnyAudioContext","createIsAnyAudioContext","isAnyAudioNode","audioNodeStore","createIsAnyAudioNode","isAnyAudioParam","createIsAnyAudioParam","isAnyOfflineAudioContext","createIsAnyOfflineAudioContext","assert","statement","assertRange","gte","lte","assertContextRunning","defaultLogger","isUndef","isDefined","isNote","createAudioContext","stdAudioContext","createOfflineAudioContext","stdOfflineAudioContext","theWindow","hasAudioContext","_superPropBase","receiver","__decorate","decorators","decorate","__awaiter","_arguments","toFixed","_worker","_timeout","_createWorker","terminate","_disposeClock","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","optionsFromArguments","argsArray","objKey","partOfDefaults","defaultArg","omitFromObject","omit","debug","_wasDisposed","EPSILON","GT","GTE","EQ","LT","abs","clamp","Timeline","getDefaults","increasing","lastValue","_search","diff","testEvent","_iterate","notifyNewContext","onContextInit","notifyCloseContext","onContextClose","closeContext","eventName","on","off","constr","BaseContext","_constants","_timeouts","_initialized","_workletModules","_ticker","emit","_timeoutLoop","_setLatencyHint","feedForward","initialize","_transport","_draw","stdAudioWorkletNode","createAudioWorkletNode","rawContext","hint","lookAheadValue","firstEvent","intervalFn","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_options","_url","_fn","_id","_interval","readOnly","noOp","ToneAudioBuffer","getContext","doneLoading","downloads","multiChannelArray","chanNum","channelArray","startSamples","retBuffer","subarray","matches","extensions","ext","supportsType","canPlayType","OfflineContext","_duration","asynchronous","yieldEvery","workletsAreReady","_renderClock","dummyContext","globalContext","setContext","printString","intervalToFrequencyRatio","ftom","ftomf","TimeBaseClass","defaultUnits","_getExpressions","_frequencyToUnits","_ticksToUnits","parseInt","_beatsToUnits","dot","numericValue","_secondsToUnits","fromType","_noArg","typeName","quantity","transport","TimeClass","quantTo","nextSubdivision","subdiv","ideal","notation","quarterTime","sixteenthString","FrequencyClass","mtof","intervals","transpose","setA4","TransportTimeClass","ToneWithContext","defaultContext","attribute","member","_getPartialProperties","StateTimeline","setStateAtTime","Param","overridden","_minOutput","_param","_swappable","swappable","_minValue","_maxValue","_toType","getValueAtTime","_fromType","_is","LN10","computedTime","_assertRange","getAfter","beforeValue","getBefore","_linearInterpolate","_exponentialInterpolate","_exponentialApproach","setRampPoint","exponentialApproachValueAtTime","startingValue","segTime","valueAtTime","sampleTime","exponentialRampTo","linearRampTo","subdivisions","forEachAfter","v1","t1","ToneAudioNode","_internalChannels","nodeList","_isAudioNode","_getInternalNodes","_getChannelProperties","_setChannelProperties","inputNum","toDestination","nodes","connectSeries","outputNumber","_gainNode","OneShotSource","_stopTime","getStateAtTime","_stopGain","targetRampTo","additionalTail","_stopSource","disposeCallback","requestIdleCallback","ToneConstantSource","_startGain","Signal","override","_constantSource","connectSignal","rampTo","TickParam","_multiplier","multiplier","computedValue","prevEvent","_getTicksUntilEvent","computedVal","onTheLineEvent","currentTick","getTicksAtTime","getTimeOfTick","getDurationOfTicks","TickSignal","ticksToTime","timeToTicks","TickSource","_tickOffset","setTicksAtTime","getLastState","forEachBetween","getSecondsAtTime","forEachTickBetween","maxStartTime","Clock","_lastUpdate","_tickSource","pause","mixin","Delay","maxDelayInSeconds","_delayNode","ToneAudioBuffers","_buffers","_loadingCount","_bufferLoaded","TicksClass","Draw","expiration","anticipation","_drawLoop","_animationFrame","cancelAnimationFrame","draw","IntervalTimeline","_root","insert","updateHeight","_rebalance","_removeNode","forEachFrom","_setRoot","_replaceNodeInParent","getBalance","_rotateLeft","_rotateRight","traverse","searchAfter","Volume","Destination","TimelineValue","TransportEvent","_eventId","_once","TransportRepeatEvent","_currentId","_nextId","_boundRestart","_createEvents","scheduleOnce","Transport","_syncedSignals","ppq","_clock","_processTick","_bindClockEvents","_swingTicks","forEachAtTime","_addEvent","eventId","computedAfter","offsetTicks","computedFreq","ratioSignal","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","schedule","_start","immediate","restart","getNextState","_stop","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","computedOffset","generateWaveform","ToneOscillatorNode","_oscillator","_wave","syncSignal","unsyncSignal","_periodicWaveCache","find","arrayA","arrayB","oscProps","isBasicType","_getCachedPeriodicWave","wave","_getRealImaginary","fullPartials","_inverseFFT","SignalOperator","WaveShaper","_shaper","setMap","normalized","AudioToGain","_norm","Multiply","_mult","_modulationScale","_modulationNode","_carrier","_modulator","_widthGate","_triangle","_oscillators","_forEach","sourceType","_pulse","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","_createNewOscillator","_getOscType","oscType","OscConstructor","blockTime","valueMap","propertyKey","newValue","timeRange","Player","_activeSources","_onload","origDuration","_onSourceEnd","implicitEnd","GainToAudio","Envelope","_sig","direction","curveName","EnvelopeCurves","_getCurve","_attackCurve","_setCurve","_releaseCurve","originalAttack","attackRate","remainingDistance","decayValue","attackPortion","envelopeDuration","totalDuration","sustainTime","clone","curveLen","sineWave","invertCurve","_original_triggerAttack","_original_triggerRelease","_syncState","_syncMethod","changed","timePosition","Monophonic","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","Synth","computedAttack","computedDecay","MembraneSynth","hertz","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","Sampler","midiFloat","remainder","_findClosest","CrossFade","_panner","_split","_g2a","fade","getConstant","_dryWet","effectSend","Panner","workletName","FeedbackEffect","_feedbackGain","FeedbackDelay","connectEffect","Solo","_allSolos","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","Channel","_solo","_panVol","muted","buses","bus","_getBus","Listener","actx","osc1","gain1","gain2","setDelay","delayFeedback","setDelayFeedback","delayEffect","playNote","className","onChange","playHead","setPlayHead","delayWet","setDelayWet","filterWet","setFilterWet","monoVolume","setMonoVolume","setIsPLaying","tempo","setTempo","setVolume","play","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","reportWebVitals"],"sourceRoot":""}